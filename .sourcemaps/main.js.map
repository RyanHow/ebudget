{"version":3,"sources":["../../src/data/transactions/init-budget-transaction.ts","../../src/demo/demo-setup.ts","../../src/data/records/budget.ts","../../src/modals/add-edit-category/add-edit-category.ts","../../src/data/processors/category-simple-weekly-processor.ts","../../src/data/transactions/init-category-simple-weekly-transaction.ts","../../src/modals/add-edit-transaction/add-edit-transaction.ts","../../src/modals/add-edit-split-transfer/add-edit-split-transfer.ts","../../src/modals/add-edit-transfer/add-edit-transfer.ts","../../src/pages/dev/dev.ts","../../src/services/logger-ui-notifier-appender.ts","../../src/app/build-info.ts","../../src/pages/category/category.ts","../../src/services/currency-formatter.ts","../../src/modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly.ts","../../src/modals/add-edit-split-transaction/add-edit-split-transaction-line.ts","../../src/modals/add-edit-split-transfer/add-edit-split-transfer-line.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/services/logger.ts","../../src/services/notifications.ts","../../src/db/no-persistence-provider.ts","../../src/components/currency-format.ts","../../src/data/transactions/init-category-transaction.ts","../../src/engine/processor.ts","../../src/data/transactions/init-simple-transaction.ts","../../src/data/transactions/create-split-transaction.ts","../../src/data/transactions/create-split-transfer.ts","../../src/data/transactions/init-category-transfer-transaction.ts","../../src/demo/demo-player.ts","../../src/demo/demo-ui.ts","../../src/services/logger-storage-appender.ts","../../src/services/autofocus.ts","../../src/modals/add-budget/add-budget.ts","../../src/services/replication-service.ts","../../src/modals/share-budget/share-budget.ts","../../src/pages/home/home.ts","../../src/app/app-ready.ts","../../src/bank/bank-provider-manager.ts","../../src/data/processors/account-balance.ts","../../src/data/transactions/create-account-transaction.ts","../../src/data/records/bank-transaction.ts","../../src/data/transactions/merge-bank-transactions.ts","../../src/bank/provider-interface.ts","../../src/bank/providers/anz-mobile-web-1.ts","../../src/bank/providers/mock-data-provider.ts","../../src/data/records/transaction-reconciliation.ts","../../src/data/transactions/create-transaction-reconciliation.ts","../../src/demo/demo-service.ts","../../src/app/app.component.ts","../../src/app/app-exception-handler.ts","../../src/modals/add-edit-account/add-edit-account.ts","../../src/bank/standard-host-interface.ts","../../src/bank/transaction-sync.ts","../../src/bank/bank-sync.ts","../../src/modals/view-bank-transaction/view-bank-transaction.ts","../../src/pages/bank/bank.ts","../../src/pages/account/account.ts","../../src/pages/budget-settings/budget-settings.ts","../../src/services/update-check.ts","../../src/pages/about/about.ts","../../src/pages/settings/settings.ts","../../src/pages/notifications/notifications.ts","../../src/components/main-menu-content/main-menu-content.ts","../../src/components/notification-list/notification-list.ts","../../src/components/main-menu-icon/main-menu-icon.ts","../../src/services/updated-check.ts","../../src/components/currency-field.ts","../../src/components/error-label.ts","../../src/components/replication-error-display.ts","../../src/components/price-format.ts","../../src/components/currency-display.ts","../../src/components/date-format.ts","../../src/components/cute-progress-bar.ts","../../src/app/app.module.ts","../../src/app/app.module.ngfactory.ts","../../src/engine/engine.ts","../../src/engine/engine-factory.ts","../../node_modules/moment/locale ^/.*$","../../src/services/utils.ts","../../src/data/records/transaction.ts","../../src/data/records/category.ts","../../src/db/transaction.ts","../../src/db/transaction-serializer.ts","../../src/data/records/account.ts","../../src/db/local-storage-persistence-provider.ts","../../src/db/sql-storage-persistence-provider.ts","../../src/db/persistence-provider-manager.ts","../../src/services/configuration-service.ts","../../src/pages/budget/budget.ts","../../src/db/record.ts","../../src/services/editor-provider.ts","../../src/db/transaction-processor.ts","../../src/services/chunked-task.ts","../../src/db/db.ts","../../src/db/dbms.ts","../../src/modals/add-edit-split-transaction/add-edit-split-transaction.ts"],"names":["__WEBPACK_IMPORTED_MODULE_2__services_logger__","__webpack_require__","__extends","this","_super","__WEBPACK_IMPORTED_MODULE_8__db_transaction_serializer__","__decorate","decorators","target","key","desc","__WEBPACK_IMPORTED_MODULE_0__db_record__","d","__webpack_exports__","init_category_simple_weekly_transaction_InitCategorySimpleWeeklyTransaction","init_category_simple_weekly_transaction___extends","__WEBPACK_IMPORTED_MODULE_8_big_js__","__WEBPACK_IMPORTED_MODULE_8_big_js___default","n","__WEBPACK_IMPORTED_MODULE_9__add_edit_split_transfer_line__","__WEBPACK_IMPORTED_MODULE_7_big_js__","__WEBPACK_IMPORTED_MODULE_7_big_js___default","__WEBPACK_IMPORTED_MODULE_11__services_utils__","BuildInfo","__WEBPACK_IMPORTED_MODULE_1__components_currency_format__","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","keys","module","exports","id","Logger","__WEBPACK_IMPORTED_MODULE_3__currency_formatter__","NoPersistenceProvider","__WEBPACK_IMPORTED_MODULE_1__records_category__","Processor","__WEBPACK_IMPORTED_MODULE_2_big_js__","__WEBPACK_IMPORTED_MODULE_2_big_js___default","DemoPlayer","__WEBPACK_IMPORTED_MODULE_0__angular_core__","Autofocus","replication_service___decorate","share_budget___decorate","app_ready___decorate","create_account_transaction___extends","bank_transaction___extends","merge_bank_transactions___extends","BankAccount","__awaiter","thisArg","_arguments","P","generator","MockDataProvider","transaction_reconciliation___extends","create_transaction_reconciliation___extends","demo_service___decorate","app_component___extends","standard_host_interface___decorate","bank_sync___decorate","update_check___decorate","updated_check___decorate","PriceFormat","engine_factory_EngineFactory","webpackContext","webpackContextResolve","map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","Object","DbTransaction","__WEBPACK_IMPORTED_MODULE_1__services_logger__","LocalStoragePersistenceProvider","persistence_provider_manager_PersistenceProviderManager","__WEBPACK_IMPORTED_MODULE_5__ionic_native_secure_storage__","__WEBPACK_IMPORTED_MODULE_9__services_logger__","Record","__WEBPACK_IMPORTED_MODULE_2__logger__","TransactionProcessor","ChunkedTask","dbms_Dbms","__WEBPACK_IMPORTED_MODULE_9__add_edit_split_transaction_line__"],"mappings":"wGAAAA,EAAAC,EAAA,IAAAC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAa2B,SAAAE,ulBAAA,mwBCb3BC,yDAAAJ,oBAAA,IAAAK,WAAAH,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,6xDAqDe,unHAAA,2yBCrDf,IAAAC,EAAAV,EAAA,IAAAC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAWY,SAAAE,oKAAA,6GCXZH,EAAA,GAc0B,6sCAAA,oHCd1BC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAgBmC,SAAAE,mnBAAA,cChBnCH,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAAC,IAAA,IAAAC,EAAAZ,MAAAA,KAAAD,WAAA,wSAAA,KAeyC,SAAAE,g8CAAA,8LCfzCY,EAAAf,EAAA,IAAAgB,EAAAhB,EAAAiB,EAAAF,KAkB6B,owDAAA,qJClB7BG,EAAAlB,EAAA,OAmB+B,68FAAA,4HCnB/BmB,EAAAnB,EAAA,IAAAoB,EAAApB,EAAAiB,EAAAE,KAiB0B,yrDAAA,oKCjB1BE,EAAArB,EAAA,MAqBa,+tFAAA,qGClB+B,2/hBAAA,KA4Nd,ucAAA,sDC/N9BA,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAAU,IAAA,IAAAA,EAAe,+BAAA,yUCAftB,EAAA,GA2BkB,klHAAA,MA8HG,+PAAA,8ECzJrBuB,EAAAvB,EAAA,OAQuB,yGAAA,8HCRvBmB,EAAAnB,EAAA,IAAAoB,EAAApB,EAAAiB,EAAAE,KAiBsC,0pCAAA,qFCjBtCnB,EAAA,SAasC,mqCAAA,qFCbtCA,EAAA,SAamC,olCAAA,sBCbnC,SAAAwB,EAAAC,GAGA,OAAAC,QAAAC,UAAAC,KAAA,WACA,MAAA,IAAAC,MAAA,uBAAAJ,EAAA,QAGAD,EAAAM,KAAA,WAA4C,UAC5CN,EAAAG,QAAAH,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,uBCVA,SAAAT,EAAAC,GAGA,OAAAC,QAAAC,UAAAC,KAAA,WACA,MAAA,IAAAC,MAAA,uBAAAJ,EAAA,QAGAD,EAAAM,KAAA,WAA4C,UAC5CN,EAAAG,QAAAH,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,qECVA,IAAAC,EAAY,0vCAAA,sCAuGM,8bAAA,KA4BS,2XAAA,yKCnI3BC,EAAAnC,EAAA,KAAAK,EAAAH,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,6bAmBmB,o7CAAA,mMCnBnBT,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAAwB,IAAA,IAAAA,EAA2B,0xCAAA,qECA3BpC,EAAA,GAAA,MAQiB,00CAAA,iFCRjBqC,EAAArC,EAAA,IAAAC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAY6B,SAAAE,0uBAAA,wCCZ7BH,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAA0B,IAAA,IAAAA,EAAe,+BAAA,yFCAfC,EAAAvC,EAAA,IAAAwC,EAAAxC,EAAAiB,EAAAsB,GAAAtC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAa2B,SAAAE,g5BAAA,4FCb3BoC,EAAAvC,EAAA,IAAAwC,EAAAxC,EAAAiB,EAAAsB,GAAAtC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAa4B,SAAAE,0sCAAA,4FCb5BoC,EAAAvC,EAAA,IAAAwC,EAAAxC,EAAAiB,EAAAsB,GAAAtC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAayB,SAAAE,s/CAAA,4FCbzBoC,EAAAvC,EAAA,IAAAwC,EAAAxC,EAAAiB,EAAAsB,GAAAtC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAaqC,SAAAE,i+CAAA,wCCbrCH,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAA6B,IAAA,IAAAA,EAAgB,u8CAAA,qECAhB,IAAAC,EAAA1C,EAAA,GAAAK,EAAAH,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,6bAUY,4pGAAA,oICTe,s/BAAA,grjPCD3BkC,GAAe,gOAAA,MCYK,oWAAA,sFCZpBC,GAAA1C,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,+bAmBiB,mlSAAA,uSAucP,+BAAA,MAMS,gGAAA,wBChenBoC,GAAA3C,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,kcAoB2C,u9JAAA,mvBCJ7B,0mBAAA,qBChBdqC,GAAA5C,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,+bAUc,iGAAA,yDCVd,OAOyB,mYAAA,0ICPzBR,GAAAC,MAAAA,KAAAD,WAAA,wSAAA,MAgB6B,SAAAE,0xBAAA,OChB7B4C,GAAA7C,MAAAA,KAAAD,WAAA,wSAAA,MAc8B,SAAAE,6/CAAA,gBCd9B6C,GAAA9C,MAAAA,KAAAD,WAAA,wSAAA,MAWqB,SAAAE,qPAAA,OCXrB8C,GAAA/C,MAAAA,KAAAD,WAAA,wSAAA,MAe2B,SAAAE,usHAAA,8CCf3B+C,GAAiB,+BAAA,MAMW,+BAAA,sBCN5BC,GAAAjD,MAAAA,KAAAiD,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,0xCAuC2B,0lLAAA,GCvC3BC,GAAsB,ovFAAA,GCAtBC,GAAAvD,MAAAA,KAAAD,WAAA,wSAAA,MAW+B,SAAAE,oTAAA,OCX/BuD,GAAAxD,MAAAA,KAAAD,WAAA,wSAAA,MAeqC,SAAAE,y/EAAA,qCCfrCwD,GAAAzD,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,+bAeiB,0+BAAA,sOCfjBmD,GAAA1D,MAAAA,KAAAD,WAAA,wSAAA,MAsDS,q5EAAA,MAwGqB,SAAAE,oMAAA,UC7JL,uLAAA,yBCiBA,6yFAAA,aClBzB0D,GAAA3D,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,+bAY2B,4qBAAA,sKCZ3BP,MAAAA,KAAAD,WAAA,qKAAA,gBA8BqB,wkHAAA,GC9BrB6D,GAAA5D,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,8vDAiDc,8vBAAA,gSC9BgB,kvIAAA,q0CCoChB,swDAAA,MCnCG,8mBAAA,MCGO,shEAAA,aCvBxBsD,GAAA7D,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,+bAiBiB,o/GAAA,6VCHF,myCAAA,gBCFG,iEAAA,gBCDK,2SAAA,8CCcF,00EAAA,MCdC,oSAAA,MCAJ,oDAAA,GCXlBuD,GAAA9D,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,+bAgBkB,+VAAA,mPCFC,iyBAAA,gBCFH,0TAAA,MCCa,shBAAA,GCb7BwD,GAAiB,i7EAAA,MCWI,q7BAAA,MCHJ,4KAAA,cCEI,mHAAA,qCCgEN,kCAAA,u3SCoCQ,SAAA9D,q8hBAAA,wfC1GX,i7EAAA,yBCJZH,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAAsD,IAAA,IAAA7D,EAAAH,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,6bAcmB,8SAAA,2OC0NnB,SAAA0D,EAAA1C,GACA,OAAAzB,EAAAoE,EAAA3C,IAEA,SAAA2C,EAAA3C,GACA,IAAAQ,EAAAoC,EAAA5C,GACA,KAAAQ,EAAA,GACA,MAAA,IAAAJ,MAAA,uBAAAJ,EAAA,MACA,OAAAQ,EA/OA,IAAAoC,GACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,KAWAxO,EAAArC,KAAA,WACA,OAAA8Q,OAAA9Q,KAAAuC,IAEAF,EAAAxC,QAAAyC,EACArC,EAAAC,QAAAmC,EACAA,EAAAlC,GAAA,2FCrPW,s0BAAA,sGCDX,IAAAvB,EAAAV,EAAA,IAAAC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAWiB,SAAAE,8QAAA,uECXjB,IAAAO,EAAAV,EAAA,IAAAC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAWc,SAAAE,uOAAA,uECXd,IAAA0S,EAAmB,qEAAA,6ECAnBC,EAAA9S,EAAA,MAQ2B,+3BAAA,oECR3B,IAAAU,EAAAV,EAAA,IAAAC,EAAAC,MAAAA,KAAAD,WAAA,wSAAA,KAWa,SAAAE,sNAAA,kDCXb4S,EAAqC,qgDAAA,qBCCF,siHAAA,8CCDnC/S,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAAoS,IAAA,IAAA3S,EAAAH,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,6bAkBgC,scAAA,uXClBhCwS,EAAAjT,EAAA,KAAAK,EAAAH,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,6bAemB,83HAAA,iZCfnByS,EAAAlT,EAAA,MAmBgB,wrCAAA,oCCnBhBA,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAAuS,IAAA,IAAAA,EAAY,yFAAA,uHCAZC,EAAApT,EAAA,IAAAK,EAAAH,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,6bAYoB,mdAAA,8GAyBD,+BAAA,8CCrCnB4S,EAA0B,q4CAAA,WCA1BC,EAAiB,+QAAA,KAyBQ,suCAAA,KCtBjB,kgJAAA,6CCHRtT,EAAAW,EAAAC,EAAA,IAAA,WAAA,OAAA2S,IAAA,IAAAlT,EAAAH,MAAAA,KAAAG,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,6bAeU,k+BAAA,kTCfV+S,EAAAxT,EAAA,OAmBkC,ijHAAA","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { Budget } from '../records/budget';\nimport { Logger } from '../../services/logger';\nvar InitBudgetTransaction = (function (_super) {\n    __extends(InitBudgetTransaction, _super);\n    function InitBudgetTransaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InitBudgetTransaction.prototype.getTypeId = function () {\n        return 'InitBudgetTransaction';\n    };\n    InitBudgetTransaction.prototype.apply = function (tp) {\n        // TODO: Validation\n        var budget = tp.single(Budget);\n        budget.name = this.budgetName;\n        tp.table(Budget).update(budget);\n        tp.db.name(this.budgetName);\n        tp.mapTransactionAndRecord(this, budget);\n        Logger.get('InitBudgetTransaction').info(\"Applied InitBudgetTransaction for \" + budget.name);\n    };\n    InitBudgetTransaction.prototype.update = function (tp) {\n        this.apply(tp);\n    };\n    InitBudgetTransaction.prototype.undo = function (tp) {\n        tp.unsupported();\n    };\n    InitBudgetTransaction.prototype.deserialize = function (field, value) {\n        return value;\n    };\n    InitBudgetTransaction.prototype.toHumanisedString = function (env) {\n        return \"budget \" + this.budgetName;\n    };\n    return InitBudgetTransaction;\n}(DbTransaction));\nexport { InitBudgetTransaction };\n//# sourceMappingURL=init-budget-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-budget-transaction.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Injectable } from \"@angular/core\";\nimport { App } from \"ionic-angular\";\nimport { BudgetPage } from \"../pages/budget/budget\";\nimport { DevPage } from \"../pages/dev/dev\";\nimport { Dbms } from \"../db/dbms\";\nimport { PersistenceProviderManager } from \"../db/persistence-provider-manager\";\nimport { NoPersistenceProvider } from \"../db/no-persistence-provider\";\nimport { InitBudgetTransaction } from \"../data/transactions/init-budget-transaction\";\nimport { TransactionSerializer } from \"../db/transaction-serializer\";\nvar DemoSetup = (function () {\n    function DemoSetup(ionicApp, dbms, persistenceProviderManager, transactionSerializer) {\n        this.ionicApp = ionicApp;\n        this.dbms = dbms;\n        this.persistenceProviderManager = persistenceProviderManager;\n        this.transactionSerializer = transactionSerializer;\n        this.vars = {};\n        this.classMap = {\n            budget: BudgetPage,\n            dev: DevPage\n        };\n    }\n    DemoSetup.prototype.setup = function (script) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.script = script;\n                        this.currentLine = 0;\n                        this.nav = this.ionicApp.getActiveNavs()[0];\n                        return [4 /*yield*/, this.executeScript()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.fadeIn()];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DemoSetup.prototype.executeScript = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var line, _a, result, db, t, transaction;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this.currentLine >= this.script.length)\n                            return [2 /*return*/];\n                        line = this.script[this.currentLine].slice();\n                        this.currentLine++;\n                        Object.keys(this.vars).forEach(function (key) {\n                            for (var i = 1; i < line.length; i++) {\n                                line[i] = JSON.parse(JSON.stringify(line[i]).replace('${' + key + '}', _this.vars[key]));\n                            }\n                        });\n                        _a = line[0];\n                        switch (_a) {\n                            case 'eval': return [3 /*break*/, 1];\n                            case 'nav': return [3 /*break*/, 4];\n                            case 'root': return [3 /*break*/, 6];\n                            case 'create-db': return [3 /*break*/, 8];\n                            case 'transaction': return [3 /*break*/, 10];\n                            case 'import-db': return [3 /*break*/, 11];\n                        }\n                        return [3 /*break*/, 12];\n                    case 1:\n                        result = eval('(' + line[1] + ')');\n                        if (!(result instanceof Promise)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, result.then()];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3: return [3 /*break*/, 13];\n                    case 4: \n                    // TODO: How to get ID of budget / category, etc ?\n                    /* Maybe a get/set variable and then can inject those into the scripts using some find/replace, like ${variableName}\n                    Some command can implicitly set a variable\n                    Or have query commands to get a budget / category by name, etc ?\n        \n                    */\n                    return [4 /*yield*/, this.nav.push(this.classMap[line[1]], line.length > 2 ? line[2] : undefined, { animate: false })];\n                    case 5:\n                        // TODO: How to get ID of budget / category, etc ?\n                        /* Maybe a get/set variable and then can inject those into the scripts using some find/replace, like ${variableName}\n                        Some command can implicitly set a variable\n                        Or have query commands to get a budget / category by name, etc ?\n            \n                        */\n                        _b.sent();\n                        return [3 /*break*/, 13];\n                    case 6: return [4 /*yield*/, this.nav.setRoot(this.classMap[line[1]], line.length > 2 ? line[2] : undefined, { animate: false })];\n                    case 7:\n                        _b.sent();\n                        return [3 /*break*/, 13];\n                    case 8: return [4 /*yield*/, this.dbms.createDb()];\n                    case 9:\n                        db = _b.sent();\n                        this.vars['current-db-id'] = db.id;\n                        t = new InitBudgetTransaction();\n                        t.budgetName = line[1];\n                        db.applyTransaction(t);\n                        return [3 /*break*/, 13];\n                    case 10:\n                        transaction = this.transactionSerializer.newTransaction(line[1], line[2]);\n                        this.dbms.getDb(this.vars['current-db-id']).applyTransaction(transaction);\n                        return [3 /*break*/, 13];\n                    case 11: \n                    // TODO: Import a whole database json so we can just use a pre setup database ? - Maybe base this off an \"export / clone\" database command so we don't have to make the database Ids portable\n                    return [3 /*break*/, 13];\n                    case 12: throw new Error(\"Invalid Setup Command \" + line[0]);\n                    case 13: return [2 /*return*/, this.executeScript()];\n                }\n            });\n        });\n    };\n    DemoSetup.prototype.reset = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var persistenceProvider;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fadeOut()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.nav.popToRoot({ animate: false })];\n                    case 2:\n                        _a.sent();\n                        persistenceProvider = this.persistenceProviderManager.provide();\n                        if (!(persistenceProvider instanceof NoPersistenceProvider)) return [3 /*break*/, 4];\n                        persistenceProvider.reset();\n                        return [4 /*yield*/, this.dbms.init()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        //Close any modals\n                        this.vars = {};\n                        return [4 /*yield*/, this.setup(this.script)];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DemoSetup.prototype.fadeOut = function (instant) {\n        if (instant === void 0) { instant = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var ele_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!document.getElementById('demo-blank')) return [3 /*break*/, 1];\n                        document.getElementById('demo-blank').className = 'active';\n                        return [3 /*break*/, 5];\n                    case 1:\n                        ele_1 = document.createElement('div');\n                        ele_1.id = 'demo-blank';\n                        document.body.appendChild(ele_1);\n                        if (!instant) return [3 /*break*/, 2];\n                        ele_1.className = 'active';\n                        return [3 /*break*/, 5];\n                    case 2: return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(function () { ele_1.className = 'active'; resolve(); }); })];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 1000); })];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DemoSetup.prototype.fadeIn = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var ele;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!document.getElementById('demo-blank'))\n                            return [2 /*return*/];\n                        ele = document.getElementById('demo-blank');\n                        ele.className = '';\n                        return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 1000); })];\n                    case 1:\n                        _a.sent();\n                        ele.remove();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return DemoSetup;\n}());\nDemoSetup = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof App !== \"undefined\" && App) === \"function\" && _a || Object, typeof (_b = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _b || Object, typeof (_c = typeof PersistenceProviderManager !== \"undefined\" && PersistenceProviderManager) === \"function\" && _c || Object, typeof (_d = typeof TransactionSerializer !== \"undefined\" && TransactionSerializer) === \"function\" && _d || Object])\n], DemoSetup);\nexport { DemoSetup };\nvar _a, _b, _c, _d;\n//# sourceMappingURL=demo-setup.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/demo/demo-setup.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Record } from '../../db/record';\nvar Budget = (function (_super) {\n    __extends(Budget, _super);\n    function Budget() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Budget.prototype.tableName = function () {\n        return 'Budget';\n    };\n    Budget.prototype.initTable = function (table) {\n        // Nothing needed here:)\n    };\n    return Budget;\n}(Record));\nexport { Budget };\n//# sourceMappingURL=budget.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/budget.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController, App } from 'ionic-angular';\nimport { Category } from '../../data/records/category';\nimport { Dbms } from '../../db/dbms';\nimport { InitCategoryTransaction } from '../../data/transactions/init-category-transaction';\nimport { Component } from '@angular/core';\nvar AddEditCategoryModal = (function () {\n    function AddEditCategoryModal(viewCtrl, navParams, dbms, nav, alertController, appController) {\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.dbms = dbms;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.appController = appController;\n        this.viewCtrl = viewCtrl;\n        this.nav = nav;\n        this.budget = dbms.getDb(navParams.data.budgetId);\n        if (navParams.data.categoryId) {\n            this.editing = true;\n            this.category = this.budget.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\n            this.categoryName = this.category.name;\n            this.transaction = this.budget.transactionProcessor.findTransactionsForRecord(this.category, InitCategoryTransaction)[0];\n        }\n        else {\n            this.editing = false;\n        }\n    }\n    AddEditCategoryModal.prototype.submit = function (event) {\n        event.preventDefault();\n        var t;\n        if (!this.editing) {\n            t = new InitCategoryTransaction();\n        }\n        else {\n            t = this.transaction;\n        }\n        t.categoryName = this.categoryName;\n        this.budget.applyTransaction(t);\n        this.viewCtrl.dismiss();\n    };\n    AddEditCategoryModal.prototype.cancel = function () {\n        this.viewCtrl.dismiss();\n    };\n    AddEditCategoryModal.prototype.deleteCategoryConfirm = function () {\n        var _this = this;\n        var confirm = this.alertController.create({\n            title: 'Delete?',\n            message: 'Are you sure you want to delete this category and everything in it?',\n            buttons: [\n                {\n                    text: 'Cancel'\n                }, {\n                    text: 'Delete',\n                    role: 'destructive',\n                    handler: function () {\n                        confirm.dismiss().then(function () {\n                            _this.deleteCategory();\n                        });\n                        return false;\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    };\n    AddEditCategoryModal.prototype.deleteCategory = function () {\n        this.budget.deleteTransaction(this.transaction);\n        this.appController.getRootNav().pop({ animate: false, duration: 0 });\n        this.viewCtrl.dismiss();\n    };\n    return AddEditCategoryModal;\n}());\nAddEditCategoryModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-category.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _e || Object, typeof (_f = typeof App !== \"undefined\" && App) === \"function\" && _f || Object])\n], AddEditCategoryModal);\nexport { AddEditCategoryModal };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=add-edit-category.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-category/add-edit-category.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Processor } from '../../engine/processor';\nimport moment from 'moment';\nimport { Category } from '../records/category';\nimport { Transaction } from '../records/transaction';\nimport Big from 'big.js';\nimport { Utils } from \"../../services/utils\";\nvar CategorySimpleWeeklyProcessor = (function (_super) {\n    __extends(CategorySimpleWeeklyProcessor, _super);\n    function CategorySimpleWeeklyProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategorySimpleWeeklyProcessor.prototype.getTypeId = function () {\n        return 'CategorySimpleWeeklyProcessor';\n    };\n    CategorySimpleWeeklyProcessor.prototype.execute = function (tp) {\n        var _this = this;\n        var currentDate = Utils.nowYYYYMMDD(); // TODO: Replace with engine current Date ?\n        var transactions = tp.table(Transaction).find({ 'categoryId': this.category.id });\n        var weekDiff, startBalance;\n        try {\n            weekDiff = moment(this.balanceDate, 'YYYYMMDD').startOf('week').diff(moment(), 'week');\n            startBalance = new Big(weekDiff).abs().times(this.weeklyAmount).plus(this.balance);\n        }\n        catch (e) {\n            throw e;\n        }\n        this.category.balance = transactions.filter(function (t) { return !t.status || (t.status === 'realised' && t.date >= currentDate); }).reduce(function (a, b) {\n            if (b.date < _this.balanceDate)\n                return a;\n            return a.minus(b.amount);\n        }, startBalance);\n        tp.table(Category).update(this.category);\n    };\n    return CategorySimpleWeeklyProcessor;\n}(Processor));\nexport { CategorySimpleWeeklyProcessor };\n//# sourceMappingURL=category-simple-weekly-processor.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/processors/category-simple-weekly-processor.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { Category } from '../records/category';\nimport { CategorySimpleWeeklyProcessor } from '../processors/category-simple-weekly-processor';\nimport { Logger } from '../../services/logger';\nimport Big from 'big.js';\nvar InitCategorySimpleWeeklyTransaction = (function (_super) {\n    __extends(InitCategorySimpleWeeklyTransaction, _super);\n    function InitCategorySimpleWeeklyTransaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InitCategorySimpleWeeklyTransaction.prototype.getTypeId = function () {\n        return 'InitCategorySimpleWeeklyTransaction';\n    };\n    InitCategorySimpleWeeklyTransaction.prototype.apply = function (tp) {\n        // TODO: Validation\n        var table = tp.table(Category);\n        var categoryRecord = table.by('id', this.categoryId);\n        if (categoryRecord == null) {\n            InitCategorySimpleWeeklyTransaction.logger.info('Trying to processing category weekly transaction with invalid category. Skipping.');\n            return;\n        }\n        var processor = new CategorySimpleWeeklyProcessor();\n        processor.balance = this.balance;\n        processor.weeklyAmount = this.weeklyAmount;\n        processor.balanceDate = this.balanceDate;\n        processor.category = categoryRecord;\n        processor.transactionId = this.id;\n        categoryRecord.engine.processors.push(processor);\n        table.update(categoryRecord);\n        tp.mapTransactionAndRecord(this, categoryRecord);\n        // TODO: engine.execute ?? - needs to be called from elsewhere so it can be batched... but maybe have to fire an event here ?\n    };\n    InitCategorySimpleWeeklyTransaction.prototype.update = function (tp) {\n        this.undo(tp); // TODO: This will not handle a change in category (And maybe it shouldn't need to, but we need to verify it wasn't changed). it should undo the previous version of this transaction...\n        this.apply(tp);\n    };\n    InitCategorySimpleWeeklyTransaction.prototype.undo = function (tp) {\n        var _this = this;\n        var table = tp.table(Category);\n        var categoryRecord = table.by('id', this.categoryId);\n        if (categoryRecord == null) {\n            InitCategorySimpleWeeklyTransaction.logger.info('Trying to processing category weekly transaction with invalid category. Skipping.');\n            return;\n        }\n        // TODO: A better method of finding, or some centralised methods in engine rather than using the processors array directly...\n        var categorySimpleWeeklyProcessor = categoryRecord.engine.processors.find(function (processor) {\n            return processor.getTypeId() === 'CategorySimpleWeeklyProcessor' && processor.transactionId === _this.id;\n        });\n        categoryRecord.engine.processors.splice(categoryRecord.engine.processors.indexOf(categorySimpleWeeklyProcessor), 1);\n        table.update(categoryRecord);\n    };\n    InitCategorySimpleWeeklyTransaction.prototype.deserialize = function (field, value) {\n        if (field === 'balance')\n            return new Big(value);\n        if (field === 'weeklyAmount')\n            return new Big(value);\n        return value;\n    };\n    InitCategorySimpleWeeklyTransaction.prototype.toHumanisedString = function (env) {\n        if (env.action === 'apply') {\n            return \"set {{category name}} to \" + env.currencyFormatter(this.weeklyAmount) + \" per week\";\n        }\n        else if (env.action === 'update') {\n            return \"updated {{category name}} to \" + env.currencyFormatter(this.weeklyAmount) + \" per week\";\n        }\n        else {\n            return \"removed weekly amount of \" + env.currencyFormatter(this.weeklyAmount) + \" from category {{category name}}\";\n        }\n    };\n    return InitCategorySimpleWeeklyTransaction;\n}(DbTransaction));\nexport { InitCategorySimpleWeeklyTransaction };\nInitCategorySimpleWeeklyTransaction.logger = Logger.get('InitCategorySimpleWeeklyTransaction');\n//# sourceMappingURL=init-category-simple-weekly-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-category-simple-weekly-transaction.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController } from 'ionic-angular';\nimport { Category } from '../../data/records/category';\nimport { Transaction } from '../../data/records/transaction';\nimport { Dbms } from '../../db/dbms';\nimport { InitSimpleTransaction } from '../../data/transactions/init-simple-transaction';\nimport { Configuration } from '../../services/configuration-service';\nimport { Component } from '@angular/core';\nimport { Utils } from '../../services/utils';\nimport Big from 'big.js';\nvar AddEditTransactionModal = (function () {\n    function AddEditTransactionModal(configuration, viewCtrl, navParams, dbms, nav, alertController) {\n        this.configuration = configuration;\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.dbms = dbms;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.data = { expense: true };\n        this.viewCtrl = viewCtrl;\n        this.nav = nav;\n        this.budget = dbms.getDb(navParams.data.budgetId);\n        this.category = this.budget.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\n        if (navParams.data.transactionId) {\n            this.editing = true;\n            var transactionRecord = this.budget.transactionProcessor.table(Transaction).by('id', navParams.data.transactionId);\n            this.transaction = this.budget.transactionProcessor.findTransactionsForRecord(transactionRecord, InitSimpleTransaction)[0];\n            this.data.date = Utils.toIonicFromYYYYMMDD(this.transaction.date);\n            if (this.transaction.amount.cmp(Big(0)) < 0) {\n                this.data.expense = false;\n                this.data.amount = this.transaction.amount.times(-1).toString();\n            }\n            else {\n                this.data.amount = this.transaction.amount.toString();\n            }\n            this.data.description = this.transaction.description;\n        }\n        else {\n            this.editing = false;\n            this.data.date = Utils.nowIonic();\n        }\n    }\n    AddEditTransactionModal.prototype.submit = function (event) {\n        event.preventDefault();\n        var t;\n        if (!this.editing) {\n            t = new InitSimpleTransaction();\n        }\n        else {\n            t = this.transaction;\n        }\n        t.amount = new Big((this.data.amount).replace(',', ''));\n        if (!this.data.expense) {\n            t.amount = t.amount.times(-1);\n        }\n        t.date = Utils.toYYYYMMDDFromIonic(this.data.date);\n        t.description = this.data.description;\n        t.categoryId = this.category.id;\n        this.budget.applyTransaction(t);\n        this.viewCtrl.dismiss();\n    };\n    AddEditTransactionModal.prototype.cancel = function () {\n        this.viewCtrl.dismiss();\n    };\n    AddEditTransactionModal.prototype.deleteTransactionConfirm = function () {\n        var _this = this;\n        var confirm = this.alertController.create({\n            title: 'Delete?',\n            message: 'Are you sure you want to delete this transaction?',\n            buttons: [\n                {\n                    text: 'Cancel'\n                }, {\n                    text: 'Delete',\n                    role: 'destructive',\n                    handler: function () {\n                        confirm.dismiss().then(function () {\n                            _this.deleteTransaction();\n                        });\n                        return false;\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    };\n    AddEditTransactionModal.prototype.deleteTransaction = function () {\n        this.budget.deleteTransaction(this.transaction);\n        this.viewCtrl.dismiss();\n    };\n    AddEditTransactionModal.prototype.toggleExpense = function () {\n        this.data.expense = !this.data.expense;\n    };\n    return AddEditTransactionModal;\n}());\nAddEditTransactionModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-transaction.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _a || Object, typeof (_b = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object, typeof (_f = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _f || Object])\n], AddEditTransactionModal);\nexport { AddEditTransactionModal };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=add-edit-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-transaction/add-edit-transaction.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController, ModalController } from 'ionic-angular';\nimport { Category } from '../../data/records/category';\nimport { Transaction } from '../../data/records/transaction';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { CreateSplitTransfer } from '../../data/transactions/create-split-transfer';\nimport { Configuration } from '../../services/configuration-service';\nimport { Component } from '@angular/core';\nimport { Utils } from '../../services/utils';\nimport Big from 'big.js';\nimport { AddEditSplitTransferLineModal } from './add-edit-split-transfer-line';\nvar AddEditSplitTransferModal = (function () {\n    function AddEditSplitTransferModal(configuration, modalController, viewCtrl, navParams, engineFactory, nav, alertController) {\n        var _this = this;\n        this.configuration = configuration;\n        this.modalController = modalController;\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.engineFactory = engineFactory;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.engine = engineFactory.getEngineById(navParams.data.budgetId);\n        this.engine.getCategory(navParams.data.categoryId);\n        this.category = this.engine.db.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\n        this.categories = this.engine.getCategories('alphabetical');\n        // TODO: Validation that amounts must be equal\n        this.data = {};\n        this.data.lines = [];\n        if (navParams.data.transactionId) {\n            this.editing = true;\n            var transactionRecord = this.engine.db.transactionProcessor.table(Transaction).by('id', navParams.data.transactionId);\n            this.transaction = this.engine.db.transactionProcessor.findTransactionsForRecord(transactionRecord, CreateSplitTransfer)[0];\n            this.data.date = Utils.toIonicFromYYYYMMDD(this.transaction.date);\n            this.data.out = this.transaction.amounts[0].amount.cmp(Big(0)) >= 0;\n            this.data.accountId = this.transaction.accountId;\n            this.data.accountId2 = this.transaction.accountId2;\n            this.data.amount = this.totalAmount().toString();\n            this.data.description = this.transaction.description;\n            this.data.categoryId = this.transaction.categoryId;\n            this.transaction.amounts.forEach(function (l) {\n                _this.data.lines.push({ categoryId: l.categoryId, amount: l.amount.times(_this.data.out ? 1 : -1) + \"\" });\n            });\n        }\n        else {\n            this.editing = false;\n            this.data.out = true;\n            this.data.date = Utils.nowIonic();\n            this.data.lines.push({\n                categoryId: this.category.id,\n                amount: ''\n            });\n        }\n    }\n    AddEditSplitTransferModal.prototype.editLine = function (line) {\n        var modal = this.modalController.create(AddEditSplitTransferLineModal, {\n            parent: this,\n            lineIndex: this.data.lines.indexOf(line)\n        }, { showBackdrop: false, enableBackdropDismiss: false });\n        modal.present();\n    };\n    AddEditSplitTransferModal.prototype.totalAmount = function () {\n        return this.data.lines.map(function (line) { return line.amount; }).reduce(function (total, amount) { return new Big((amount || '0').replace(',', '')).plus(total); }, new Big('0')).abs();\n    };\n    AddEditSplitTransferModal.prototype.amountRemaining = function () {\n        return new Big((this.data.amount || '0').replace(',', '')).minus(this.totalAmount());\n    };\n    AddEditSplitTransferModal.prototype.newLine = function () {\n        this.data.lines.push({\n            categoryId: null,\n            amount: ''\n        });\n        this.editLine(this.data.lines[this.data.lines.length - 1]);\n    };\n    AddEditSplitTransferModal.prototype.submit = function (event) {\n        var _this = this;\n        event.preventDefault();\n        var t;\n        if (!this.editing) {\n            t = new CreateSplitTransfer();\n        }\n        else {\n            t = this.transaction;\n        }\n        t.date = Utils.toYYYYMMDDFromIonic(this.data.date);\n        t.description = this.data.description;\n        t.accountId = Number(this.data.accountId);\n        t.accountId2 = Number(this.data.accountId2);\n        t.categoryId = Number(this.data.categoryId);\n        // Always clear out the records in the transaction and not \"merge\" them\n        // Our indexes should be preserved...\n        t.amounts = [];\n        this.data.lines.forEach(function (line) {\n            t.amounts.push({\n                categoryId: line.categoryId,\n                amount: new Big((line.amount || '0').replace(',', '')).times(_this.data.out ? 1 : -1),\n            });\n        });\n        this.engine.db.applyTransaction(t);\n        this.viewCtrl.dismiss();\n    };\n    AddEditSplitTransferModal.prototype.cancel = function () {\n        this.viewCtrl.dismiss();\n    };\n    AddEditSplitTransferModal.prototype.deleteTransactionConfirm = function () {\n        var _this = this;\n        var confirm = this.alertController.create({\n            title: 'Delete?',\n            message: 'Are you sure you want to delete this entire transaction?',\n            buttons: [\n                {\n                    text: 'Cancel'\n                }, {\n                    text: 'Delete',\n                    role: 'destructive',\n                    handler: function () {\n                        confirm.dismiss().then(function () {\n                            _this.deleteTransaction();\n                        });\n                        return false;\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    };\n    AddEditSplitTransferModal.prototype.deleteTransaction = function () {\n        this.engine.db.deleteTransaction(this.transaction);\n        this.viewCtrl.dismiss();\n    };\n    AddEditSplitTransferModal.prototype.toggleOut = function () {\n        this.data.out = !this.data.out;\n    };\n    return AddEditSplitTransferModal;\n}());\nAddEditSplitTransferModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-split-transfer.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _a || Object, typeof (_b = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _b || Object, typeof (_c = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _e || Object, typeof (_f = typeof NavController !== \"undefined\" && NavController) === \"function\" && _f || Object, typeof (_g = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _g || Object])\n], AddEditSplitTransferModal);\nexport { AddEditSplitTransferModal };\nvar _a, _b, _c, _d, _e, _f, _g;\n//# sourceMappingURL=add-edit-split-transfer.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-split-transfer/add-edit-split-transfer.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController } from 'ionic-angular';\nimport { Transaction } from '../../data/records/transaction';\nimport { Dbms } from '../../db/dbms';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { InitCategoryTransferTransaction } from '../../data/transactions/init-category-transfer-transaction';\nimport { Component } from '@angular/core';\nimport { Utils } from '../../services/utils';\nimport Big from 'big.js';\nvar AddEditTransferModal = (function () {\n    function AddEditTransferModal(viewCtrl, navParams, dbms, engineFactory, nav, alertController) {\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.dbms = dbms;\n        this.engineFactory = engineFactory;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.data = {};\n        this.engine = engineFactory.getEngineById(navParams.data.budgetId);\n        this.budget = this.engine.db;\n        this.categories = this.engine.getCategories('alphabetical');\n        if (navParams.data.transactionId) {\n            this.editing = true;\n            var transactionRecord = this.budget.transactionProcessor.table(Transaction).by('id', navParams.data.transactionId);\n            this.transfer = this.budget.transactionProcessor.findAllTransactionsForRecord(transactionRecord)[0];\n            this.data.date = Utils.toIonicFromYYYYMMDD(this.transfer.date);\n            this.data.amount = this.transfer.amount + '';\n            this.data.description = this.transfer.description;\n            this.data.categoryFrom = this.transfer.fromCategoryId;\n            this.data.categoryTo = this.transfer.toCategoryId;\n        }\n        else {\n            this.editing = false;\n            this.transfer = new InitCategoryTransferTransaction();\n            this.data.categoryFrom = navParams.data.fromCategoryId;\n            this.data.date = Utils.nowIonic();\n        }\n    }\n    AddEditTransferModal.prototype.submit = function (event) {\n        event.preventDefault();\n        this.transfer.amount = new Big(this.data.amount);\n        this.transfer.date = Utils.toYYYYMMDDFromIonic(this.data.date);\n        this.transfer.description = this.data.description;\n        this.transfer.fromCategoryId = +this.data.categoryFrom;\n        this.transfer.toCategoryId = +this.data.categoryTo;\n        this.budget.applyTransaction(this.transfer);\n        this.viewCtrl.dismiss();\n    };\n    AddEditTransferModal.prototype.cancel = function () {\n        this.viewCtrl.dismiss();\n    };\n    AddEditTransferModal.prototype.deleteTransactionConfirm = function () {\n        var _this = this;\n        var confirm = this.alertController.create({\n            title: 'Delete?',\n            message: 'Are you sure you want to delete this transaction?',\n            buttons: [\n                {\n                    text: 'Cancel'\n                }, {\n                    text: 'Delete',\n                    role: 'destructive',\n                    handler: function () {\n                        confirm.dismiss().then(function () {\n                            _this.deleteTransaction();\n                        });\n                        return false;\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    };\n    AddEditTransferModal.prototype.deleteTransaction = function () {\n        this.budget.deleteTransaction(this.transfer);\n        this.viewCtrl.dismiss();\n    };\n    return AddEditTransferModal;\n}());\nAddEditTransferModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-transfer.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _c || Object, typeof (_d = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object, typeof (_f = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _f || Object])\n], AddEditTransferModal);\nexport { AddEditTransferModal };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=add-edit-transfer.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-transfer/add-edit-transfer.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { Dbms } from '../../db/dbms';\nimport { Logger } from '../../services/logger';\nimport { Configuration } from '../../services/configuration-service';\nimport { Notifications } from '../../services/notifications';\nimport { LoggerUINotifierAppender } from '../../services/logger-ui-notifier-appender';\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\nimport cronstrue from 'cronstrue';\nimport { DemoUI } from \"../../demo/demo-ui\";\nimport { DemoPlayer } from \"../../demo/demo-player\";\nimport { Utils } from \"../../services/utils\";\nvar DevPage = (function () {\n    function DevPage(nav, dbms, configuration, notifications, inAppBrowser) {\n        this.nav = nav;\n        this.dbms = dbms;\n        this.configuration = configuration;\n        this.notifications = notifications;\n        this.inAppBrowser = inAppBrowser;\n        this.testamount1 = 'hi there';\n        this.testamount3 = 'ASD';\n    }\n    Object.defineProperty(DevPage.prototype, \"testamount2\", {\n        get: function () {\n            return this._testamount2;\n        },\n        set: function (value) {\n            this._testamount2 = value.toUpperCase();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DevPage.prototype.toUpper3 = function (nv) {\n        this.testamount3 = nv.toUpperCase();\n    };\n    DevPage.prototype.ionViewDidEnter = function () {\n        this.randomFooterId = 'footer_' + Utils.randomChars(10);\n        var div = document.createElement('div');\n        div.innerHTML = '<div id=\"' + this.randomFooterId + '\" style=\"position:fixed; height:100px; z-index:100; background-color:gainsboro; left:0; right:0; bottom:0\"><button ion-button small (mousedown)=\"$event.preventDefault();\" (touchtap)=\"$event.preventDefault();\" (click)=\"testClick()\">Test Button :)</button></div>';\n        document.querySelector('.app-root').appendChild(div.firstChild);\n    };\n    DevPage.prototype.ionViewWillLeave = function () {\n        document.getElementById(this.randomFooterId).remove();\n    };\n    DevPage.prototype.testError = function () {\n        Logger.get(\"dev\").info({ message: \"about to throw an error\" }, \"And trying a multi part log before it\");\n        throw new Error('Muahahaha');\n    };\n    DevPage.prototype.testLogError = function () {\n        Logger.get(\"dev\").info({ message: \"about to log an error\" });\n        Logger.get('dev').error(\"Logging an error\");\n    };\n    DevPage.prototype.testPromiseRejection = function () {\n        Logger.get(\"dev\").info(\"Unhandled Promise Rejection Test\");\n        new Promise(function (resolve, reject) {\n            reject(\"Simulated Error\");\n        }).then(function () { Logger.get('dev').info('This should never be logged'); });\n    };\n    DevPage.prototype.openErrorHandler = function () {\n        LoggerUINotifierAppender.instance.handler.handle('Opening Error Handler');\n    };\n    DevPage.prototype.launchInAppBrowserTest1 = function () {\n        var browser = this.inAppBrowser.create('https://www.google.com', '_blank');\n        var subscription = browser.on('loadstop').subscribe(function (ev) {\n            var js = 'alert(5 + 7);location.href=\"http://www.example.com\";5 + 7;';\n            Logger.get(\"dev\").info(\"executing js: \" + js);\n            browser.executeScript({ code: js }).then(function (val) {\n                Logger.get(\"dev\").info(val);\n                alert(val);\n            }).catch(function (err) {\n                Logger.get(\"dev\").error(err.message, err);\n            });\n            subscription.unsubscribe();\n        });\n    };\n    DevPage.prototype.generateNotification = function () {\n        this.notifications.notify(\"Notification at \" + Date.now(), true);\n    };\n    DevPage.prototype.testClick = function () {\n        window.alert(':P');\n    };\n    DevPage.prototype.humanReadableCron = function () {\n        try {\n            return cronstrue.toString(this.cronInput);\n        }\n        catch (err) {\n            return err;\n        }\n    };\n    DevPage.prototype.demoTest = function () {\n        var demo = new DemoUI();\n        setTimeout(function () { return demo.moveTo('#dev-cron-input'); }, 1000);\n    };\n    DevPage.prototype.demoTest2 = function () {\n        var demoRunner = new DemoUI();\n        var demo = new DemoPlayer();\n        // TODO: Compress this (should just be able to call 'click' and it will do a move wait click to the location... Or call it iClick or something ?)\n        demo.queue('move', '#dev-generate-notification');\n        demo.queue('wait', 300);\n        demo.queue('click', '#dev-generate-notification');\n        demo.queue('wait', 2000);\n        demo.queue('move', '#dev-cron-input');\n        demo.queue('wait', 300);\n        demo.queue('click', '#dev-cron-input');\n        demo.queue('wait', 600);\n        demo.queue('type', '#dev-cron-input', '0 * 5 * *');\n        demo.queue('wait', 1600);\n        demo.queue('end');\n        demo.run(demoRunner);\n    };\n    return DevPage;\n}());\nDevPage = __decorate([\n    Component({\n        templateUrl: 'dev.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _b || Object, typeof (_c = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _c || Object, typeof (_d = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _d || Object, typeof (_e = typeof InAppBrowser !== \"undefined\" && InAppBrowser) === \"function\" && _e || Object])\n], DevPage);\nexport { DevPage };\nvar _a, _b, _c, _d, _e;\n//# sourceMappingURL=dev.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dev/dev.ts","import { BuildInfo } from '../app/build-info';\nimport { Logger } from './logger';\nimport { LoggerStorageAppender } from './logger-storage-appender';\nvar DefaultLoggerUINotifierAppenderHandler = (function () {\n    function DefaultLoggerUINotifierAppenderHandler() {\n        this.css = \"\\n        #error-overlay {\\n            position: fixed;\\n            z-index: 100000;\\n            top: 10px;\\n            bottom: 10px;\\n            left: 10px;\\n            right: 10px;\\n            box-sizing: border-box;\\n            color: white;\\n            white-space: nowrap;\\n            font-size: 20px;\\n        }\\n\\n        @media (min-width: 600px) and (min-height: 600px) {\\n            #error-overlay {\\n                top: 15%;\\n                bottom: 15%;\\n                left: 15%;\\n                right: 15%;\\n            }\\n        }\\n        \\n        #error-overlay:after {\\n            content: '';\\n            display: block;\\n            position: absolute;\\n            background-color: red;\\n            top: 0;\\n            bottom: 0;\\n            left: 0;\\n            right: 0;\\n            z-index: -1;\\n            box-shadow: 0 0 30px black;\\n        }\\n        #error-overlay:before {\\n            content: '';\\n            display: block;\\n            position: fixed;\\n            background-color: rgba(100,0,0,0.7);\\n            top: 0;\\n            bottom: 0;\\n            left: 0;\\n            right: 0;\\n            z-index: -1;\\n        }\\n        #error-overlay-nav {\\n            width: 100%;\\n            height: 100%;\\n            position: relative;\\n            overflow: hidden;\\n        }\\n        #error-overlay .error-page {\\n            display: inline-block;\\n            width: 100%;\\n            height: 100%;\\n            position: relative;\\n            white-space: normal;\\n            left: 0;\\n        }\\n        #error-overlay .error-page-animating {\\n            transition: left 0.3s;\\n        }\\n        #error-overlay .header {\\n            height: 70px;\\n            width: 100%;\\n            position: absolute;\\n            top: 0;\\n            text-align: center;\\n            background-color: white;\\n            color: red;\\n            white-space: nowrap;\\n            overflow: hidden;\\n        }\\n        #error-overlay .content {\\n            position: absolute;\\n            top: 70px;\\n            bottom: 100px;\\n            left: 0;\\n            right: 0;\\n            box-sizing: border-box;\\n            overflow: auto;\\n            padding: 20px;\\n        }\\n        #error-overlay .sad-icon {\\n            font-size: 40px;\\n            display: inline-block;\\n            width: 60px;\\n            height: 60px;\\n            transform: rotate(90deg);\\n            margin-top:-20px;\\n        }\\n        #error-overlay .error-buttons {\\n            position: absolute;\\n            bottom: 0;\\n            left: 0;\\n            right: 0;\\n            height: auto;\\n            transition: height 0.3s;\\n        }\\n        #error-overlay .error-buttons .error-link {\\n            padding-left: 20px;\\n            border-top: 1px white solid;\\n            line-height: 40px;\\n            cursor: pointer;\\n            font-size: 14px;\\n        }\\n        #error-overlay .error-button {\\n            position: relative;\\n            display: block;\\n            top: 0;\\n            width: 100%;\\n            height: 50px;\\n            line-height: 50px;\\n            white-space: nowrap;\\n            font-weight: bold;\\n            font-size: 20px;\\n            text-align: center;\\n            border-top: 1px white solid;\\n            cursor: pointer;\\n            transition: opacity 0.3s, top 0.3s;\\n            color: white;\\n            text-decoration: none;\\n        }\\n        #error-overlay .error-button:hover {\\n            background-color: rgba(255,255,255,0.2);\\n        }\\n        #error-overlay .error-button-disabled:hover, #error-overlay .error-button-disabled {\\n            cursor: auto;\\n            background-color: #ccc;\\n            color: #aaa;\\n        }\\n        #error-overlay .error-button-hidden {\\n            position: relative;\\n            top: 20px;\\n            opacity: 0;\\n            height: 0;\\n        }\\n        #error-contact-page label {\\n            display: block;\\n            margin-top: 20px;\\n        }\\n        #error-contact-page textarea {\\n            font-size: inherit;\\n            display: block;\\n            width: 100%;\\n            color: black;\\n            margin-top: 20px;\\n        }\\n        #error-contact-page input {\\n            vertical-align:middle;\\n            width: 30px;\\n            height: 30px;\\n        }\\n        #error-overlay #error-log-data {\\n            white-space: pre;\\n            font-size: 16px;\\n            font-family: monospace;\\n        }\\n        #error-overlay .success-icon {\\n            font-size: 150px;\\n            line-height: 150px;\\n            height: 150px;\\n            text-align: center;\\n            position: absolute;\\n            left: 0;\\n            right: 0;\\n            top: 50%;\\n            margin-top: -75px;\\n        }\\n    \";\n        this.html = \"\\n        <div id=\\\"dismiss-confirm-page\\\" class=\\\"error-page\\\">\\n            <div class=\\\"header\\\">\\n                <h1>Are You Sure?</h1>\\n            </div>\\n            <div class=\\\"content\\\">\\n                <div>We really don't recommend ignoring any errors, but sometimes you just have to try and get on with it, we understand.</div>\\n            </div>\\n            <div class=\\\"error-buttons\\\">\\n                <div id=\\\"dismiss-confirm-back-button\\\" class=\\\"error-button\\\">&lt; Go Back</div>\\n                <div id=\\\"dismiss-confirm-button\\\" class=\\\"error-link\\\">Close</div>\\n            </div>\\n        </div>\\n        <div id=\\\"error-main-page\\\" class=\\\"error-page\\\">\\n            <div class=\\\"header\\\">\\n                <h1><div class=\\\"sad-icon\\\">: (</div></h1>\\n            </div>\\n            <div class=\\\"content\\\">\\n                <div>Uh Oh! Something has gone terribly wrong. To make sure your budget isn't affected, we've stopped things here.</div>\\n                <br>\\n                <div>The best thing to do is send us some information about what has gone wrong so we can get busy fixing it. And if it keeps happening, to give you some support to get your budget up and running again.</div>\\n            </div>\\n            <div class=\\\"error-buttons\\\" style=\\\"height:90px\\\">\\n                <div id=\\\"goto-error-report-button\\\" class=\\\"error-button\\\">Next &gt;</div>\\n                <div id=\\\"show-other-options-button\\\" class=\\\"error-link\\\">Other Options</div>\\n                <div id=\\\"restart-button\\\" class=\\\"error-button error-button-hidden\\\">Restart App</div>\\n                <div id=\\\"dismiss-button\\\" class=\\\"error-button error-button-hidden\\\">Ignore</div>\\n            </div>\\n        </div>\\n        <div id=\\\"error-contact-page\\\" class=\\\"error-page\\\">\\n            <div class=\\\"header\\\">\\n                <h1>Can we get in touch?</h1>\\n            </div>\\n            <div class=\\\"content\\\">\\n                <label>Contact Information\\n                    <textarea id=\\\"error-contact-info\\\" placeholder=\\\"eg. me@email.com, a phone number and timezone/time to call, Skype, Hangouts, Facebook, etc.\\\"></textarea>\\n                </label>\\n                <label><input type=\\\"checkbox\\\" id=\\\"error-do-not-contact\\\"></input> Do not contact me</label>                \\n            </div>\\n            <div class=\\\"error-buttons\\\">\\n                <div id=\\\"error-contact-next-button\\\" class=\\\"error-button\\\">Next &gt;</div>\\n                <div id=\\\"error-contact-back-button\\\" class=\\\"error-link\\\">&lt; Go Back</div>\\n            </div>\\n        </div>\\n        <div id=\\\"error-privacy-page\\\" class=\\\"error-page\\\">\\n            <div class=\\\"header\\\">\\n                <h1>Privacy</h1>\\n            </div>\\n            <div class=\\\"content\\\">\\n                Unlike most companies, we don't want to collect all your information for marketing. We just want to keep you as a satisfied customer and build the best budgeting app possible.\\n                <br/><br/>\\n                This is the information that will be sent to help us sort out the issue.\\n                <br/><br/>\\n                Privacy is of the highest priority to us and we won't use this information for anything but solving your issue. This information will be destroyed afterwards.\\n                <br/><br/>\\n                <div id=\\\"error-report-data\\\"></div>\\n            </div>\\n            <div class=\\\"error-buttons\\\">\\n                <div id=\\\"error-privacy-next-button\\\" class=\\\"error-button\\\">Next &gt;</div>\\n                <div id=\\\"error-privacy-back-button\\\" class=\\\"error-link\\\">&lt; Go Back</div>\\n            </div>\\n        </div>\\n        <div id=\\\"error-send-page\\\" class=\\\"error-page\\\">\\n            <div class=\\\"header\\\">\\n                <h1>Submit</h1>\\n            </div>\\n            <div class=\\\"content\\\">\\n                <div id=\\\"error-log-data\\\"></div>\\n            </div>\\n            <div class=\\\"error-buttons\\\">\\n                <div id=\\\"error-send-button\\\" class=\\\"error-button\\\">Submit</div>\\n                <div id=\\\"error-send-back-button\\\" class=\\\"error-link\\\">&lt; Go Back</div>\\n            </div>\\n        </div>\\n        <div id=\\\"error-sent-page\\\" class=\\\"error-page\\\">\\n            <div class=\\\"header\\\">\\n                <h1>Thanks</h1>\\n            </div>\\n            <div class=\\\"content\\\">\\n                <div class=\\\"success-icon\\\">&#10004;</div>\\n            </div>\\n            <div class=\\\"error-buttons\\\" style=\\\"height:90px\\\">\\n                <div id=\\\"sent-restart-button\\\" class=\\\"error-button\\\">Restart App</div>\\n                <div id=\\\"sent-dismiss-button\\\" class=\\\"error-link\\\">Dismiss & Continue (Not recommended)</div>\\n            </div>\\n        </div>\\n        <div id=\\\"error-error-page\\\" class=\\\"error-page\\\">\\n            <div class=\\\"header\\\">\\n                <h1>Oh Dear</h1>\\n            </div>\\n            <div class=\\\"content\\\">\\n                We couldn't send the error report. Would you mind either emailing it to us, or copying it into an email and sending to support@freedombudgetapp.com\\n            </div>\\n            <div class=\\\"error-buttons\\\" style=\\\"height:140px\\\">\\n                <a id=\\\"error-email-button\\\" data-rel=\\\"external\\\" href=\\\"mailto:support@freedombudgetapp.com?subject=Error Repprt&body=\\\" class=\\\"error-button\\\">Send Using Email</a>\\n                <div id=\\\"error-restart-button\\\" class=\\\"error-button\\\">Restart App</div>\\n                <div id=\\\"error-dismiss-button\\\" class=\\\"error-link\\\">Dismiss & Continue (Not recommended)</div>\\n            </div>\\n        </div>\\n    \";\n    }\n    DefaultLoggerUINotifierAppenderHandler.prototype.handle = function (message) {\n        var _this = this;\n        if (document.getElementById('error-overlay'))\n            return;\n        this.populateErrorLogData();\n        var errorOverlayWrapperDiv = document.createElement('div');\n        errorOverlayWrapperDiv.id = 'error-overlay';\n        document.body.insertBefore(errorOverlayWrapperDiv, document.body.firstChild);\n        this.errorOverlayDiv = document.createElement('div');\n        this.errorOverlayDiv.id = 'error-overlay-nav';\n        errorOverlayWrapperDiv.appendChild(this.errorOverlayDiv);\n        this.errorOverlayDiv.innerHTML = this.html;\n        this.errorMainPage = document.getElementById('error-main-page');\n        this.errorContactPage = document.getElementById('error-contact-page');\n        this.errorPrivacyPage = document.getElementById('error-privacy-page');\n        this.errorSendPage = document.getElementById('error-send-page');\n        this.dismissConfirmPage = document.getElementById('dismiss-confirm-page');\n        this.errorErrorPage = document.getElementById('error-error-page');\n        this.errorSentPage = document.getElementById('error-sent-page');\n        this.errorStyle = document.createElement('style');\n        this.errorStyle.id = 'error-style';\n        this.errorStyle.innerText = this.css;\n        document.head.appendChild(this.errorStyle);\n        document.getElementById('show-other-options-button').addEventListener('click', function (ev) {\n            document.getElementById('show-other-options-button').remove();\n            document.getElementById('dismiss-button').className = 'error-button';\n            document.getElementById('restart-button').className = 'error-button';\n            document.getElementById('restart-button').parentElement.style.height = '150px';\n        });\n        document.getElementById('goto-error-report-button').addEventListener('click', function (ev) {\n            _this.goToPage(_this.errorContactPage);\n        });\n        document.getElementById('dismiss-button').addEventListener('click', function (ev) {\n            _this.goToPage(_this.dismissConfirmPage);\n        });\n        document.getElementById('restart-button').addEventListener('click', function (ev) {\n            _this.restartApp();\n        });\n        document.getElementById('error-dismiss-button').addEventListener('click', function (ev) {\n            _this.closeError();\n        });\n        document.getElementById('error-restart-button').addEventListener('click', function (ev) {\n            _this.restartApp();\n        });\n        document.getElementById('sent-dismiss-button').addEventListener('click', function (ev) {\n            _this.closeError();\n        });\n        document.getElementById('sent-restart-button').addEventListener('click', function (ev) {\n            _this.restartApp();\n        });\n        document.getElementById('dismiss-confirm-button').addEventListener('click', function (ev) {\n            _this.closeError();\n        });\n        document.getElementById('dismiss-confirm-back-button').addEventListener('click', function (ev) {\n            _this.goBack(_this.errorMainPage);\n        });\n        document.getElementById('error-contact-next-button').addEventListener('click', function (ev) {\n            if (!_this.enableContactNext) {\n                // TODO: Some feedback\n                return;\n            }\n            window.localStorage.setItem('error-contact-info', document.getElementById('error-contact-info').value);\n            window.localStorage.setItem('error-do-not-contact', document.getElementById('error-do-not-contact').checked ? 'true' : 'false');\n            _this.goToPage(_this.errorPrivacyPage);\n        });\n        document.getElementById('error-privacy-next-button').addEventListener('click', function (ev) {\n            _this.goToPage(_this.errorSendPage);\n            document.getElementById('error-log-data').innerText = _this.getErrorReportData();\n        });\n        document.getElementById('error-contact-back-button').addEventListener('click', function (ev) {\n            _this.goBack(_this.errorMainPage);\n        });\n        document.getElementById('error-privacy-back-button').addEventListener('click', function (ev) {\n            _this.goBack(_this.errorContactPage);\n        });\n        document.getElementById('error-send-back-button').addEventListener('click', function (ev) {\n            _this.goBack(_this.errorPrivacyPage);\n        });\n        document.getElementById('error-send-button').addEventListener('click', function (ev) {\n            document.getElementById('error-send-button').innerText = 'Sending...';\n            document.getElementById('error-send-button').className = 'error-button error-button-disabled';\n            _this.submitErrorReportData();\n        });\n        document.getElementById('error-contact-info').value = window.localStorage.getItem('error-contact-info');\n        document.getElementById('error-do-not-contact').checked = window.localStorage.getItem('error-do-not-contact') === 'true';\n        document.getElementById('error-do-not-contact').addEventListener('change', function (ev) { _this.validateContactInfo(); });\n        document.getElementById('error-contact-info').addEventListener('input', function (ev) { _this.validateContactInfo(); });\n        this.validateContactInfo();\n        for (var i = this.errorOverlayDiv.children.length - 1; i >= 0; i--) {\n            this.errorOverlayDiv.children.item(i).remove();\n        }\n        this.errorOverlayDiv.appendChild(this.errorMainPage);\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.restartApp = function () {\n        //        if (Device && <any> Device.cordova) {\n        // If native, put up a message and say the app will now close, please open it again and retry.\n        //            if ((<any>navigator).app) {\n        //                (<any>navigator).app.exitApp();\n        //            } else if ((<any>navigator).device) {\n        //                (<any>navigator).device.exitApp();\n        //            } else {\n        //                window.close();\n        //            }\n        // TODO: Message: The application has not closed, please force quit for app, and reopen it.\n        //        } else {\n        // TODO: Reload the original URL used to open it.... need to save that somewhere!?\n        document.location.reload(true);\n        //        }\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.closeError = function () {\n        document.getElementById('error-overlay').remove();\n        this.errorStyle.remove();\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.validateContactInfo = function () {\n        this.enableContactNext = (document.getElementById('error-do-not-contact').checked || document.getElementById('error-contact-info').value.length > 0);\n        document.getElementById('error-contact-next-button').className = this.enableContactNext ? 'error-button' : 'error-button error-button-disabled';\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.goToPage = function (page) {\n        var _this = this;\n        if (this.navigating)\n            return;\n        this.navigating = true;\n        var currentPage = this.errorOverlayDiv.getElementsByClassName('error-page').item(0);\n        this.errorOverlayDiv.appendChild(page);\n        setTimeout(function () {\n            page.classList.add('error-page-animating');\n            currentPage.classList.add('error-page-animating');\n            currentPage.style.left = '-100%';\n            page.style.left = '-100%';\n            setTimeout(function () {\n                currentPage.remove();\n                page.style.left = '0';\n                page.classList.remove('error-page-animating');\n                currentPage.classList.remove('error-page-animating');\n                _this.navigating = false;\n            }, 500);\n        });\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.goBack = function (page) {\n        var _this = this;\n        if (this.navigating)\n            return;\n        this.navigating = true;\n        var currentPage = this.errorOverlayDiv.getElementsByClassName('error-page').item(0);\n        page.style.left = '-100%';\n        currentPage.style.left = '-100%';\n        this.errorOverlayDiv.insertBefore(page, currentPage);\n        setTimeout(function () {\n            page.classList.add('error-page-animating');\n            currentPage.classList.add('error-page-animating');\n            currentPage.style.left = '0';\n            page.style.left = '0';\n            setTimeout(function () {\n                currentPage.remove();\n                page.classList.remove('error-page-animating');\n                currentPage.classList.remove('error-page-animating');\n                _this.navigating = false;\n            }, 500);\n        });\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.populateErrorLogData = function () {\n        this.errorLogData = LoggerStorageAppender.appenders.get('default').stringDump();\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.getErrorHeaderData = function () {\n        return {\n            'time': new Date().toISOString(),\n            'userAgent': navigator.userAgent,\n            'platform': navigator.platform,\n            'version': BuildInfo.version,\n            //            'devicePlatform' : Device && Device.platform ? Device.platform : 'undefined',\n            //            'deviceModel' : Device && Device.model ? Device.model : 'undefined',\n            //            'deviceVersion' : Device && Device.version ? Device.version : 'undefined',\n            //            'deviceNative' : Device && Device.cordova ? Device.cordova : 'undefined',\n            'contactInfo': 'true' === localStorage.getItem('error-do-not-contact') ? 'Do Not Contact' : localStorage.getItem('error-contact-info')\n        };\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.getErrorReportData = function () {\n        var data = '';\n        var headerData = this.getErrorHeaderData();\n        Object.keys(headerData).forEach(function (key) { data += key + ':' + headerData[key] + '\\n'; });\n        data += '\\n' + this.errorLogData;\n        return data;\n    };\n    DefaultLoggerUINotifierAppenderHandler.prototype.submitErrorReportData = function () {\n        var _this = this;\n        var xmlhttp = new XMLHttpRequest();\n        xmlhttp.onreadystatechange = function (ev) {\n            if (xmlhttp.readyState === 4) {\n                if (xmlhttp.status === 200) {\n                    _this.goToPage(_this.errorSentPage);\n                }\n                else {\n                    _this.goToPage(_this.errorErrorPage);\n                    var errorReportData = _this.getErrorReportData();\n                    if (errorReportData.length > 20000)\n                        errorReportData = errorReportData.substr(0, 20000);\n                    document.getElementById('error-email-button').href += encodeURIComponent(errorReportData.split('\\n').join('\\\\n'));\n                }\n            }\n        };\n        xmlhttp.onerror = function (ev) {\n            _this.goToPage(_this.errorErrorPage);\n            var errorReportData = _this.getErrorReportData();\n            if (errorReportData.length > 20000)\n                errorReportData = errorReportData.substr(0, 20000);\n            document.getElementById('error-email-button').href += encodeURIComponent(errorReportData.split('\\n').join('\\\\n'));\n        };\n        xmlhttp.open('POST', 'https://api.freebudgetapp.com/submiterror');\n        xmlhttp.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n        var data = this.getErrorHeaderData();\n        data['log'] = this.errorLogData;\n        xmlhttp.send(JSON.stringify(data));\n    };\n    return DefaultLoggerUINotifierAppenderHandler;\n}());\nvar LoggerUINotifierAppender = (function () {\n    function LoggerUINotifierAppender() {\n        this.defaultHandler = new DefaultLoggerUINotifierAppenderHandler();\n        LoggerUINotifierAppender.instance = this;\n    }\n    Object.defineProperty(LoggerUINotifierAppender.prototype, \"handler\", {\n        get: function () {\n            return this._handler || this.defaultHandler;\n        },\n        set: function (value) {\n            this._handler = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerUINotifierAppender.prototype.log = function (level, data) {\n        if (level !== Logger.ERROR)\n            return;\n        var message = data.length > 0 ? Logger.stringValue(data[0]) : 'Log';\n        if (this.handler) {\n            try {\n                this.handler.handle(message);\n            }\n            catch (e) {\n                this.defaultHandler.handle(message);\n            }\n        }\n        else {\n            this.defaultHandler.handle(message);\n        }\n    };\n    return LoggerUINotifierAppender;\n}());\nexport { LoggerUINotifierAppender };\nLoggerUINotifierAppender.instance = new LoggerUINotifierAppender();\n//# sourceMappingURL=logger-ui-notifier-appender.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/logger-ui-notifier-appender.ts","var BuildInfo = (function () {\n    function BuildInfo() {\n    }\n    return BuildInfo;\n}());\nexport { BuildInfo };\nBuildInfo.version = '%BUILD_INFO_VERSION%';\nBuildInfo.buildDateYYYYMMDD = '%BUILD_INFO_BUILD_DATE_YYYYMMDD%';\n//# sourceMappingURL=build-info.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/build-info.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, NavParams, ViewController, ModalController, PopoverController, InfiniteScroll } from 'ionic-angular';\nimport { Component, ViewChild } from '@angular/core';\nimport { Dbms } from '../../db/dbms';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { Category } from '../../data/records/category';\nimport { Account } from '../../data/records/account';\nimport { Transaction } from '../../data/records/transaction';\nimport { Budget } from '../../data/records/budget';\nimport { AddEditCategoryModal } from '../../modals/add-edit-category/add-edit-category';\nimport { AddEditCategorySimpleWeeklyModal } from '../../modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly';\nimport { InitCategorySimpleWeeklyTransaction } from '../../data/transactions/init-category-simple-weekly-transaction';\nimport { EditorProvider } from '../../services/editor-provider';\nimport { AddEditTransactionModal } from '../../modals/add-edit-transaction/add-edit-transaction';\nimport { AddEditSplitTransactionModal } from '../../modals/add-edit-split-transaction/add-edit-split-transaction';\nimport { AddEditSplitTransferModal } from '../../modals/add-edit-split-transfer/add-edit-split-transfer';\nimport { AddEditTransferModal } from '../../modals/add-edit-transfer/add-edit-transfer';\nimport { Logger } from '../../services/logger';\nimport { Configuration } from '../../services/configuration-service';\nvar CategoryPage = (function () {\n    function CategoryPage(nav, dbms, params, editorProvider, modalController, popoverController, engineFactory) {\n        this.nav = nav;\n        this.dbms = dbms;\n        this.params = params;\n        this.editorProvider = editorProvider;\n        this.modalController = modalController;\n        this.popoverController = popoverController;\n        this.engineFactory = engineFactory;\n        this.logger = Logger.get('CategoryPage');\n        this.nav = nav;\n        this.dbms = dbms;\n        this.budget = params.data.budget;\n        this.engine = engineFactory.getEngine(this.budget);\n        var categoryTable = this.budget.transactionProcessor.table(Category);\n        this.category = categoryTable.by('id', params.data.categoryId);\n        this.budgetRecord = this.budget.transactionProcessor.single(Budget);\n        this.transactionTable = this.budget.transactionProcessor.table(Transaction);\n        this.transactions = { data: function () { return []; } };\n        this.transactionDisplayPageSize = window.innerHeight / 40;\n        if (this.transactionDisplayPageSize < 6)\n            this.transactionDisplayPageSize = 10;\n        this.transactionDisplayLimit = this.transactionDisplayPageSize;\n    }\n    CategoryPage.prototype.account = function (accountId) {\n        return this.engine.getRecordById(Account, accountId);\n    };\n    Object.defineProperty(CategoryPage.prototype, \"accountBalances\", {\n        get: function () {\n            return this.category.x.accountBalances ? Array.from(this.category.x.accountBalances.keys()) : [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CategoryPage.prototype, \"transactionsPaged\", {\n        get: function () {\n            if (!this.transactionDisplayLimit)\n                return this.transactions.data();\n            return this.transactions.data().slice(0, this.transactionDisplayLimit);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryPage.prototype.transferOtherCategoryName = function (t) {\n        var category = t.x.transfer ? this.budget.transactionProcessor.table(Category).by('id', t.x.transfer.categoryId) : null;\n        return category ? category.name : \"Category Missing\";\n    };\n    CategoryPage.prototype.showMore = function (event) {\n        var popover = this.popoverController.create(CategoryPopover, { categoryPage: this });\n        popover.present({ ev: event });\n    };\n    CategoryPage.prototype.editCategory = function () {\n        var modal = this.modalController.create(AddEditCategoryModal, { budgetId: this.budget.id, categoryId: this.category.id });\n        modal.present();\n    };\n    CategoryPage.prototype.editSimpleWeekly = function () {\n        var modal = this.modalController.create(AddEditCategorySimpleWeeklyModal, { budgetId: this.budget.id, categoryId: this.category.id });\n        modal.present();\n    };\n    CategoryPage.prototype.categoryWeeklyAmount = function () {\n        // TODO: Put this into the category record and get it straight from there\n        var t = this.budget.transactionProcessor.findTransactionsForRecord(this.category, InitCategorySimpleWeeklyTransaction)[0];\n        if (t)\n            return t.weeklyAmount;\n    };\n    CategoryPage.prototype.addTransaction = function () {\n        var modal = this.modalController.create(AddEditTransactionModal, { budgetId: this.budget.id, categoryId: this.category.id });\n        modal.present();\n    };\n    CategoryPage.prototype.addSplitTransaction = function () {\n        var modal = this.modalController.create(AddEditSplitTransactionModal, { budgetId: this.budget.id, categoryId: this.category.id });\n        modal.present();\n    };\n    CategoryPage.prototype.addSplitTransfer = function () {\n        var modal = this.modalController.create(AddEditSplitTransferModal, { budgetId: this.budget.id, categoryId: this.category.id });\n        modal.present();\n    };\n    CategoryPage.prototype.addTransfer = function () {\n        var modal = this.modalController.create(AddEditTransferModal, { budgetId: this.budget.id, categoryId: this.category.id });\n        modal.present();\n    };\n    CategoryPage.prototype.editTransaction = function (transaction) {\n        var modal = this.editorProvider.getModal(this.budget.transactionProcessor.findAllTransactionsForRecord(transaction)[0], { budgetId: this.budget.id, categoryId: this.category.id, transactionId: transaction.id });\n        modal.present();\n    };\n    CategoryPage.prototype.ionViewWillEnter = function () {\n        this.transactions = this.transactionTable.addDynamicView('categoryTransactions_' + this.category.id)\n            .applyFind({ 'categoryId': this.category.id })\n            .applySortCriteria([['date', true], ['id', true]]);\n        this.logger.debug('WIll Enter Dynamic Views ' + this.transactionTable.DynamicViews.length);\n        if (this.transactions.data().length <= this.transactionDisplayLimit) {\n            this.transactionDisplayLimit = 0;\n            this.infiniteScroll.enable(false);\n        }\n    };\n    CategoryPage.prototype.ionViewDidLeave = function () {\n        this.transactionTable.removeDynamicView(this.transactions.name);\n        this.logger.debug('Did Leave Dynamic Views ' + this.transactionTable.DynamicViews.length);\n        this.transactions = { data: function () { return []; } };\n    };\n    CategoryPage.prototype.doInfinite = function (infiniteScroll) {\n        // This is used just to stage the DOM loading for a responsive UI rather than an async operation\n        // We can't use virtualscroll as we can have different elements / heights\n        this.transactionDisplayLimit += this.transactionDisplayPageSize;\n        this.transactionDisplayPageSize *= 2;\n        if (this.transactions.data().length <= this.transactionDisplayLimit) {\n            this.transactionDisplayLimit = 0;\n            infiniteScroll.enable(false);\n        }\n        else {\n            infiniteScroll.complete();\n        }\n    };\n    return CategoryPage;\n}());\n__decorate([\n    ViewChild(InfiniteScroll),\n    __metadata(\"design:type\", typeof (_a = typeof InfiniteScroll !== \"undefined\" && InfiniteScroll) === \"function\" && _a || Object)\n], CategoryPage.prototype, \"infiniteScroll\", void 0);\nCategoryPage = __decorate([\n    Component({\n        templateUrl: 'category.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof EditorProvider !== \"undefined\" && EditorProvider) === \"function\" && _e || Object, typeof (_f = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _f || Object, typeof (_g = typeof PopoverController !== \"undefined\" && PopoverController) === \"function\" && _g || Object, typeof (_h = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _h || Object])\n], CategoryPage);\nexport { CategoryPage };\nvar CategoryPopover = (function () {\n    function CategoryPopover(viewCtrl, configuration) {\n        this.viewCtrl = viewCtrl;\n        this.configuration = configuration;\n        this.categoryPage = viewCtrl.data.categoryPage;\n    }\n    CategoryPopover.prototype.close = function (thenFn) {\n        var _this = this;\n        this.viewCtrl.dismiss(undefined, undefined, { animate: false, duration: 0 }).then(function () { thenFn.call(_this.categoryPage); });\n    };\n    return CategoryPopover;\n}());\nCategoryPopover = __decorate([\n    Component({\n        template: \"\\n    <ion-list>\\n      <button ion-item detail-none (click)=\\\"close(categoryPage.editSimpleWeekly)\\\">Weekly Amount</button>\\n      <button ion-item detail-none (click)=\\\"close(categoryPage.editCategory)\\\">Edit / Delete Category</button>\\n      <button ion-item detail-none (click)=\\\"close(categoryPage.addTransaction)\\\">New Transaction</button>\\n      <button *ngIf=\\\"configuration.optionBooleanAccessor('experimental.modals.show-split-transaction').value\\\" ion-item detail-none (click)=\\\"close(categoryPage.addSplitTransaction)\\\">New Split Transaction</button>\\n      <button *ngIf=\\\"configuration.optionBooleanAccessor('experimental.modals.show-split-transaction').value\\\" ion-item detail-none (click)=\\\"close(categoryPage.addSplitTransfer)\\\">New Split Transfer</button>\\n      <button ion-item detail-none (click)=\\\"close(categoryPage.addTransfer)\\\">Transfer Funds</button>\\n    </ion-list>\\n  \"\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_j = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _j || Object, typeof (_k = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _k || Object])\n], CategoryPopover);\nexport { CategoryPopover };\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n//# sourceMappingURL=category.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/category/category.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nimport { CFormatPipe } from '../components/currency-format';\nvar CurrencyFormatter = (function () {\n    function CurrencyFormatter() {\n    }\n    CurrencyFormatter.prototype.format = function (value) {\n        // TODO: Use a currency format lib\n        // TODO: replace cformat and others to use this service\n        // TODO: This service can get the locale from config?, or also take into account the currency type\n        return \"$\" + new CFormatPipe().price_format(value, false);\n    };\n    return CurrencyFormatter;\n}());\nCurrencyFormatter = __decorate([\n    Injectable()\n], CurrencyFormatter);\nexport { CurrencyFormatter };\n//# sourceMappingURL=currency-formatter.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/currency-formatter.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams } from 'ionic-angular';\nimport { Category } from '../../data/records/category';\nimport { Transaction } from '../../data/records/transaction';\nimport { Dbms } from '../../db/dbms';\nimport { InitCategorySimpleWeeklyTransaction } from '../../data/transactions/init-category-simple-weekly-transaction';\nimport { Component } from '@angular/core';\nimport { Utils } from '../../services/utils';\nimport Big from 'big.js';\nvar AddEditCategorySimpleWeeklyModal = (function () {\n    function AddEditCategorySimpleWeeklyModal(viewCtrl, navParams, dbms, nav) {\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.dbms = dbms;\n        this.nav = nav;\n        this.viewCtrl = viewCtrl;\n        this.nav = nav;\n        this.budget = dbms.getDb(navParams.data.budgetId);\n        this.category = this.budget.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\n        this.transaction = this.budget.transactionProcessor.findTransactionsForRecord(this.category, InitCategorySimpleWeeklyTransaction)[0];\n        this.balanceDate = Utils.nowIonic();\n        if (!this.transaction) {\n            this.transaction = new InitCategorySimpleWeeklyTransaction();\n            this.transaction.categoryId = this.category.id;\n        }\n        else {\n            this.balance = this.category.balance;\n            this.weeklyAmount = this.transaction.weeklyAmount;\n        }\n    }\n    AddEditCategorySimpleWeeklyModal.prototype.submit = function (event) {\n        event.preventDefault();\n        // TODO: Get the sum of transactions with date of TODAY\n        // Subtract from the balance here\n        this.transaction.balanceDate = Utils.toYYYYMMDDFromIonic(this.balanceDate);\n        var todaysTotal = this.budget.transactionProcessor.table(Transaction).chain()\n            .find({ 'categoryId': this.category.id }).find({ 'date': { '$gte': this.transaction.balanceDate } }).mapReduce(function (t) { return t.amount; }, function (tt) { return tt.length === 0 ? new Big(0) : tt.reduce(function (a, b) { return a.plus(b); }); });\n        this.transaction.balance = new Big(this.balance).plus(todaysTotal);\n        this.transaction.weeklyAmount = new Big(this.weeklyAmount);\n        this.budget.applyTransaction(this.transaction);\n        this.viewCtrl.dismiss();\n    };\n    AddEditCategorySimpleWeeklyModal.prototype.cancel = function () {\n        this.viewCtrl.dismiss();\n    };\n    return AddEditCategorySimpleWeeklyModal;\n}());\nAddEditCategorySimpleWeeklyModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-category-simple-weekly.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object])\n], AddEditCategorySimpleWeeklyModal);\nexport { AddEditCategorySimpleWeeklyModal };\nvar _a, _b, _c, _d;\n//# sourceMappingURL=add-edit-category-simple-weekly.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController } from 'ionic-angular';\nimport { Dbms } from '../../db/dbms';\nimport { Configuration } from '../../services/configuration-service';\nimport { Component } from '@angular/core';\nvar AddEditSplitTransactionLineModal = (function () {\n    function AddEditSplitTransactionLineModal(configuration, viewCtrl, navParams, dbms, nav, alertController) {\n        this.configuration = configuration;\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.dbms = dbms;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.parent = navParams.data.parent;\n        this.engine = this.parent.engine;\n        this.lineIndex = navParams.data.lineIndex;\n        this.line = navParams.data.parent.data.lines[this.lineIndex];\n    }\n    AddEditSplitTransactionLineModal.prototype.ionViewDidEnter = function () {\n        var _this = this;\n        if (this.line.categoryId == null) {\n            this.showCategorySelect().onDidDismiss(function () {\n                if (_this.line.categoryId == null)\n                    _this.viewCtrl.dismiss();\n            });\n        }\n        this.viewCtrl.onDidDismiss(function () {\n            if (_this.line.categoryId == null) {\n                _this.parent.data.lines.splice(_this.parent.data.lines.indexOf(_this.line), 1);\n            }\n        });\n    };\n    AddEditSplitTransactionLineModal.prototype.showCategorySelect = function () {\n        var _this = this;\n        var alert = this.alertController.create();\n        this.engine.getCategories('alphabetical').forEach(function (category) {\n            if (!_this.parent.data.lines.some(function (line) { return line !== _this.line && line.categoryId === category.id; }))\n                alert.addInput({ type: 'radio', label: category.name, value: category.id.toString(), checked: category.id === _this.line.categoryId });\n        });\n        alert.addButton('Cancel');\n        alert.addButton({\n            text: 'Ok',\n            handler: function (data) {\n                _this.line.categoryId = Number(data);\n            }\n        });\n        alert.present();\n        return alert;\n    };\n    AddEditSplitTransactionLineModal.prototype.submit = function (event) {\n        event.preventDefault();\n        this.viewCtrl.dismiss();\n    };\n    /*---- Reconciliation ---- */\n    AddEditSplitTransactionLineModal.prototype.unreconciledAndThisReconciledBankTransactions = function () {\n        return [];\n    };\n    return AddEditSplitTransactionLineModal;\n}());\nAddEditSplitTransactionLineModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-split-transaction-line.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _a || Object, typeof (_b = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object, typeof (_f = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _f || Object])\n], AddEditSplitTransactionLineModal);\nexport { AddEditSplitTransactionLineModal };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=add-edit-split-transaction-line.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-split-transaction/add-edit-split-transaction-line.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController } from 'ionic-angular';\nimport { Dbms } from '../../db/dbms';\nimport { Configuration } from '../../services/configuration-service';\nimport { Component } from '@angular/core';\nvar AddEditSplitTransferLineModal = (function () {\n    function AddEditSplitTransferLineModal(configuration, viewCtrl, navParams, dbms, nav, alertController) {\n        this.configuration = configuration;\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.dbms = dbms;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.parent = navParams.data.parent;\n        this.engine = this.parent.engine;\n        this.lineIndex = navParams.data.lineIndex;\n        this.line = navParams.data.parent.data.lines[this.lineIndex];\n    }\n    AddEditSplitTransferLineModal.prototype.ionViewDidEnter = function () {\n        var _this = this;\n        if (this.line.categoryId == null) {\n            this.showCategorySelect().onDidDismiss(function () {\n                if (_this.line.categoryId == null)\n                    _this.viewCtrl.dismiss();\n            });\n        }\n        this.viewCtrl.onDidDismiss(function () {\n            if (_this.line.categoryId == null) {\n                _this.parent.data.lines.splice(_this.parent.data.lines.indexOf(_this.line), 1);\n            }\n        });\n    };\n    AddEditSplitTransferLineModal.prototype.showCategorySelect = function () {\n        var _this = this;\n        var alert = this.alertController.create();\n        this.engine.getCategories('alphabetical').forEach(function (category) {\n            if (!_this.parent.data.lines.some(function (line) { return line !== _this.line && line.categoryId === category.id; }))\n                alert.addInput({ type: 'radio', label: category.name, value: category.id.toString(), checked: category.id === _this.line.categoryId });\n        });\n        alert.addButton('Cancel');\n        alert.addButton({\n            text: 'Ok',\n            handler: function (data) {\n                _this.line.categoryId = Number(data);\n            }\n        });\n        alert.present();\n        return alert;\n    };\n    AddEditSplitTransferLineModal.prototype.submit = function (event) {\n        event.preventDefault();\n        this.viewCtrl.dismiss();\n    };\n    return AddEditSplitTransferLineModal;\n}());\nAddEditSplitTransferLineModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-split-transfer-line.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _a || Object, typeof (_b = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object, typeof (_f = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _f || Object])\n], AddEditSplitTransferLineModal);\nexport { AddEditSplitTransferLineModal };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=add-edit-split-transfer-line.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-split-transfer/add-edit-split-transfer-line.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 168;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 168\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 178;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 178\n// module chunks = 0","var Logger = (function () {\n    function Logger(name) {\n        this.name = name;\n        this._config = new LoggerConfig();\n    }\n    Logger.get = function (name) {\n        // TODO: Store in a static map for persistent per logger based configuration.\n        if (typeof name === 'undefined')\n            return Logger.root;\n        var logger = new Logger();\n        logger.config.parent = Logger.root; // TODO A heirarchy based off . separators?\n        return logger;\n    };\n    Object.defineProperty(Logger.prototype, \"config\", {\n        get: function () {\n            return this._config;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Logger.prototype.debug = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.log(Logger.DEBUG, data);\n    };\n    Logger.prototype.info = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.log(Logger.INFO, data);\n    };\n    Logger.prototype.error = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        this.log(Logger.ERROR, data);\n    };\n    Logger.prototype.log = function (level, data) {\n        if (this.config.level > level)\n            return;\n        this.config.getAppenders().forEach(function (appender) {\n            appender.log(level, data);\n        });\n    };\n    Logger.stringValue = function (value) {\n        if (typeof value === 'undefined')\n            return 'undefined';\n        if (value === null)\n            return 'null';\n        if (typeof value === 'string')\n            return value;\n        if (typeof value === 'number')\n            return value.toString();\n        if (typeof value === 'function')\n            return Logger.stringValue(value());\n        if (value instanceof Error) {\n            // TODO: If Error then need to print a stack trace, message, etc\n            return \"[Error]: \" + value;\n        }\n        // TODO: Maybe return these as some kind of wrapped type so we can group logging on them, or log the object to console, but the string version to a file\n        // .. And the .toString() method will just return the string value of it, so it is kinda like just returning a string...\n        // TODO: Will implement as needed...\n        // TODO: ViewWrappedError\n        if (value === Object(value)) {\n            if (value instanceof Array) {\n                // TODO: Iterate it and run each of the values ?\n            }\n            if (typeof value.toLog === 'function') {\n                return value.toLog();\n            }\n            // TODO: test for certain kind of objects and run through the values of them ?.\n            var cache_1 = [];\n            try {\n                var json = JSON.stringify(value, function (key, value) {\n                    if (typeof value === 'object' && value !== null) {\n                        if (cache_1.indexOf(value) !== -1) {\n                            // Circular reference found, discard key\n                            return '[circular]';\n                        }\n                        // Store value in our collection\n                        cache_1.push(value);\n                    }\n                    return value;\n                });\n                if (json.length > 2000)\n                    json = json.substr(0, 2000) + '...[truncated]';\n                return json;\n            }\n            catch (err) {\n                return \"Error Stringifying value: \" + value;\n            }\n        }\n    };\n    return Logger;\n}());\nexport { Logger };\nLogger.DEBUG = 1;\nLogger.INFO = 2;\nLogger.ERROR = 3;\nvar LoggerConfig = (function () {\n    function LoggerConfig() {\n        this._appenders = [];\n        // Removing appenders - Do it when/if eventually needed\n    }\n    Object.defineProperty(LoggerConfig.prototype, \"level\", {\n        get: function () {\n            if (typeof this._level === 'undefined')\n                return this.parent.config.level;\n            return this._level;\n        },\n        set: function (value) {\n            this._level = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerConfig.prototype.getAppenders = function () {\n        if (typeof this.parent === 'undefined')\n            return this._appenders;\n        return this._appenders.concat(this.parent.config.getAppenders());\n    };\n    LoggerConfig.prototype.addAppender = function (appender) {\n        return this._appenders.push(appender);\n    };\n    return LoggerConfig;\n}());\nexport { LoggerConfig };\nvar LoggerConsoleAppender = (function () {\n    function LoggerConsoleAppender() {\n    }\n    LoggerConsoleAppender.prototype.log = function (level, data) {\n        var message = data.length > 0 ? Logger.stringValue(data[0]) : '.';\n        var extradata = null;\n        if (message === data[0]) {\n            extradata = data.slice(1);\n        }\n        if (level === Logger.DEBUG || level === Logger.INFO) {\n            if (extradata !== null && extradata.length > 0) {\n                console.groupCollapsed(message);\n                console.info(extradata);\n                console.groupEnd();\n            }\n            else {\n                console.info(message);\n            }\n        }\n        else if (level === Logger.ERROR) {\n            if (extradata !== null && extradata.length > 0) {\n                console.groupCollapsed(message);\n                console.error(extradata);\n                console.groupEnd();\n            }\n            else {\n                console.error(message);\n            }\n        }\n    };\n    return LoggerConsoleAppender;\n}());\nexport { LoggerConsoleAppender };\nLogger.root = new Logger();\nLogger.root.config.level = Logger.DEBUG;\nLogger.root.config.addAppender(new LoggerConsoleAppender());\n//# sourceMappingURL=logger.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/logger.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { ToastController } from 'ionic-angular';\nimport { Logger } from './logger';\nimport { CurrencyFormatter } from './currency-formatter';\nvar Notification = (function () {\n    function Notification() {\n    }\n    return Notification;\n}());\nexport { Notification };\nvar Notifications = (function () {\n    function Notifications(toastController, currencyFormatter) {\n        var _this = this;\n        this.toastController = toastController;\n        this.currencyFormatter = currencyFormatter;\n        this.logger = Logger.get('Notifications');\n        this.acknowledged = true;\n        this.important = false;\n        this.notifications = [];\n        this.newNotifications = [];\n        this.formatCurrency = function (value) {\n            return _this.currencyFormatter.format(value);\n        };\n    }\n    Notifications.prototype.clear = function (number) {\n        this.acknowledged = true;\n        if (!number)\n            this.newNotifications.length = 0;\n        else\n            this.newNotifications.splice(0, number);\n        this.updateImportantFlag();\n    };\n    Notifications.prototype.markRead = function (number) {\n        if (number === void 0) { number = Number.MAX_SAFE_INTEGER; }\n        this.acknowledged = true;\n        var count = 0;\n        this.notifications.some(function (n) {\n            n.read = true;\n            return ++count >= number;\n        });\n        this.updateImportantFlag();\n    };\n    Notifications.prototype.notify = function (message, popup, silent, important) {\n        if (silent === void 0) { silent = false; }\n        if (important === void 0) { important = true; }\n        this.acknowledged = this.acknowledged && silent;\n        this.logger.debug(\"Notification: \" + message);\n        var notification = { message: message, popup: popup, important: important };\n        this.notifications.unshift(notification);\n        this.newNotifications.unshift(notification);\n        this.runPopupQueue();\n        this.updateImportantFlag();\n    };\n    Notifications.prototype.runPopupQueue = function () {\n        var _this = this;\n        if (this.currentToast)\n            return;\n        this.notifications.some(function (notification) {\n            if (notification.popup && !notification.popupDone) {\n                _this.currentToast = _this.toastController.create({ message: notification.message, duration: 5000, showCloseButton: true, closeButtonText: 'X' });\n                _this.currentToast.onDidDismiss(function () {\n                    _this.currentToast = null;\n                    _this.runPopupQueue();\n                });\n                _this.currentToast.present();\n                notification.popupDone = true;\n                return true;\n            }\n            return false;\n        });\n    };\n    Notifications.prototype.updateImportantFlag = function () {\n        var _this = this;\n        this.important = false;\n        this.newNotifications.some(function (n) {\n            _this.important = n.important;\n            return n.important;\n        });\n    };\n    return Notifications;\n}());\nNotifications = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _a || Object, typeof (_b = typeof CurrencyFormatter !== \"undefined\" && CurrencyFormatter) === \"function\" && _b || Object])\n], Notifications);\nexport { Notifications };\nvar _a, _b;\n//# sourceMappingURL=notifications.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/notifications.ts","var NoPersistenceProvider = (function () {\n    function NoPersistenceProvider(transactionSerializer) {\n        this.transactionSerializer = transactionSerializer;\n        this.dbArray = [];\n        this.tempStorage = new Map();\n    }\n    NoPersistenceProvider.prototype.reset = function () {\n        this.dbArray.length = 0;\n        this.tempStorage.clear();\n    };\n    NoPersistenceProvider.prototype.init = function () {\n        return Promise.resolve();\n    };\n    NoPersistenceProvider.prototype.dbs = function () {\n        return this.dbArray;\n    };\n    NoPersistenceProvider.prototype.addDb = function (dbId) {\n        if (this.dbArray.indexOf(dbId) === -1)\n            this.dbArray.push(dbId);\n        return Promise.resolve();\n    };\n    NoPersistenceProvider.prototype.unlinkDb = function (dbId) {\n        var _this = this;\n        if (this.dbArray.indexOf(dbId) > -1) {\n            this.dbArray.splice(this.dbArray.indexOf(dbId), 1);\n            this.transactionsSync(dbId).forEach(function (transaction) {\n                _this.deleteTransaction(dbId, transaction.id);\n            });\n        }\n    };\n    NoPersistenceProvider.prototype.transactionsSync = function (dbId) {\n        var _this = this;\n        var transactions = [];\n        this.tempStorage.forEach(function (key, val) {\n            if (key.startsWith(dbId + '_')) {\n                var transaction = _this.transactionSerializer.fromJson(val);\n                transactions.push(transaction);\n            }\n        });\n        return transactions;\n    };\n    NoPersistenceProvider.prototype.transactions = function (dbId) {\n        return Promise.resolve(this.transactionsSync(dbId));\n    };\n    NoPersistenceProvider.prototype.saveTransaction = function (dbId, transaction) {\n        this.tempStorage.set(dbId + '_' + transaction.id, this.transactionSerializer.toJson(transaction));\n    };\n    NoPersistenceProvider.prototype.deleteTransaction = function (dbId, transactionId) {\n        this.tempStorage.delete(dbId + '_' + transactionId);\n    };\n    NoPersistenceProvider.prototype.getTransaction = function (dbId, transactionId) {\n        var transactionString = this.tempStorage.get(dbId + '_' + transactionId);\n        var transaction = this.transactionSerializer.fromJson(transactionString);\n        return transaction;\n    };\n    NoPersistenceProvider.prototype.keyStore = function (dbId, key, value) {\n        var localKey = 'keystore_' + dbId + '_' + key;\n        if (typeof value !== 'undefined')\n            this.tempStorage.set(localKey, value);\n        return this.tempStorage.get(localKey);\n    };\n    return NoPersistenceProvider;\n}());\nexport { NoPersistenceProvider };\n//# sourceMappingURL=no-persistence-provider.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/no-persistence-provider.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Pipe } from '@angular/core';\n//import {PriceFormat} from './price-Format';\nvar CFormatPipe = (function () {\n    function CFormatPipe() {\n        this.is_number = /[0-9]/;\n        this.centsLimit = 2;\n        this.clearOnEmpty = false;\n        this.centsSeparator = \".\";\n        this.thousandsSeparator = \",\";\n        this.allowNegative = true;\n        this.insertPlusSign = false;\n        this.prefix = \"\";\n        this.suffix = \"\";\n    }\n    CFormatPipe.prototype.transform = function (val, args) {\n        var formattedVal = val;\n        this.price_format(val, false);\n        if (parseFloat(val) < 0) {\n            formattedVal = '(' + formattedVal + ')';\n        }\n        return '$' + formattedVal;\n    };\n    CFormatPipe.prototype.to_numbers = function (str) {\n        var formatted = '';\n        for (var i = 0; i < (str.length); i++) {\n            var char_ = str.charAt(i);\n            if (formatted.length == 0 && char_ == 0)\n                char_ = false;\n            if (char_ && char_.match(this.is_number)) {\n                //if (limit) {\n                //    if (formatted.length < limit) formatted = formatted + char_;\n                //}\n                //else {\n                formatted = formatted + char_;\n                //}\n            }\n        }\n        return formatted;\n    };\n    CFormatPipe.prototype.fill_with_zeroes = function (str) {\n        while (str.length < (this.centsLimit + 1))\n            str = '0' + str;\n        return str;\n    };\n    CFormatPipe.prototype.price_format = function (str, ignore) {\n        str = str + \"\";\n        if (!ignore && (str === '' || str == this.price_format('0', true)) && this.clearOnEmpty)\n            return '';\n        // formatting settings\n        var formatted = this.fill_with_zeroes(this.to_numbers(str));\n        var thousandsFormatted = '';\n        var thousandsCount = 0;\n        var centsSeparator = this.centsSeparator;\n        // Checking CentsLimit\n        if (this.centsLimit == 0) {\n            centsSeparator = \"\";\n            centsVal = \"\";\n        }\n        // split integer from cents\n        var centsVal = formatted.substr(formatted.length - this.centsLimit, this.centsLimit);\n        var integerVal = formatted.substr(0, formatted.length - this.centsLimit);\n        // apply cents pontuation\n        formatted = (this.centsLimit == 0) ? integerVal : integerVal + centsSeparator + centsVal;\n        // apply thousands pontuation\n        if (this.thousandsSeparator) {\n            for (var j = integerVal.length; j > 0; j--) {\n                var char_ = integerVal.substr(j - 1, 1);\n                thousandsCount++;\n                if (thousandsCount % 3 == 0)\n                    char_ = this.thousandsSeparator + char_;\n                thousandsFormatted = char_ + thousandsFormatted;\n            }\n            //\n            if (thousandsFormatted.substr(0, 1) == this.thousandsSeparator)\n                thousandsFormatted = thousandsFormatted.substring(1, thousandsFormatted.length);\n            formatted = (this.centsLimit == 0) ? thousandsFormatted : thousandsFormatted + centsSeparator + centsVal;\n        }\n        // if the string contains a dash, it is negative - add it to the begining (except for zero)\n        if (this.allowNegative && (integerVal != 0 || centsVal != 0)) {\n            if (str.indexOf('-') != -1 && str.indexOf('+') < str.indexOf('-')) {\n                formatted = '-' + formatted;\n            }\n            else {\n                if (!this.insertPlusSign)\n                    formatted = '' + formatted;\n                else\n                    formatted = '+' + formatted;\n            }\n        }\n        // apply the prefix\n        if (this.prefix)\n            formatted = this.prefix + formatted;\n        // apply the suffix\n        if (this.suffix)\n            formatted = formatted + this.suffix;\n        return formatted;\n    };\n    return CFormatPipe;\n}());\nCFormatPipe = __decorate([\n    Pipe({\n        name: 'cFormat'\n    })\n], CFormatPipe);\nexport { CFormatPipe };\n//# sourceMappingURL=currency-format.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/currency-format.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { Category } from '../records/category';\nvar InitCategoryTransaction = (function (_super) {\n    __extends(InitCategoryTransaction, _super);\n    function InitCategoryTransaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InitCategoryTransaction.prototype.getTypeId = function () {\n        return 'InitCategoryTransaction';\n    };\n    InitCategoryTransaction.prototype.apply = function (tp) {\n        // TODO: Validation\n        var table = tp.table(Category);\n        var c = new Category();\n        c.id = this.id;\n        c.name = this.categoryName;\n        table.insert(c);\n        tp.mapTransactionAndRecord(this, c);\n    };\n    InitCategoryTransaction.prototype.update = function (tp) {\n        // TODO: Validation\n        var table = tp.table(Category);\n        var c = table.by('id', this.id);\n        c.name = this.categoryName;\n        table.update(c);\n    };\n    InitCategoryTransaction.prototype.undo = function (tp) {\n        var table = tp.table(Category);\n        var c = table.by('id', this.id);\n        table.remove(c);\n    };\n    InitCategoryTransaction.prototype.deserialize = function (field, value) {\n        return value;\n    };\n    InitCategoryTransaction.prototype.toHumanisedString = function (env) {\n        if (env.action === 'apply') {\n            return \"created category \" + this.categoryName;\n        }\n        else if (env.action === 'update') {\n            return \"renamed category {{old name}} to \" + this.categoryName;\n        }\n        else {\n            return \"removed category \" + this.categoryName;\n        }\n    };\n    return InitCategoryTransaction;\n}(DbTransaction));\nexport { InitCategoryTransaction };\n//# sourceMappingURL=init-category-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-category-transaction.ts","var Processor = (function () {\n    function Processor() {\n    }\n    return Processor;\n}());\nexport { Processor };\n//# sourceMappingURL=processor.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/engine/processor.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { Transaction as TransactionRecord } from '../records/transaction';\nimport Big from 'big.js';\nvar InitSimpleTransaction = (function (_super) {\n    __extends(InitSimpleTransaction, _super);\n    function InitSimpleTransaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InitSimpleTransaction.prototype.getTypeId = function () {\n        return 'InitSimpleTransaction';\n    };\n    InitSimpleTransaction.prototype.apply = function (tp) {\n        // TODO: Validation\n        var table = tp.table(TransactionRecord);\n        var t = new TransactionRecord();\n        t.id = this.id * 100000;\n        t.amount = this.amount;\n        t.date = this.date;\n        t.description = this.description;\n        t.categoryId = this.categoryId;\n        table.insert(t);\n        tp.mapTransactionAndRecord(this, t);\n    };\n    InitSimpleTransaction.prototype.update = function (tp) {\n        var table = tp.table(TransactionRecord);\n        var t = table.by('id', (this.id * 100000));\n        t.amount = this.amount;\n        t.date = this.date;\n        t.description = this.description;\n        t.categoryId = this.categoryId;\n        table.update(t);\n    };\n    InitSimpleTransaction.prototype.undo = function (tp) {\n        var table = tp.table(TransactionRecord);\n        var c = table.by('id', (this.id * 100000));\n        table.remove(c);\n    };\n    InitSimpleTransaction.prototype.deserialize = function (field, value) {\n        if (field === 'amount')\n            return new Big(value);\n        return value;\n    };\n    InitSimpleTransaction.prototype.toHumanisedString = function (env) {\n        var total = env.currencyFormatter(this.amount);\n        if (env.action === 'apply') {\n            return this.description + \" of \" + total;\n        }\n        else if (env.action === 'update') {\n            return this.description + \" to \" + total;\n        }\n        else {\n            return this.description + \" of \" + total;\n        }\n    };\n    return InitSimpleTransaction;\n}(DbTransaction));\nexport { InitSimpleTransaction };\n//# sourceMappingURL=init-simple-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-simple-transaction.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { Transaction as TransactionRecord } from '../records/transaction';\nimport Big from 'big.js';\nvar CreateSplitTransaction = (function (_super) {\n    __extends(CreateSplitTransaction, _super);\n    function CreateSplitTransaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CreateSplitTransaction.prototype.getTypeId = function () {\n        return 'CreateSplitTransaction';\n    };\n    CreateSplitTransaction.prototype.apply = function (tp) {\n        // TODO: Validation\n        var table = tp.table(TransactionRecord);\n        // In the records, keep a list to all the other records, cached...\n        // TODO: Change this to a transaction group record?, can keep the total, etc on there, rather than just an array and totals in the cache if needed ?\n        // TODO: Also, technically, this shouldn't be in the cache. it can be well defined here and is always available...\n        var transactions = new Array();\n        for (var i = 0; i < this.amounts.length; i++) {\n            var t = new TransactionRecord();\n            t.id = this.id * 100000 + i;\n            t.amount = this.amounts[i].amount;\n            t.date = this.amounts[i].date || this.date;\n            t.description = this.description;\n            t.categoryId = this.amounts[i].categoryId;\n            t.accountId = this.amounts[i].accountId;\n            t.x.transactions = transactions;\n            t.status = this.amounts[i].status || this.status;\n            transactions.push(t);\n            table.insert(t);\n            tp.mapTransactionAndRecord(this, t);\n        }\n    };\n    CreateSplitTransaction.prototype.update = function (tp) {\n        // Just remove everything and add it all again\n        // TODO: This won't handle triggering certain category recalcs (but at the moment that doesn't matter...)\n        this.undo(tp);\n        this.apply(tp);\n    };\n    CreateSplitTransaction.prototype.undo = function (tp) {\n        var _this = this;\n        var table = tp.table(TransactionRecord);\n        tp.findAllRecordsForTransaction(this).slice().forEach(function (t) {\n            table.remove(t);\n            tp.unmapTransactionAndRecord(_this, t);\n        });\n    };\n    CreateSplitTransaction.prototype.deserialize = function (field, value) {\n        if (field === 'amounts') {\n            value.forEach(function (line) {\n                line.amount = new Big(line.amount);\n            });\n        }\n        return value;\n    };\n    CreateSplitTransaction.prototype.toHumanisedString = function (env) {\n        var total = env.currencyFormatter(this.amounts.map(function (l) { return l.amount; }).reduce(function (a, b) { return a.plus(b); }));\n        if (env.action === 'apply') {\n            return \"Added \" + this.description + \" of \" + total;\n        }\n        else if (env.action === 'update') {\n            return \"Updated \" + this.description + \" to \" + total;\n        }\n        else {\n            return \"Deleted \" + this.description + \" of \" + total;\n        }\n    };\n    return CreateSplitTransaction;\n}(DbTransaction));\nexport { CreateSplitTransaction };\n//# sourceMappingURL=create-split-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-split-transaction.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { Transaction as TransactionRecord } from '../records/transaction';\nimport Big from 'big.js';\nvar CreateSplitTransfer = (function (_super) {\n    __extends(CreateSplitTransfer, _super);\n    function CreateSplitTransfer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CreateSplitTransfer.prototype.getTypeId = function () {\n        return 'CreateSplitTransfer';\n    };\n    CreateSplitTransfer.prototype.apply = function (tp) {\n        // TODO: Validation\n        // TODO: If multiple accounts, then only a single amount & category\n        var table = tp.table(TransactionRecord);\n        var transactions = new Array();\n        var total = new Big('0');\n        var description = this.description == null || this.description.trim().length == 0 ? 'Transfer' : this.description;\n        for (var i = 0; i < this.amounts.length; i++) {\n            var t_1 = new TransactionRecord();\n            t_1.id = this.id * 100000 + i + 1;\n            t_1.amount = this.amounts[i].amount;\n            total = total.plus(t_1.amount);\n            t_1.date = this.date;\n            t_1.description = description;\n            t_1.categoryId = this.amounts[i].categoryId;\n            t_1.accountId = this.accountId2 || this.accountId;\n            t_1.x.transactions = transactions;\n            t_1.x.type = \"Transfer\"; // TODO: By convention the type shouldn't be in the cache?\n            transactions.push(t_1);\n            table.insert(t_1);\n            tp.mapTransactionAndRecord(this, t_1);\n        }\n        var t = new TransactionRecord();\n        t.id = this.id * 100000;\n        t.amount = total.times(-1);\n        t.date = this.date;\n        t.description = description;\n        t.categoryId = this.categoryId;\n        t.accountId = this.accountId;\n        t.x.transactions = transactions;\n        t.x.type = \"Transfer\";\n        transactions.push(t);\n        table.insert(t);\n        tp.mapTransactionAndRecord(this, t);\n    };\n    CreateSplitTransfer.prototype.update = function (tp) {\n        // Just remove everything and add it all again\n        // TODO: This won't handle triggering certain category recalcs (but at the moment that doesn't matter...)\n        this.undo(tp);\n        this.apply(tp);\n    };\n    CreateSplitTransfer.prototype.undo = function (tp) {\n        var _this = this;\n        var table = tp.table(TransactionRecord);\n        tp.findAllRecordsForTransaction(this).slice().forEach(function (t) {\n            table.remove(t);\n            tp.unmapTransactionAndRecord(_this, t);\n        });\n    };\n    CreateSplitTransfer.prototype.deserialize = function (field, value) {\n        if (field === 'amounts') {\n            value.forEach(function (line) {\n                line.amount = new Big(line.amount);\n            });\n        }\n        return value;\n    };\n    CreateSplitTransfer.prototype.toHumanisedString = function (env) {\n        var total = env.currencyFormatter(this.amounts.map(function (l) { return l.amount; }).reduce(function (a, b) { return a.plus(b); }));\n        if (env.action === 'apply') {\n            return \"Added \" + this.description + \" of \" + total;\n        }\n        else if (env.action === 'update') {\n            return \"Updated \" + this.description + \" to \" + total;\n        }\n        else {\n            return \"Deleted \" + this.description + \" of \" + total;\n        }\n    };\n    return CreateSplitTransfer;\n}(DbTransaction));\nexport { CreateSplitTransfer };\n//# sourceMappingURL=create-split-transfer.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-split-transfer.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { Transaction as TransactionRecord } from '../records/transaction';\nimport Big from 'big.js';\nvar InitCategoryTransferTransaction = (function (_super) {\n    __extends(InitCategoryTransferTransaction, _super);\n    function InitCategoryTransferTransaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InitCategoryTransferTransaction.prototype.getTypeId = function () {\n        return 'InitCategoryTransferTransaction';\n    };\n    InitCategoryTransferTransaction.prototype.apply = function (tp) {\n        // TODO: Validation\n        var table = tp.table(TransactionRecord);\n        var t1 = new TransactionRecord();\n        var t2 = new TransactionRecord();\n        t1.id = this.id * 100000;\n        t2.id = -this.id * 100000;\n        t1.amount = this.amount;\n        t2.amount = this.amount.times('-1');\n        t1.date = this.date;\n        t2.date = this.date;\n        t1.description = this.description ? this.description : 'Transfer';\n        t2.description = this.description ? this.description : 'Transfer';\n        t1.x.type = \"Transfer\"; // TODO: By convention the type shouldn't be in the cache...\n        t2.x.type = \"Transfer\";\n        t1.x.transfer = t2; // TODO: By convention the linked transfer shouldn't be in the cache...\n        t2.x.transfer = t1;\n        t1.categoryId = this.fromCategoryId;\n        t2.categoryId = this.toCategoryId;\n        table.insert(t1);\n        table.insert(t2);\n        tp.mapTransactionAndRecord(this, t1);\n        tp.mapTransactionAndRecord(this, t2);\n    };\n    InitCategoryTransferTransaction.prototype.update = function (tp) {\n        var table = tp.table(TransactionRecord);\n        var t1 = table.by('id', (this.id * 100000));\n        var t2 = table.by('id', -(this.id * 100000));\n        t1.amount = this.amount;\n        t2.amount = this.amount.times('-1');\n        t1.date = this.date;\n        t2.date = this.date;\n        t1.description = this.description ? this.description : 'Transfer';\n        t2.description = this.description ? this.description : 'Transfer';\n        t1.categoryId = this.fromCategoryId;\n        t2.categoryId = this.toCategoryId;\n        table.update(t1);\n        table.update(t2);\n    };\n    InitCategoryTransferTransaction.prototype.undo = function (tp) {\n        var table = tp.table(TransactionRecord);\n        var t1 = table.by('id', (this.id * 100000));\n        var t2 = table.by('id', -(this.id * 100000));\n        table.remove(t1);\n        table.remove(t2);\n    };\n    InitCategoryTransferTransaction.prototype.deserialize = function (field, value) {\n        if (field === 'amount')\n            return new Big(value);\n        return value;\n    };\n    InitCategoryTransferTransaction.prototype.toHumanisedString = function (env) {\n        var total = env.currencyFormatter(this.amount);\n        if (env.action === 'apply') {\n            return \"transferred \" + total + \" from a to b\";\n        }\n        else if (env.action === 'update') {\n            return \"ammended transfer from a to b \" + \" to \" + total; // TODO: What aspect was updated ?\n        }\n        else {\n            return this.description + \" of \" + total;\n        }\n    };\n    return InitCategoryTransferTransaction;\n}(DbTransaction));\nexport { InitCategoryTransferTransaction };\n//# sourceMappingURL=init-category-transfer-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-category-transfer-transaction.ts","var DemoPlayer = (function () {\n    function DemoPlayer() {\n        this.example = {\n            setup: [\n                ['eval', 'some code here'],\n                ['eval', 'asyncCall()']\n            ],\n            queue: [\n                ['move', ''],\n                ['click', ''],\n            ]\n        };\n        this.actionList = [];\n    }\n    DemoPlayer.prototype.buildFrom = function (o) {\n        var _this = this;\n        o.queue.forEach(function (line) {\n            _this.actionList.push({ command: line[0], args: line.length > 1 ? line.slice(1) : [] });\n        });\n        this.setupScript = o.setup;\n    };\n    DemoPlayer.prototype.queue = function (command) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.actionList.push({ command: command, args: args });\n    };\n    DemoPlayer.prototype.addErrorHandler = function (handler) {\n    };\n    DemoPlayer.prototype.addCompletedHandler = function (handler) {\n    };\n    DemoPlayer.prototype.setup = function (demoSetup) {\n        this.demoSetup = demoSetup;\n        return this.demoSetup.setup(this.setupScript);\n    };\n    DemoPlayer.prototype.run = function (demoUI) {\n        this.demoUI = demoUI;\n        this.actionListCurrentLine = 0;\n        this.runAll();\n    };\n    DemoPlayer.prototype.runAll = function () {\n        var _this = this;\n        if (this.actionListCurrentLine < this.actionList.length) {\n            var action = this.actionList[this.actionListCurrentLine];\n            this.actionListCurrentLine++;\n            this.executeAction(action).then(function () {\n                _this.runAll();\n            }).catch(function (reason) {\n            });\n        }\n        else {\n            // TODO: Some kind of end notification\n        }\n    };\n    DemoPlayer.prototype.executeAction = function (action) {\n        switch (action.command) {\n            case 'move':\n                return this.demoUI.moveTo(action.args[0]);\n            case 'click':\n                return this.demoUI.click(action.args[0]);\n            case 'wait':\n                return new Promise(function (resolve) { return setTimeout(resolve, action.args[0]); });\n            case 'type':\n                return this.demoUI.input(action.args[0], action.args[1]);\n            case 'reset':\n                return this.demoSetup.reset();\n            case 'loop':\n                this.actionListCurrentLine = 0;\n                return this.demoSetup.reset();\n            case 'end':\n                this.demoUI.dispose();\n                return Promise.resolve();\n            default: Promise.reject('Invalid command: ' + action.command);\n        }\n    };\n    return DemoPlayer;\n}());\nexport { DemoPlayer };\n//# sourceMappingURL=demo-player.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/demo/demo-player.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from \"@angular/core\";\nvar DemoUI = (function () {\n    function DemoUI() {\n        this.createPointer();\n    }\n    DemoUI.prototype.createPointer = function () {\n        if (document.getElementById('demo-pointer'))\n            document.getElementById('demo-pointer').remove();\n        this.pointerElement = document.createElement('div');\n        this.pointerElement.id = 'demo-pointer';\n        this.pointerElement.style.position = 'fixed';\n        this.pointerElement.style.width = '10px';\n        this.pointerElement.style.height = '10px';\n        this.pointerElement.style.borderRadius = '5px';\n        this.pointerElement.style.backgroundColor = 'black';\n        this.pointerElement.style.boxShadow = '1px 1px 5px rgba(0,0,0,0.5)';\n        this.pointerElement.style.zIndex = '99999999';\n        this.hotspotLeft = 5;\n        this.hotspotTop = 5;\n        this.pointerElement.style.top = (window.innerHeight / 2 - this.hotspotLeft) + 'px';\n        this.pointerElement.style.left = (window.innerWidth / 2 - this.hotspotTop) + 'px';\n        document.body.appendChild(this.pointerElement);\n    };\n    DemoUI.prototype.dispose = function () {\n        if (document.getElementById('demo-pointer'))\n            document.getElementById('demo-pointer').remove();\n        if (document.activeElement && document.activeElement.blur)\n            document.activeElement.blur();\n    };\n    DemoUI.prototype.movePointer = function (pos) {\n        // TODO: Work out the distance and alter the duration (from a set of presets, eg. 100, 200, 300, 400, can round it...) before applying the change here...\n        this.pointerElement.style.left = (pos.x - this.hotspotLeft) + 'px';\n        this.pointerElement.style.top = (pos.y - this.hotspotTop) + 'px';\n    };\n    DemoUI.prototype.showPointerClick = function () {\n    };\n    DemoUI.prototype.showPointer = function () {\n        this.pointerElement.style.display = '';\n    };\n    DemoUI.prototype.hidePointer = function () {\n        this.pointerElement.style.display = 'none';\n    };\n    DemoUI.prototype.getElementCenterPosition = function (elementSelector) {\n        var ele = document.querySelector(elementSelector);\n        var el = ele;\n        // from https://www.kirupa.com/html5/get_element_position_using_javascript.htm\n        var xPos = 0;\n        var yPos = 0;\n        while (el) {\n            if (el.tagName === \"BODY\") {\n                // deal with browser quirks with body/window/document and page scroll\n                var xScroll = el.scrollLeft || document.documentElement.scrollLeft;\n                var yScroll = el.scrollTop || document.documentElement.scrollTop;\n                xPos += (el.offsetLeft - xScroll + el.clientLeft);\n                yPos += (el.offsetTop - yScroll + el.clientTop);\n            }\n            else {\n                // for all other non-BODY elements\n                xPos += (el.offsetLeft - el.scrollLeft + el.clientLeft);\n                yPos += (el.offsetTop - el.scrollTop + el.clientTop);\n            }\n            el = el.offsetParent;\n        }\n        return { x: xPos + ele.offsetWidth / 2, y: yPos + ele.offsetHeight / 2 };\n    };\n    DemoUI.prototype.moveTo = function (elementSelector) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.movePointer(_this.getElementCenterPosition(elementSelector));\n            setTimeout(function () { return resolve(); }, 1000);\n        });\n    };\n    DemoUI.prototype.click = function (elementSelector) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var ele = document.querySelector(elementSelector);\n            //ele.click();\n            var evt = document.createEvent('MouseEvents');\n            evt.initMouseEvent('mousedown', true, true, document.defaultView, 0, 0, 0, _this.pointerElement.offsetLeft, _this.pointerElement.offsetTop, false, false, false, false, 1, null);\n            ele.dispatchEvent(evt);\n            if (_this.focusEnabled) {\n                if (ele.querySelector('input'))\n                    ele.querySelector('input').focus();\n                else\n                    ele.focus();\n            }\n            setTimeout(function () {\n                var evt = document.createEvent('MouseEvents');\n                evt.initMouseEvent('mouseup', true, true, document.defaultView, 0, 0, 0, _this.pointerElement.offsetLeft, _this.pointerElement.offsetTop, false, false, false, false, 1, null);\n                ele.dispatchEvent(evt);\n                evt = document.createEvent('MouseEvents');\n                evt.initMouseEvent('click', true, true, document.defaultView, 0, 0, 0, _this.pointerElement.offsetLeft, _this.pointerElement.offsetTop, false, false, false, false, 1, null);\n                ele.dispatchEvent(evt);\n                resolve();\n            }, 30);\n        });\n        // TODO: Some way to test / wait for action ?\n    };\n    DemoUI.prototype.input = function (elementSelector, text) {\n        var _this = this;\n        var ele = document.querySelector(elementSelector);\n        if (ele.querySelector('input'))\n            ele = ele.querySelector('input');\n        ele.value = '';\n        if (text.length === 0)\n            return Promise.resolve();\n        return new Promise(function (resolve, reject) {\n            _this.typeChars(ele, text, resolve);\n            // TODO: Check value at the end is correct ?\n        });\n    };\n    DemoUI.prototype.typeChars = function (ele, chars, resolve) {\n        var _this = this;\n        ele.value = ele.value + chars.substr(0, 1);\n        ele.dispatchEvent(new Event('input', { 'bubbles': true, 'cancelable': true }));\n        if (chars.length > 1)\n            setTimeout(function () { return _this.typeChars(ele, chars.substr(1), resolve); }, 200);\n        else\n            resolve();\n    };\n    return DemoUI;\n}());\nDemoUI = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [])\n], DemoUI);\nexport { DemoUI };\n//# sourceMappingURL=demo-ui.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/demo/demo-ui.ts","import { Logger } from './logger';\nvar LoggerStorageAppender = (function () {\n    function LoggerStorageAppender(key) {\n        this.key = key;\n        this.limit = 1000;\n        this.logLines = [];\n        LoggerStorageAppender.appenders.set(key, this);\n    }\n    LoggerStorageAppender.prototype.log = function (level, data) {\n        var stringData = new Array();\n        data.forEach(function (e) {\n            stringData.push(Logger.stringValue(e) + '');\n        });\n        var length = this.logLines.push({ timestamp: Date.now(), level: level, data: stringData });\n        if (length > this.limit)\n            this.logLines = this.logLines.splice(0, length - this.limit);\n    };\n    /**\n     * Reverse chronological order (newest to oldest) dump of all the data\n     */\n    LoggerStorageAppender.prototype.stringDump = function () {\n        var all = '';\n        for (var i = this.logLines.length - 1; i >= 0; i--) {\n            all += this.lineToString(this.logLines[i]) + '\\n';\n        }\n        return all;\n    };\n    LoggerStorageAppender.prototype.lineToString = function (logLine) {\n        var d = new Date(logLine.timestamp);\n        var dateString = d.getFullYear() + '-' + (d.getMonth() < 9 ? '0' : '') + (d.getMonth() + 1) + '-' + (d.getDate() < 10 ? '0' : '') + d.getDate() + ' ' + d.getHours() + ':' + (d.getMinutes() < 10 ? '0' : '') + d.getMinutes() + ':' + (d.getSeconds() < 10 ? '0' : '') + d.getSeconds() + '.' + (d.getMilliseconds() < 10 ? '00' : d.getMilliseconds() < 100 ? '0' : '') + d.getMilliseconds();\n        var logLevel = logLine.level === 1 ? 'D' : logLine.level === 3 ? 'E' : 'I';\n        var dataString = '';\n        if (logLine.data.length > 0)\n            dataString = Logger.stringValue(logLine.data[0]);\n        //if (logLine.data.length > 1) dataString += '\\n--------';\n        for (var i = 1; i < logLine.data.length; i++) {\n            dataString += '\\n' + Logger.stringValue(logLine.data[i]);\n        }\n        //if (logLine.data.length > 1) dataString += '\\n--------';\n        return '[' + logLevel + ' ' + dateString + '] ' + dataString;\n    };\n    return LoggerStorageAppender;\n}());\nexport { LoggerStorageAppender };\nLoggerStorageAppender.appenders = new Map();\n//# sourceMappingURL=logger-storage-appender.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/logger-storage-appender.ts","var Autofocus = (function () {\n    function Autofocus() {\n        this._enabled = true;\n    }\n    Object.defineProperty(Autofocus.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled ? '' : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Autofocus.prototype.setEnabled = function (enabled) {\n        this._enabled = enabled;\n    };\n    return Autofocus;\n}());\nexport { Autofocus };\n//# sourceMappingURL=autofocus.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/autofocus.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { ViewController, NavParams } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { Autofocus } from \"../../services/autofocus\";\nvar AddBudgetModal = (function () {\n    function AddBudgetModal(viewCtrl, navParams, autofocus) {\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.autofocus = autofocus;\n        this.viewCtrl = viewCtrl;\n        if (navParams.data && navParams.data.budgetName) {\n            this.editing = true;\n            this.budgetName = navParams.data.budgetName;\n        }\n        else {\n            this.editing = false;\n        }\n    }\n    AddBudgetModal.prototype.submit = function (event) {\n        this.viewCtrl.dismiss({ 'budgetName': this.budgetName });\n        event.preventDefault();\n    };\n    AddBudgetModal.prototype.cancel = function () {\n        this.viewCtrl.dismiss();\n    };\n    return AddBudgetModal;\n}());\nAddBudgetModal = __decorate([\n    Component({\n        templateUrl: 'add-budget.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof Autofocus !== \"undefined\" && Autofocus) === \"function\" && _c || Object])\n], AddBudgetModal);\nexport { AddBudgetModal };\nvar _a, _b, _c;\n//# sourceMappingURL=add-budget.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-budget/add-budget.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Dbms } from '../db/dbms';\nimport { TransactionSerializer } from '../db/transaction-serializer';\nimport stringify from 'json-stable-stringify';\nimport { Logger } from './logger';\nimport { Configuration } from './configuration-service';\n/**\n* The Repl service listens to the database transactions, add/edit/delete and generates replication records. It then \"syncs\" those. It also fetched remote replication records and creates transactions out of them for the database to process...\n**/\nvar Replication = (function () {\n    function Replication(dbms, http, transactionSerializer, configuration) {\n        // TODO: Move the syncing promise to an observable, so we can just \"subscribe\" ?\n        this.dbms = dbms;\n        this.http = http;\n        this.transactionSerializer = transactionSerializer;\n        this.configuration = configuration;\n        this.logger = Logger.get('Replication');\n        this.syncDelay = 1000; // 1 second\n        this.pollInterval = 15 * 60 * 1000; // 15 minutes\n        this.errorRetryInterval = 10 * 1000; // 10 seconds\n        this.syncing = {}; // Holds the latest / current syncing info\n        this.queues = {};\n        this.heads = {};\n        this.incrementingReplId = 100;\n        this.syncing.running = false; // Is there currently a sync running?\n        this.syncing.q = null; // The latest syncing call\n        this.syncing.nextTimeout = null;\n        this.syncing.lastSync = null;\n        this.syncing.lastResultSuccess = true;\n        this.syncing.lastError = null;\n        this.syncing.consecutiveErrorCount = 0;\n    }\n    Replication.prototype.init = function () {\n        var _this = this;\n        this.dbms.dbs.forEach(function (db) {\n            if (_this.enabled(db)) {\n                _this.processDb(db);\n                _this.monitorDb(db);\n            }\n        });\n        this.scheduleSync(this.syncDelay);\n    };\n    Replication.prototype.enable = function (db, deviceReplId) {\n        db.localSetting('repl', '1');\n        db.transactionIdLocalGen(deviceReplId);\n        this.processDb(db);\n        this.monitorDb(db);\n        this.scheduleSync(this.syncDelay);\n    };\n    Replication.prototype.disable = function (db) {\n        var deviceReplId = this.enabled(db);\n        db.localSetting('repl', '');\n        var dbDeviceReplId = db.id + '_' + deviceReplId;\n        delete this.heads[dbDeviceReplId];\n        delete this.queues[db.id];\n    };\n    Replication.prototype.enabled = function (db) {\n        return db.localSetting('repl') === '1' ? db.transactionIdLocalGen() + '' : false;\n    };\n    Replication.prototype.monitorDb = function (db) {\n        var _this = this;\n        db.addEventListener(function (dbEvent) {\n            if (_this.processingTransaction)\n                return;\n            if (dbEvent.eventName === 'transaction-applied' || dbEvent.eventName === 'transaction-undone') {\n                _this.processTransaction(db, dbEvent.data.transaction);\n            }\n            if (dbEvent.eventName === 'db-activated') {\n                // Add a head just incase initalised without any transactions (which happens on linking)\n                _this.updateHead(db, { 'id': 0, 'deviceReplId': _this.enabled(db) });\n                _this.scheduleSync(10);\n            }\n            if (dbEvent.eventName === 'db-deleted') {\n                _this.disable(db);\n            }\n        });\n    };\n    Replication.prototype.processDb = function (db) {\n        this.updateHead(db, { 'id': 0, 'deviceReplId': this.enabled(db) });\n        var sortedDbTransactions = db.sortedTransactions.data();\n        var _loop_1 = function (i) {\n            var t = sortedDbTransactions[i];\n            this_1.logger.debug('Initial transaction iterating: ', function () { return JSON.stringify(t); });\n            this_1.processTransaction(db, t);\n        };\n        var this_1 = this;\n        for (var i = 0; i < sortedDbTransactions.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n    * Process the transaction for replication (generate replication records as needed) and add them to the queue\n    * The queue is watched and \"pushed\" after a short timeout so that a push is batched\n    **/\n    Replication.prototype.processTransaction = function (db, transaction) {\n        if (!this.enabled(db))\n            return;\n        this.logger.debug('- Start Processing Transaction - ', function () { return JSON.stringify(transaction); });\n        var transactionCopy = this.transactionSerializer.cloneTransaction(transaction);\n        delete transactionCopy.x.repl;\n        if (!transaction.x.repl)\n            transaction.x.repl = [];\n        var checksum = this.checksumObject(transactionCopy);\n        var noReplRecords = transaction.x.repl.length === 0;\n        var checksumMismatch = transaction.x.repl.length > 0 && transaction.x.repl[0].checksum !== checksum;\n        var newReplRecord = noReplRecords || checksumMismatch;\n        // If none, or if they are older (different?), etc, then create a new one\n        if (newReplRecord) {\n            if (checksumMismatch)\n                this.logger.debug('New Repl Record due to checksum mismatch - ' + transaction.x.repl[0].checksum + ': ' + checksum);\n            var r = new Repl();\n            var headId = transaction.x.repl.length ? transaction.x.repl[0].id : 0;\n            var nextId = this.nextReplId();\n            if (nextId < headId) {\n                nextId = headId + 1; // Make sure the one just generated is the latest for that transaction in the case of clock skew. Assume this will happen rarely and device clocks are fairly in-sync. Otherwise will need a better synchronisation system. Perhaps synced on the replication server would be the simplest. This current method also allows for a slight chance of duplicate replId in the future, but very slim, so not going to worry about it.\n            }\n            r.id = nextId;\n            r.timestamp = new Date().getTime();\n            r.deviceReplId = this.enabled(db);\n            r.synced = 0;\n            r.checksum = checksum;\n            // r.rollingChecksum = r.checksum + dbDeviceHeadChecksum;\n            r.transaction = transactionCopy;\n            transaction.x.repl.splice(0, 0, r);\n            try {\n                this.processingTransaction = true;\n                db.saveTransaction(transaction);\n            }\n            finally {\n                this.processingTransaction = false;\n            }\n            this.logger.debug('inserted repl record:', function () { return JSON.stringify(transaction); });\n        }\n        for (var i = 0; i < transaction.x.repl.length; i++) {\n            var record = transaction.x.repl[i];\n            if (record.synced)\n                this.updateHead(db, record);\n            if (!record.synced)\n                this.queueRepl(db.id, record, transactionCopy);\n        }\n        this.logger.debug('- End Processing Transaction - ', function () { return JSON.stringify(transaction); });\n    };\n    ;\n    Replication.prototype.queueRepl = function (dbId, repl, transaction) {\n        var _this = this;\n        // Get the queue for the dbId (or create it)\n        if (!this.queues[dbId]) {\n            this.queues[dbId] = new Map();\n        }\n        var queue = this.queues[dbId];\n        queue.set(repl.id + '_' + repl.deviceReplId, repl);\n        this.logger.debug(function () { return 'queueRepl: ' + repl.id + '_' + repl.deviceReplId + ': ' + JSON.stringify(repl) + ': ' + JSON.stringify(queue.get(repl.id + '_' + repl.deviceReplId)); });\n        if (this.delayTimeout) {\n            clearTimeout(this.delayTimeout);\n            this.delayTimeout = 0;\n        }\n        this.delayTimeout = setTimeout(function () { _this.safeSync(); }, this.syncDelay);\n    };\n    ;\n    Replication.prototype.updateHead = function (db, repl) {\n        var _this = this;\n        var dbDeviceReplId = db.id + '_' + repl.deviceReplId;\n        this.logger.debug(function () { return 'Check Repl Head: ' + dbDeviceReplId + ': ' + JSON.stringify({ 'replId': repl.id, 'deviceReplId': repl.deviceReplId, 'dbId': db.id }); });\n        if (!this.heads[dbDeviceReplId] || repl.id > this.heads[dbDeviceReplId].replId) {\n            this.heads[dbDeviceReplId] = { 'replId': repl.id, 'deviceReplId': repl.deviceReplId, 'dbId': db.id }; // TODO: Checksum for rolling checksum?\n            this.logger.debug('Update Repl Head: ' + dbDeviceReplId + ': ', function () { return JSON.stringify(_this.heads[dbDeviceReplId]); });\n        }\n    };\n    ;\n    Replication.prototype.nextReplId = function () {\n        this.incrementingReplId++;\n        if (this.incrementingReplId > 999)\n            this.incrementingReplId = 100;\n        return (new Date().getTime() * 1000) + this.incrementingReplId;\n    };\n    Replication.prototype.checksumObject = function (o) {\n        var i;\n        var chk = 0x12345678;\n        var s = stringify(o);\n        for (i = 0; i < s.length; i++) {\n            chk += (s.charCodeAt(i) * (i + 1));\n        }\n        return chk;\n    };\n    Replication.prototype.checksum = function (s) {\n        var i;\n        var chk = 0x12345678;\n        for (i = 0; i < s.length; i++) {\n            chk += (s.charCodeAt(i) * (i + 1));\n        }\n        return chk;\n    };\n    Replication.prototype.scheduleSync = function (delay) {\n        var _this = this;\n        if (this.syncing.nextTimeout) {\n            clearTimeout(this.syncing.nextTimeout);\n            this.syncing.nextTimeout = null;\n        }\n        if (!delay) {\n            if (this.syncing.lastResultSuccess) {\n                delay = this.pollInterval;\n            }\n            else {\n                delay = this.errorRetryInterval * this.syncing.consecutiveErrorCount;\n                if (this.errorRetryInterval > this.pollInterval)\n                    delay = this.pollInterval;\n            }\n        }\n        this.syncing.nextTimeout = setTimeout(function () { _this.safeSync(); }, delay);\n    };\n    /** SafeSync will return success unless there is an internal error */\n    Replication.prototype.sync = function (safe) {\n        var _this = this;\n        if (safe === void 0) { safe = false; }\n        this.logger.debug('SYNC');\n        if (this.syncing.running)\n            return this.syncing.q;\n        this.syncing.running = true;\n        this.syncing.lastSync = new Date().getTime();\n        if (this.syncing.nextTimeout) {\n            clearTimeout(this.syncing.nextTimeout);\n            this.syncing.nextTimeout = null;\n        }\n        var syncing = this.syncing;\n        this.syncing.q = new Promise(function (success, fail) {\n            _this.doSync(function () {\n                syncing.running = false;\n                _this.logger.debug('SYNC: Success');\n                syncing.lastResultSuccess = true;\n                syncing.consecutiveErrorCount = 0;\n                _this.scheduleSync();\n                success();\n            }, function (error) {\n                syncing.running = false;\n                syncing.lastResultSuccess = false;\n                if (syncing.lastError && ((syncing.lastError.connectionIssue && !error.connectionIssue) || (syncing.lastError.serverIssue && !error.serverIssue) || (syncing.lastError.internalIssue && !error.internalIssue)))\n                    syncing.consecutiveErrorCount = 0;\n                syncing.lastError = error;\n                syncing.consecutiveErrorCount++;\n                _this.logger.debug('SYNC: Fail - ', syncing);\n                _this.scheduleSync();\n                if (!safe || error.internalIssue) {\n                    fail(error);\n                }\n                else {\n                    success();\n                }\n            });\n        });\n        return this.syncing.q;\n    };\n    /** SafeSync will return success unless there is an internal error */\n    Replication.prototype.safeSync = function () {\n        return this.sync(true);\n    };\n    Replication.prototype.doSync = function (success, error) {\n        var _this = this;\n        var replData = {};\n        var totalPushCount = 0;\n        Object.keys(this.queues).forEach(function (dbId) {\n            var replMap = _this.queues[dbId];\n            if (replMap.length !== 0) {\n                if (!replData.push)\n                    replData.push = [];\n                var found = false;\n                for (var i = 0; i < replData.push.length; i++) {\n                    if (replData.push[i].dbId === dbId) {\n                        found = true;\n                        break;\n                    }\n                }\n                var pushDb_1 = found ? replData.push[i] : replData.push[replData.push.push({ 'dbId': dbId, 'repl': [] }) - 1];\n                replMap.forEach(function (r, key) {\n                    var replDataRecord = { 'deviceReplId': r.deviceReplId, 'replData': stringify({ transaction: r.transaction, 'timestamp': r.timestamp, 'checksum': r.checksum }), 'id': r.id };\n                    pushDb_1.repl.push(replDataRecord);\n                    totalPushCount++;\n                });\n            }\n        });\n        Object.keys(this.heads).forEach(function (dbDeviceReplId) {\n            var r = _this.heads[dbDeviceReplId];\n            var headRecord = { 'replId': r.replId, 'deviceReplId': r.deviceReplId, 'dbId': r.dbId };\n            if (!replData.fetch)\n                replData.fetch = [];\n            replData.fetch.push(headRecord);\n        });\n        this.logger.debug(function () { return replData; });\n        if (!replData.push && !replData.fetch) {\n            success(); // no-op really\n            return;\n        }\n        if (totalPushCount) {\n            this.logger.info('Pushing ' + totalPushCount + ' Records');\n        }\n        this.http.post('https://api.freebudgetapp.com/sync', JSON.stringify(replData))\n            .map(function (res) { return res.json(); })\n            .subscribe(function (response) {\n            _this.logger.debug(function () { return response; });\n            try {\n                if (_this.configuration.temporary.simulateSyncError)\n                    throw new Error(\"Simulated Sync Error\");\n                // Process the data I got\n                if (response.processed) {\n                    var totalIncomingProcessed_1 = 0;\n                    response.processed.forEach(function (dbProcessed) {\n                        var dbId = dbProcessed.dbId;\n                        var db = _this.dbms.getDb(dbId);\n                        var replMap = _this.queues[dbId];\n                        if (dbProcessed && dbProcessed.processed) {\n                            dbProcessed.processed.forEach(function (replProcessed) {\n                                if (replProcessed.success) {\n                                    totalIncomingProcessed_1++;\n                                    if (replProcessed.success !== true) {\n                                        _this.logger.error('Replication success status: ' + replProcessed.success);\n                                    }\n                                    var key = replProcessed.replId + '_' + replProcessed.deviceReplId;\n                                    var replRecord = replMap.get(key);\n                                    replRecord.synced = new Date().getTime();\n                                    var originalTransaction = db.getTransaction(replRecord.transaction.id);\n                                    try {\n                                        _this.processingTransaction = true;\n                                        db.saveTransaction(originalTransaction);\n                                    }\n                                    finally {\n                                        _this.processingTransaction = false;\n                                    }\n                                    replMap.delete(key);\n                                    _this.updateHead(db, replRecord);\n                                }\n                            });\n                        }\n                    });\n                    if (totalIncomingProcessed_1 > 0 || totalPushCount !== totalIncomingProcessed_1) {\n                        _this.logger.info('Server responded ' + totalIncomingProcessed_1 + ' records successfully processed');\n                    }\n                }\n            }\n            catch (e) {\n                var errorData = new SyncErrorData();\n                errorData.error = e;\n                errorData.message = 'Internal Error in Handling Sync Processed Response';\n                errorData.internalIssue = true;\n                error(errorData);\n                return;\n            }\n            if (response.repl) {\n                _this.logger.info('Processing ' + response.repl.length + ' Incoming Repl Records');\n                var processedCount_1 = 0;\n                var skippedCount_1 = 0;\n                var errorCalled_1 = false;\n                response.repl.forEach(function (replRecord) {\n                    try {\n                        replRecord.replId = parseInt(replRecord.replId);\n                        var dbId = replRecord.dbId;\n                        var db = _this.dbms.getDb(dbId);\n                        if (db.isActivating()) {\n                            return false;\n                        }\n                        // dbId, replId, deviceReplId, replData\n                        // replData -> transaction, timestamp, checksum\n                        _this.logger.debug('Processing incoming replRecord - ', function () { return JSON.stringify(replRecord); });\n                        // Get the transaction by id from the db\n                        var replData_1 = JSON.parse(replRecord.replData);\n                        var transaction_1 = db.getTransaction(replData_1.transaction.id);\n                        var isExisting = transaction_1 && true;\n                        _this.logger.debug('Is Existing: ' + isExisting);\n                        _this.logger.debug(function () { return JSON.stringify(transaction_1); });\n                        if (!transaction_1)\n                            transaction_1 = _this.transactionSerializer.cloneTransaction(replData_1.transaction);\n                        if (!transaction_1.x.repl)\n                            transaction_1.x.repl = [];\n                        if (transaction_1.x.repl.some(function (e) {\n                            _this.logger.debug('Check: ' + e.id + ' === ' + replRecord.replId + ' && ' + e.deviceReplId + ' === ' + replRecord.deviceReplId);\n                            return e.id === replRecord.replId && e.deviceReplId === replRecord.deviceReplId;\n                        })) {\n                            // We've already got it... do something ? Like a checksum?\n                            // TODO: Can probably just drop it here, it is already in sync\n                            // TODO: What if it isn't the head repl record ? - that is ok, they should be sorted anyway....\n                            // TODO: Check all the checksums just to make sure we are good here.. foreach... this.checksumObject(transaction);\n                            _this.logger.info('Repl record already exists for transaction. Skipping.', replRecord);\n                            skippedCount_1++;\n                            return true;\n                        }\n                        else {\n                            _this.logger.debug('Adding repl record to transaction');\n                            // Reconstruct the repl record\n                            var r = new Repl();\n                            r.id = replRecord.replId;\n                            r.timestamp = replData_1.timestamp;\n                            r.deviceReplId = replRecord.deviceReplId;\n                            r.synced = new Date().getTime();\n                            r.checksum = replData_1.checksum;\n                            // this.checksumObject(transactionCopy); // TODO: Check this\n                            // r.rollingChecksum = r.checksum + dbDeviceHeadChecksum;\n                            r.transaction = replData_1.transaction;\n                            transaction_1.x.repl.splice(0, 0, r);\n                        }\n                        transaction_1.x.repl.sort(function (a, b) {\n                            return b.id - a.id === 0 ? a.deviceReplId - b.deviceReplId : b.id - a.id;\n                        });\n                        _this.logger.debug('Transaction after sorting - ', function () { return JSON.stringify(transaction_1); });\n                        if (isExisting) {\n                            // Were copying fields from the updated transaction to the database attached one\n                            _this.logger.debug('Updating transaction record in database');\n                            var updatedTransaction_1 = transaction_1.x.repl[0].transaction;\n                            var repl = transaction_1.x.repl;\n                            Object.keys(transaction_1).forEach(function (key) {\n                                if (key !== '$loki' && key !== 'meta' && key !== 'applied')\n                                    delete transaction_1[key];\n                            });\n                            Object.keys(updatedTransaction_1).forEach(function (key) {\n                                if (key !== '$loki' && key !== 'meta' && key !== 'applied')\n                                    transaction_1[key] = transaction_1.deserialize(key, JSON.parse(JSON.stringify(updatedTransaction_1[key])));\n                            });\n                            transaction_1.x.repl = repl;\n                        }\n                        _this.logger.debug('Processing transaction record - ', function () { return JSON.stringify(transaction_1); });\n                        try {\n                            _this.processingTransaction = true;\n                            db.applyTransaction(transaction_1);\n                        }\n                        finally {\n                            _this.processingTransaction = false;\n                        }\n                        _this.updateHead(db, transaction_1.x.repl[0]);\n                        _this.logger.debug('- End Processing incoming replRecord');\n                        processedCount_1++;\n                        return true; // Continue;\n                    }\n                    catch (e) {\n                        var errorData = new SyncErrorData();\n                        _this.logger.info(\"Dump of internal error in repl\", e);\n                        errorData.error = e;\n                        errorData.message = 'Internal Error in Processing New Repl Record During Sync: ' + JSON.stringify(replRecord);\n                        errorData.internalIssue = true;\n                        error(errorData);\n                        errorCalled_1 = true;\n                        return false; // Break;\n                    }\n                });\n                if (processedCount_1)\n                    _this.logger.info('Processed ' + processedCount_1 + ' Incoming Repl Records');\n                if (skippedCount_1) {\n                    _this.logger.info('Skipped ' + skippedCount_1 + ' Incoming Repl Records');\n                }\n                if (errorCalled_1) {\n                    return;\n                }\n            }\n            success();\n        }, function (response) {\n            var errorData = new SyncErrorData();\n            errorData.message = 'Server Error in Processing Sync Response: ' + response;\n            errorData.serverIssue = true;\n            error(errorData);\n        });\n    };\n    return Replication;\n}());\nReplication = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof TransactionSerializer !== \"undefined\" && TransactionSerializer) === \"function\" && _c || Object, typeof (_d = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _d || Object])\n], Replication);\nexport { Replication };\nvar Repl = (function () {\n    function Repl() {\n    }\n    return Repl;\n}());\nexport { Repl };\nvar SyncErrorData = (function () {\n    function SyncErrorData() {\n        this.connectionIssue = false;\n        this.internalIssue = false;\n        this.serverIssue = false;\n    }\n    return SyncErrorData;\n}());\nexport { SyncErrorData };\nvar _a, _b, _c, _d;\n//# sourceMappingURL=replication-service.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/replication-service.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavParams, ViewController, NavController, ActionSheetController, ToastController } from 'ionic-angular';\nimport { Clipboard as NativeClipboard } from '@ionic-native/clipboard';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport 'rxjs/add/operator/map';\nimport { Http } from '@angular/http';\nimport { Dbms } from '../../db/dbms';\nimport { Configuration } from '../../services/configuration-service';\nimport { Replication } from '../../services/replication-service';\nimport { Component } from '@angular/core';\nimport { Logger } from '../../services/logger';\nimport Clipboard from 'clipboard';\nvar ShareBudgetModal = ShareBudgetModal_1 = (function () {\n    function ShareBudgetModal(viewCtrl, formBuilder, http, navParams, dbms, configuration, replication, nav, actionSheetCtrl, toastCtrl, nativeClipboard) {\n        this.viewCtrl = viewCtrl;\n        this.formBuilder = formBuilder;\n        this.http = http;\n        this.dbms = dbms;\n        this.configuration = configuration;\n        this.replication = replication;\n        this.nav = nav;\n        this.actionSheetCtrl = actionSheetCtrl;\n        this.toastCtrl = toastCtrl;\n        this.nativeClipboard = nativeClipboard;\n        this.logger = Logger.get('ShareBudgetModal');\n        this.viewCtrl = viewCtrl;\n        this.form = formBuilder.group({\n            budgetName: ['', Validators.required]\n        });\n        if (navParams.data.budgetId) {\n            this.budget = dbms.getDb(navParams.data.budgetId);\n        }\n    }\n    ShareBudgetModal.prototype.close = function () {\n        if (this.closed)\n            return;\n        this.closed = true;\n        if (this.newlyLinkedBudget) {\n            this.viewCtrl.dismiss({ 'newBudget': this.budget });\n        }\n        else {\n            this.viewCtrl.dismiss();\n        }\n    };\n    ShareBudgetModal.prototype.cancel = function () {\n        if (this.newlyLinkedBudget)\n            return;\n        if (this.linkingSubscription && !this.linkingSubscription.closed) {\n            this.linkingSubscription.unsubscribe();\n            delete this.linkingSubscription;\n        }\n        this.linking = false;\n        if (this.sharingSubscription && !this.sharingSubscription.closed) {\n            this.sharingSubscription.unsubscribe();\n            delete this.sharingSubscription;\n        }\n        this.sharing = false;\n    };\n    ShareBudgetModal.prototype.isShared = function () {\n        return this.budget && this.replication.enabled(this.budget);\n    };\n    ShareBudgetModal.prototype.tryLink = function (budgetId) {\n        var _this = this;\n        this.linkingError = false;\n        this.doLink(budgetId, function (err) {\n        }, function (budget) {\n            setTimeout(function () { return _this.close(); }, 3000);\n        });\n    };\n    ShareBudgetModal.prototype.doLink = function (budgetId, errorHandler, successHandler) {\n        var _this = this;\n        if (this.newlyLinkedBudget)\n            return;\n        if (this.linkingSubscription && !this.linkingSubscription.closed)\n            this.linkingSubscription.unsubscribe();\n        this.linkingSubscription = this.http.post('https://api.freebudgetapp.com/link', JSON.stringify({ 'dbId': budgetId, 'deviceId': this.configuration.deviceInstallationId, 'deviceName': this.configuration.deviceName }))\n            .map(function (response) { return response.json(); })\n            .subscribe(function (response) {\n            _this.logger.info('success: ' + JSON.stringify(response));\n            var budgetName = response.dbName;\n            var deviceReplId = response.replId;\n            _this.dbms.createDb(budgetId).then(function (budget) {\n                _this.budget = budget;\n                _this.budget.name(budgetName);\n                _this.replication.enable(_this.budget, deviceReplId);\n                _this.replication.safeSync();\n                _this.newlyLinkedBudget = true;\n            }).then(function () {\n                if (successHandler)\n                    successHandler(_this.budget);\n            });\n        }, function (err) {\n            _this.logger.debug('error: ' + JSON.stringify(err));\n            if (errorHandler)\n                errorHandler(err);\n        });\n    };\n    ShareBudgetModal.prototype.link = function (budgetId) {\n        var _this = this;\n        this.linking = true;\n        this.linkingError = false;\n        this.doLink(budgetId, function (err) {\n            _this.linking = false;\n            _this.linkingError = true;\n            try {\n                var message = JSON.parse(err._body).error.message + '';\n                if (message.match('Bad Request: Invalid dbId ')) {\n                    message = message.replace('Bad Request: Invalid dbId ', '');\n                    _this.linkingErrorMessage = 'The share code ' + message + ' doesn\\'t link up with any budget that we know about. Please check it and try again.';\n                }\n                else if (message.match('Bad Request: dbId ') && message.match(' does not exist')) {\n                    message = message.replace('Bad Request: dbId ', '').replace(' does not exist', '');\n                    _this.linkingErrorMessage = 'The share code ' + message + ' doesn\\'t link up with any budget that we know about. Please check it and try again.';\n                }\n                else if (message) {\n                    _this.linkingErrorMessage = 'Error: ' + message;\n                }\n            }\n            catch (e) {\n                _this.linkingErrorMessage = err && err.status ? 'Error Code: ' + err.status + ' - ' + err.statusText : 'Uh Oh! Something has gone wrong. Please try again.';\n            }\n        }, function (budget) {\n            _this.linking = false;\n            setTimeout(function () { return _this.close(); }, 3000);\n        });\n    };\n    ShareBudgetModal.prototype.shareBudget = function () {\n        var _this = this;\n        if (this.sharingSubscription && !this.sharingSubscription.closed)\n            this.sharingSubscription.unsubscribe();\n        this.sharing = true;\n        this.sharingError = false;\n        this.sharingSubscription = ShareBudgetModal_1.postShare(this.http, this.budget.id, this.budget.name(), this.configuration.deviceInstallationId, this.configuration.deviceName)\n            .map(function (response) { return response.json(); })\n            .subscribe(function (response) {\n            _this.logger.info('success: ' + JSON.stringify(response));\n            _this.replication.enable(_this.budget, response.replId);\n            _this.logger.info('ReplId: ' + _this.replication.enabled(_this.budget));\n            _this.sharing = false;\n        }, function (err) {\n            _this.logger.debug('error: ' + JSON.stringify(err));\n            _this.sharing = false;\n            _this.sharingError = true;\n            try {\n                var message = JSON.parse(err._body).error.message + '';\n                _this.sharingErrorMessage = 'Error: ' + message;\n            }\n            catch (e) {\n                _this.sharingErrorMessage = err && err.status ? 'Error Code: ' + err.status + ' - ' + err.statusText : 'Uh Oh! Something has gone wrong. Please try again.';\n            }\n        });\n    };\n    ShareBudgetModal.postShare = function (http, budgetId, budgetName, deviceInstallationId, deviceName) {\n        return http.post('https://api.freebudgetapp.com/share', JSON.stringify({ 'dbId': budgetId, 'dbName': budgetName, 'deviceId': deviceInstallationId, 'deviceName': deviceName }));\n    };\n    ShareBudgetModal.prototype.shareOptions = function () {\n        var _this = this;\n        var actionSheet = this.actionSheetCtrl.create({\n            title: 'Share',\n            buttons: [\n                {\n                    text: 'Email',\n                    handler: function () {\n                        window.location.href = 'mailto:?subject=' + encodeURI(_this.budget.name()) + ' Share Code&body=' + encodeURI(_this.budget.id);\n                    }\n                }, {\n                    text: 'Copy',\n                    cssClass: 'share-copy',\n                    handler: function () {\n                        if (_this.configuration.native) {\n                            _this.nativeClipboard.copy(_this.budget.id).then(function () {\n                                _this.toastCtrl.create({\n                                    message: 'Copied!\\nOpen another application and paste the share code',\n                                    duration: 10000,\n                                    showCloseButton: true,\n                                    position: 'bottom'\n                                }).present();\n                            }, function (reason) {\n                                _this.toastCtrl.create({\n                                    message: 'Uh oh!\\nThe code couldn\\'t be copied (' + reason + '). You\\'ll need to highlight the code and press Ctrl-C to copy.',\n                                    duration: 10000,\n                                    showCloseButton: true,\n                                    position: 'bottom'\n                                }).present();\n                            });\n                        }\n                    }\n                }, {\n                    text: 'Cancel',\n                    role: 'cancel'\n                }\n            ]\n        });\n        actionSheet.present().then(function () {\n            if (!_this.configuration.native) {\n                var cb = new Clipboard('.share-copy', { text: function () { return _this.budget.id; } });\n                cb.on('success', function () {\n                    _this.toastCtrl.create({\n                        message: 'Copied!\\nOpen another application and paste the share code',\n                        duration: 10000,\n                        showCloseButton: true,\n                        position: 'bottom'\n                    }).present();\n                });\n                cb.on('error', function () {\n                    _this.toastCtrl.create({\n                        message: 'Uh oh!\\nThe code couldn\\'t be copied. You\\'ll need to highlight the code and press Ctrl-C to copy.',\n                        duration: 10000,\n                        showCloseButton: true,\n                        position: 'bottom'\n                    }).present();\n                });\n            }\n        });\n    };\n    return ShareBudgetModal;\n}());\nShareBudgetModal = ShareBudgetModal_1 = __decorate([\n    Component({\n        templateUrl: 'share-budget.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _a || Object, typeof (_b = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _b || Object, typeof (_c = typeof Http !== \"undefined\" && Http) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _e || Object, typeof (_f = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _f || Object, typeof (_g = typeof Replication !== \"undefined\" && Replication) === \"function\" && _g || Object, typeof (_h = typeof NavController !== \"undefined\" && NavController) === \"function\" && _h || Object, typeof (_j = typeof ActionSheetController !== \"undefined\" && ActionSheetController) === \"function\" && _j || Object, typeof (_k = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _k || Object, typeof (_l = typeof NativeClipboard !== \"undefined\" && NativeClipboard) === \"function\" && _l || Object])\n], ShareBudgetModal);\nexport { ShareBudgetModal };\nvar ShareBudgetModal_1, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n//# sourceMappingURL=share-budget.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/share-budget/share-budget.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { ModalController, NavController } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { AddBudgetModal } from '../../modals/add-budget/add-budget';\nimport { ShareBudgetModal } from '../../modals/share-budget/share-budget';\nimport { BudgetPage } from '../../pages/budget/budget';\nimport { Dbms } from '../../db/dbms';\nimport { InitBudgetTransaction } from '../../data/transactions/init-budget-transaction';\nvar HomePage = (function () {\n    function HomePage(nav, dbms, modalController) {\n        this.nav = nav;\n        this.dbms = dbms;\n        this.modalController = modalController;\n        this.nav = nav;\n        this.dbms = dbms;\n    }\n    HomePage.prototype.addBudget = function () {\n        var _this = this;\n        var modal = this.modalController.create(AddBudgetModal);\n        modal.onWillDismiss(function (data) {\n            if (data && data.budgetName !== '') {\n                _this.dbms.createDb().then(function (db) {\n                    db.activate().then(function () {\n                        var t = new InitBudgetTransaction();\n                        t.budgetName = data.budgetName;\n                        db.applyTransaction(t);\n                        db.deactivate();\n                        _this.nav.setRoot(BudgetPage, { 'budget': db }, { animate: false });\n                    });\n                });\n            }\n        });\n        modal.present();\n    };\n    HomePage.prototype.linkBudget = function () {\n        var _this = this;\n        var modal = this.modalController.create(ShareBudgetModal);\n        modal.onDidDismiss(function (data) {\n            if (data && data.newBudget) {\n                _this.nav.setRoot(BudgetPage, { 'budget': data.newBudget });\n            }\n        });\n        modal.present();\n    };\n    return HomePage;\n}());\nHomePage = __decorate([\n    Component({\n        templateUrl: 'home.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _b || Object, typeof (_c = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _c || Object])\n], HomePage);\nexport { HomePage };\nvar _a, _b, _c;\n//# sourceMappingURL=home.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nvar AppReady = (function () {\n    function AppReady() {\n        var _this = this;\n        // Emulate deferred...\n        this.ready = new Promise(function (resolve, reject) { _this.readyResolve = resolve; });\n    }\n    return AppReady;\n}());\nAppReady = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [])\n], AppReady);\nexport { AppReady };\n//# sourceMappingURL=app-ready.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-ready.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nvar BankProviderManager = (function () {\n    function BankProviderManager() {\n        this.providers = new Map();\n    }\n    BankProviderManager.prototype.registerProvider = function (Provider) {\n        var providerName = new Provider().getName();\n        if (this.providers.has(providerName)) {\n            throw new Error(\"Bank provider '\" + providerName + \"' is already registered\");\n        }\n        this.providers.set(providerName, Provider);\n    };\n    BankProviderManager.prototype.newProvider = function (providerName) {\n        var Provider = this.providers.get(providerName);\n        var provider = new Provider();\n        // TODO: Track active providers ? OR, provider some kind of wrapper object around them to manager them (which then references the bank manager)?\n        return provider;\n    };\n    BankProviderManager.prototype.getProviderNames = function () {\n        return Array.from(this.providers.keys());\n    };\n    return BankProviderManager;\n}());\nBankProviderManager = __decorate([\n    Injectable()\n], BankProviderManager);\nexport { BankProviderManager };\n//# sourceMappingURL=bank-provider-manager.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/bank/bank-provider-manager.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Processor } from '../../engine/processor';\nimport { Account } from '../records/account';\nimport { Category } from '../records/category';\nimport { Transaction } from '../records/transaction';\nimport Big from 'big.js';\nimport { Utils } from \"../../services/utils\";\nvar AccountBalanceProcessor = (function (_super) {\n    __extends(AccountBalanceProcessor, _super);\n    function AccountBalanceProcessor(account) {\n        var _this = _super.call(this) || this;\n        _this.account = account;\n        return _this;\n    }\n    AccountBalanceProcessor.prototype.getTypeId = function () {\n        return 'AccountBalance';\n    };\n    AccountBalanceProcessor.prototype.execute = function (tp) {\n        var currentDate = Utils.nowYYYYMMDD();\n        var categoriesMap = new Map();\n        var categoryTable = tp.table(Category);\n        categoryTable.data.forEach(function (c) {\n            categoriesMap.set(c.id, c);\n            if (!c.x.accountBalances)\n                c.x.accountBalances = new Map();\n            c.x.accountBalances.clear();\n        });\n        var accountTransactions = tp.table(Transaction).find({ 'accountId': this.account.id });\n        this.account.balance = accountTransactions.filter(function (t) { return !t.status || (t.status === 'realised' && t.date >= currentDate); }).reduce(function (total, transaction) {\n            var accountBalances = categoriesMap.get(transaction.categoryId).x.accountBalances;\n            var categoryTotal = accountBalances.get(transaction.accountId || null) || new Big(\"0\");\n            accountBalances.set(transaction.accountId || null, categoryTotal.minus(transaction.amount));\n            return total.minus(transaction.amount);\n        }, this.account.openingBalance || new Big('0'));\n        tp.table(Account).update(this.account);\n        categoryTable.data.forEach(function (c) { return categoryTable.update(c); });\n    };\n    return AccountBalanceProcessor;\n}(Processor));\nexport { AccountBalanceProcessor };\n//# sourceMappingURL=account-balance.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/processors/account-balance.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { Account } from '../records/account';\nimport { AccountBalanceProcessor } from '../processors/account-balance';\nimport Big from 'big.js';\nvar CreateAccountTransaction = (function (_super) {\n    __extends(CreateAccountTransaction, _super);\n    function CreateAccountTransaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CreateAccountTransaction.prototype.getTypeId = function () {\n        return 'CreateAccountTransaction';\n    };\n    CreateAccountTransaction.prototype.apply = function (tp) {\n        // TODO: Validation\n        var table = tp.table(Account);\n        var a = new Account();\n        a.id = this.id;\n        a.name = this.name;\n        a.openingBalance = this.openingBalance;\n        a.accountType = this.accountType;\n        a.x.accountNumber = this.bankDetails == null ? undefined : this.bankDetails.accountNumber;\n        a.x.bankProviderName = this.bankDetails == null ? undefined : this.bankDetails.bankProviderName;\n        a.x.openingBankBalance = this.bankDetails == null ? undefined : this.bankDetails.openingBankBalance;\n        a.processors.push(new AccountBalanceProcessor(a));\n        table.insert(a);\n        tp.mapTransactionAndRecord(this, a);\n    };\n    CreateAccountTransaction.prototype.update = function (tp) {\n        // TODO: Validation\n        var table = tp.table(Account);\n        var a = table.by('id', this.id);\n        a.name = this.name;\n        a.openingBalance = this.openingBalance;\n        a.accountType = this.accountType;\n        a.x.accountNumber = this.bankDetails == null ? undefined : this.bankDetails.accountNumber;\n        a.x.bankProviderName = this.bankDetails == null ? undefined : this.bankDetails.bankProviderName;\n        a.x.openingBankBalance = this.bankDetails == null ? undefined : this.bankDetails.openingBankBalance;\n        table.update(a);\n    };\n    CreateAccountTransaction.prototype.undo = function (tp) {\n        var table = tp.table(Account);\n        var a = table.by('id', this.id);\n        table.remove(a);\n    };\n    CreateAccountTransaction.prototype.deserialize = function (field, value) {\n        if (field === 'openingBalance' && value != null)\n            return new Big(value);\n        if (field === 'bankDetails' && value != null) {\n            if (value.openingBankBalance != null)\n                value.openingBankBalance = new Big(value.openingBankBalance);\n        }\n        return value;\n    };\n    CreateAccountTransaction.prototype.toHumanisedString = function (env) {\n        if (env.action === 'apply') {\n            return \"created account \" + this.name;\n        }\n        else if (env.action === 'update') {\n            return \"renamed account {{old name}} to \" + this.name;\n        }\n        else {\n            return \"removed account \" + this.name;\n        }\n    };\n    return CreateAccountTransaction;\n}(DbTransaction));\nexport { CreateAccountTransaction };\n//# sourceMappingURL=create-account-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-account-transaction.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Record } from '../../db/record';\nvar BankTransaction = (function (_super) {\n    __extends(BankTransaction, _super);\n    function BankTransaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BankTransaction.prototype.tableName = function () {\n        return 'BankTransaction';\n    };\n    BankTransaction.prototype.initTable = function (table) {\n        table.ensureUniqueIndex('id');\n    };\n    BankTransaction.prototype.tableCreationOptions = function () {\n        //return {'indices': ['categoryId']};\n    };\n    return BankTransaction;\n}(Record));\nexport { BankTransaction };\n//# sourceMappingURL=bank-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/bank-transaction.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport { BankTransaction } from '../records/bank-transaction';\nimport { Account } from '../records/account';\nimport { Logger } from '../../services/logger';\nimport Big from 'big.js';\nvar MergeBankTransactions = (function (_super) {\n    __extends(MergeBankTransactions, _super);\n    function MergeBankTransactions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MergeBankTransactions.prototype.getTypeId = function () {\n        return 'MergeBankTransactions';\n    };\n    MergeBankTransactions.prototype.apply = function (tp) {\n        // TODO: Validation\n        // Validate checksum, otherwise error... ? (or just skip it ?)\n        if (!this.validateChecksum(tp)) {\n            Logger.get('MergeBankTransactions').info(\"Invalid checksum in applying MergeBankTransactions... skipping\");\n            return;\n        }\n        var table = tp.table(BankTransaction);\n        if (this.inserts) {\n            for (var i = 0; i < this.inserts.length; i++) {\n                var t = new BankTransaction();\n                t.id = this.id * 100000 + i;\n                t.amount = this.inserts[i].amount;\n                t.date = this.inserts[i].date;\n                t.description = this.inserts[i].description;\n                t.status = this.inserts[i].status;\n                t.accountId = this.accountId;\n                t.balance = this.inserts[i].balance;\n                t.balanceSequence = this.inserts[i].balanceSequence;\n                table.insert(t);\n                tp.mapTransactionAndRecord(this, t);\n            }\n        }\n        if (this.upgrades) {\n            for (var i = 0; i < this.upgrades.length; i++) {\n                var t = table.by('id', this.upgrades[i].bankTransactionId);\n                t.balance = this.upgrades[i].balance;\n                t.balanceSequence = this.upgrades[i].balanceSequence;\n                t.amount = this.upgrades[i].amount;\n                t.date = this.upgrades[i].date;\n                t.description = this.upgrades[i].description;\n                t.status = this.upgrades[i].status;\n                t.accountId = this.accountId;\n                // TODO: upgrade date / change log push to record\n                table.update(t);\n            }\n        }\n        if (this.flags) {\n            for (var i = 0; i < this.flags.length; i++) {\n                var t = table.by('id', this.flags[i].bankTransactionId);\n                var flagName = this.flags[i].flag;\n                t['flag' + flagName.substring(0, 1).toUpperCase() + flagName.substring(1)] = this.flags[i].set;\n                // TODO: upgrade date / change log push to record\n                table.update(t);\n            }\n        }\n        // TODO: Move this to be a processor\n        var openingBankBalance = tp.table(Account).by('id', this.accountId).x.openingBankBalance || new Big('0');\n        var accountData = table.chain().find({ 'accountId': this.accountId }).data().filter(function (t) { return !t.flagRemoved; });\n        var maxBalanceSequenceRecord = accountData.find(function (t) { return t.balanceSequence === Math.max.apply(null, accountData.filter(function (t) { return t.balanceSequence; }).map(function (t) { return t.balanceSequence; })); });\n        var minBalanceSequenceRecord = accountData.find(function (t) { return t.balanceSequence === Math.min.apply(null, accountData.filter(function (t) { return t.balanceSequence; }).map(function (t) { return t.balanceSequence; })); });\n        tp.table(Account).by('id', this.accountId).x.calculatedBankBalance = accountData.filter(function (t) { return t.status !== 'authorised'; }).reduce(function (a, b) { return a.plus(b.amount); }, openingBankBalance);\n        tp.table(Account).by('id', this.accountId).x.calculatedBankAvailableBalance = accountData.reduce(function (a, b) { return a.plus(b.amount); }, openingBankBalance);\n        tp.table(Account).by('id', this.accountId).x.calculatedBankProcessedBalance = accountData.filter(function (t) { return t.status === 'processed'; }).reduce(function (a, b) { return a.plus(b.amount); }, openingBankBalance);\n        tp.table(Account).by('id', this.accountId).x.bankBalance = this.accountBalance;\n        tp.table(Account).by('id', this.accountId).x.bankAvailableBalance = this.accountAvailableBalance;\n        tp.table(Account).by('id', this.accountId).x.bankProcessedBalance = maxBalanceSequenceRecord ? maxBalanceSequenceRecord.balance : undefined;\n        tp.table(Account).by('id', this.accountId).x.openingBankProcessedBalance = minBalanceSequenceRecord ? minBalanceSequenceRecord.balance : undefined;\n        tp.table(Account).by('id', this.accountId).x.bankBalanceTimestamp = this.timestamp;\n        // TODO: Could compare calculated balance vs bank balance for each processed to make sure records are consistent and correct and find where an error, duplicate or missing record may exist\n    };\n    MergeBankTransactions.prototype.validateChecksum = function (tp) {\n        var _this = this;\n        if (!this.checksum)\n            return true;\n        var allData = tp.table(BankTransaction).chain().find({ 'accountId': this.accountId }).data().filter(function (t) { return t.id < _this.id * 100000; });\n        var checksum = allData.filter(function (t) { return t.status === 'processed'; }).length + \"_\" + allData.filter(function (t) { return t.status === 'authorised'; }).length + \"_\" + allData.filter(function (t) { return t.status === 'recent'; }).length;\n        return this.checksum === checksum;\n    };\n    MergeBankTransactions.prototype.generateChecksum = function (tp) {\n        var allData = tp.table(BankTransaction).chain().find({ 'accountId': this.accountId }).data();\n        this.checksum = allData.filter(function (t) { return t.status === 'processed'; }).length + \"_\" + allData.filter(function (t) { return t.status === 'authorised'; }).length + \"_\" + allData.filter(function (t) { return t.status === 'recent'; }).length;\n    };\n    MergeBankTransactions.prototype.update = function (tp) {\n        tp.unsupported();\n    };\n    MergeBankTransactions.prototype.undo = function (tp) {\n        tp.unsupported(); // This will need to be undone by re-running from last snapshot rather than rolling back\n    };\n    MergeBankTransactions.prototype.deserialize = function (field, value) {\n        if (field === 'inserts' || field === 'upgrades') {\n            value.forEach(function (line) {\n                line.amount = new Big(line.amount);\n                line.balance = line.balance == null ? undefined : new Big(line.balance);\n            });\n        }\n        if (field === 'accountBalance' || field === 'accountAvailableBalance')\n            value = new Big(value);\n        return value;\n    };\n    MergeBankTransactions.prototype.toHumanisedString = function (env) {\n        if (env.action === 'apply') {\n            return \"New bank transactions synced\";\n        }\n        else if (env.action === 'update') {\n            return '';\n        }\n        else {\n            return '';\n        }\n    };\n    return MergeBankTransactions;\n}(DbTransaction));\nexport { MergeBankTransactions };\n//# sourceMappingURL=merge-bank-transactions.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/merge-bank-transactions.ts","var BankAccount = (function () {\n    function BankAccount() {\n    }\n    return BankAccount;\n}());\nexport { BankAccount };\nvar BankAccountTransaction = (function () {\n    function BankAccountTransaction() {\n    }\n    return BankAccountTransaction;\n}());\nexport { BankAccountTransaction };\n//# sourceMappingURL=provider-interface.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/bank/provider-interface.ts","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { BankAccount, BankAccountTransaction } from '../provider-interface';\nimport { Logger } from '../../services/logger';\nimport moment from 'moment';\nimport { Utils } from '../../services/utils';\nvar AnzMobileWeb1Provider = (function () {\n    function AnzMobileWeb1Provider() {\n        // TODO: Any kind of settings / setup, or a factory type setup here where we pump out sessions\n        // TODO: Inject / get a logger ?\n        this.logger = Logger.get('AnzMobileWeb1Provider');\n    }\n    AnzMobileWeb1Provider.prototype.getName = function () {\n        return \"ANZ\";\n    };\n    AnzMobileWeb1Provider.prototype.connect = function (hostInterface) {\n        var _this = this;\n        this.browser = hostInterface.provideBrowser('https://www.anz.com/INETBANK/bankmain.asp');\n        this.browser.on('loaderror'); // ?\n        this.hostInterface = hostInterface;\n        return new Promise(function (resolve, reject) {\n            var subscription = _this.browser.on('loadstop').subscribe(function (ev) {\n                subscription.unsubscribe();\n                // TODO: Maybe change this to async / await? rather than all this nested promises\n                _this.executeScriptLogged({ code: 'document.title' }).then(function (val) {\n                    _this.logger.info(val);\n                    var crn = _this.hostInterface.getParameter('bank-login'); // TODO: These should be delcared by the provider - then can be prompted for / stored & managed...\n                    var password = _this.hostInterface.getParameter('bank-password');\n                    var code = '';\n                    if (crn)\n                        code += \"document.getElementById('main').contentWindow.document.getElementById('crn').value = '\" + Utils.javaScriptEscape(crn) + \"';\";\n                    if (password)\n                        code += \"document.getElementById('main').contentWindow.document.getElementById('Password').value = '\" + Utils.javaScriptEscape(password) + \"';\";\n                    if (crn && password) {\n                        code += \"document.getElementById('main').contentWindow.document.getElementById('SignonButton').click();\";\n                        _this.executeScriptLogged({ code: code });\n                    }\n                    else {\n                        _this.hostInterface.showBrowser();\n                    }\n                    var subscription1 = _this.browser.on('loadstart').subscribe(function (ev) {\n                        subscription1.unsubscribe();\n                        _this.hostInterface.hideBrowser();\n                    });\n                    var checker = setInterval(function () {\n                        _this.executeScriptLogged({ code: \"var ele = document.getElementsByTagName('H1')[0]; ele ? ele.textContent.trim().toLowerCase() : '';\" }).then(function (val) {\n                            if (val[0] == 'your accounts') {\n                                // TODO: And the browser has stopped loading check (maybe record a browser \"idle\" ?), and wait for some idle time?, also check on browser finished loading... (the interval will get ajax calls..., not sure if they are triggered by cordova...)\n                                // So make a function to encapsulate that logic...\n                                _this.connected = true;\n                                setTimeout(function () { return resolve(); }, 500); // Delay for page to render? - Seems to load accounts via ajax calls... need to really wait and check for those! - or wait until loading has stopped for X seconds (ie. page is \"stable\")\n                                clearInterval(checker);\n                            }\n                            else {\n                                // TODO: If error, or if browser closed, or if cancelled (how to detect??), or if timeout ?\n                            }\n                        });\n                        _this.executeScriptLogged({ code: \"document.location.href\" }).then(function (val) {\n                            if (val[0].match('relogin'))\n                                _this.hostInterface.showBrowser();\n                        });\n                    }, 1000);\n                }).catch(function (err) {\n                    _this.logger.error(err);\n                    reject(err);\n                });\n            });\n        });\n    };\n    AnzMobileWeb1Provider.prototype.executeScriptLogged = function (script) {\n        return __awaiter(this, void 0, void 0, function () {\n            var wrappedCode, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        wrappedCode = \"try {\" + script.code + \"}catch(err){'Error: ' + JSON.stringify(err)}\";\n                        return [4 /*yield*/, this.browser.executeScript({ code: wrappedCode })];\n                    case 1:\n                        result = _a.sent();\n                        if ((result[0] + '').startsWith('Error: ')) {\n                            this.logger.error('Error executing script in browser', script.code, result[0]);\n                            return [2 /*return*/, [null]];\n                        }\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    AnzMobileWeb1Provider.prototype.isConnected = function () {\n        return this.connected;\n    };\n    AnzMobileWeb1Provider.prototype.getAccounts = function () {\n        // TODO: make sure on accounts listing page, OR nav to that page\n        return this.executeScriptLogged({ code: 'document.getElementsByClassName(\"normalLayoutAccounts\")[0].innerHTML' }).then(function (val) {\n            var dom = new DOMParser().parseFromString(val[0], 'text/html');\n            var bankAccounts = [];\n            Array.from(dom.getElementsByClassName('listViewAccountWrapperYourAccounts')).forEach(function (ele) {\n                var bankAccount = new BankAccount();\n                bankAccount.accountName = ele.getElementsByClassName('accountNameSection')[0].textContent.trim();\n                bankAccount.bsb = ele.getElementsByClassName('accountNoSection')[0].textContent.trim().split(' ')[0];\n                bankAccount.accountNumber = ele.getElementsByClassName('accountNoSection')[0].textContent.trim().split(' ')[1];\n                bankAccount.accountBalance = ele.getElementsByClassName('listViewMobileCurrentBalanceValue')[0].textContent.trim().replace('$', '').replace(',', '').replace(',', '');\n                bankAccount.accountAvailableBalance = ele.getElementsByClassName('listViewMobileAvailableBalanceValue')[0].textContent.trim().replace('$', '').replace(',', '').replace(',', '');\n                bankAccounts.push(bankAccount);\n            });\n            return bankAccounts;\n        });\n    };\n    AnzMobileWeb1Provider.prototype.waitForLoadingToStop = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var subscription = _this.browser.on('loadstop').subscribe(function (ev) {\n                subscription.unsubscribe();\n                resolve();\n            });\n            // TODO: Errors...\n        });\n    };\n    AnzMobileWeb1Provider.prototype.getTransactions = function (account) {\n        return __awaiter(this, void 0, void 0, function () {\n            var bankAccountTransactions;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // TODO: state tracking... At the moment, always click \"home\", then nav to account (document.getElementById(accountName).click())\n                        // TODO: these shoudl be in a \n                        this.executeScriptLogged({ code: \"document.querySelector('li.menuLiClass:nth-child(1) > a').click();\" });\n                        return [4 /*yield*/, this.waitForLoadingToStop()];\n                    case 1:\n                        _a.sent();\n                        this.executeScriptLogged({ code: \"document.querySelector('#\" + account.accountName.split(' ').join('') + \" > a').click();\" });\n                        return [4 /*yield*/, this.waitForLoadingToStop()];\n                    case 2:\n                        _a.sent();\n                        // TODO: Sometimes this fires too soon ?\n                        this.executeScriptLogged({ code: \"document.querySelector('.transactionAuthSection > a:nth-child(1)').click();\" });\n                        return [4 /*yield*/, this.waitForLoadingToStop()];\n                    case 3:\n                        _a.sent();\n                        bankAccountTransactions = [];\n                        return [2 /*return*/, this.executeScriptLogged({ code: 'document.getElementsByClassName(\"tabsContainerAcctTranAuth\")[0].innerHTML' }).then(function (val) {\n                                var dom = new DOMParser().parseFromString(val[0], 'text/html');\n                                Array.from(dom.getElementsByClassName('displayTable')).forEach(function (ele) {\n                                    var bankAccountTransaction = new BankAccountTransaction();\n                                    bankAccountTransaction.description = ele.querySelector('.tran-desc-div').textContent.trim().split(/\\s+/).join(' ');\n                                    bankAccountTransaction.amount = ele.querySelector('.tran-amount-div').textContent.trim().replace(\"$\", \"\").replace(\",\", '').replace(',', '').replace('+', '');\n                                    bankAccountTransaction.balance = (ele.querySelector('.tran-balance-div').textContent.replace('Balance', '').trim().match(/\\S+/g) || [''])[0].replace(\"$\", \"\").replace(\",\", '').replace(',', '');\n                                    var dateMonthParts = ele.querySelector('.dateNmonthSection').textContent.match(/\\S+/g) || [];\n                                    var lastParentElement = ele.parentElement;\n                                    while (lastParentElement.parentElement.getElementsByClassName('monthYearDisplay').length == 0)\n                                        lastParentElement = lastParentElement.parentElement;\n                                    var previousSibling = lastParentElement.previousElementSibling;\n                                    while (previousSibling && previousSibling.getElementsByClassName('monthYearDisplay').length != 1)\n                                        previousSibling = previousSibling.previousElementSibling;\n                                    var monthYearParts = previousSibling ? previousSibling.getElementsByClassName('monthYearDisplay')[0].textContent.match(/\\S+/g) || [] : [];\n                                    if (!bankAccountTransaction.balance && dateMonthParts.length == 2) {\n                                        bankAccountTransaction.status = 'authorised';\n                                        var testDate = moment().date(Number(dateMonthParts[0])).month(dateMonthParts[1]);\n                                        if (testDate.format(Utils.STANDARD_DATE_FORMAT) > moment().format(Utils.STANDARD_DATE_FORMAT))\n                                            testDate.subtract(1, 'years');\n                                        bankAccountTransaction.transactionDate = testDate.format(Utils.STANDARD_DATE_FORMAT);\n                                    }\n                                    else if (dateMonthParts.length == 0 && monthYearParts.length == 1 && monthYearParts[0] == 'Recent') {\n                                        bankAccountTransaction.status = 'recent';\n                                        bankAccountTransaction.transactionDate = null;\n                                    }\n                                    else if (dateMonthParts.length == 2 && monthYearParts.length == 2) {\n                                        bankAccountTransaction.status = 'processed';\n                                        var dateMonth = moment().date(Number(dateMonthParts[0])).month(dateMonthParts[1]);\n                                        var monthYear = moment().month(monthYearParts[0]).year(Number(monthYearParts[1]));\n                                        if (dateMonth.month() != monthYear.month()) { }\n                                        bankAccountTransaction.transactionDate = dateMonth.year(monthYear.year()).format(Utils.STANDARD_DATE_FORMAT);\n                                    }\n                                    else {\n                                        // Invalid / Error\n                                    }\n                                    bankAccountTransactions.push(bankAccountTransaction);\n                                });\n                                bankAccountTransactions.reverse();\n                                return bankAccountTransactions;\n                            })];\n                }\n            });\n        });\n    };\n    AnzMobileWeb1Provider.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // TODO: Logout (if possible) and close the browser object\n                        // TODO: Host needs to close any open browser objects here and log it if was left dangling\n                        // TODO: Note: logging out successfully should remove the window listener\n                        this.executeScriptLogged({ code: \"document.querySelector('.button-logout').click();\" });\n                        return [4 /*yield*/, this.waitForLoadingToStop()];\n                    case 1:\n                        _a.sent();\n                        this.connected = false;\n                        // TODO: If Not logged out, then force quit below...\n                        this.browser.close();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AnzMobileWeb1Provider;\n}());\nexport { AnzMobileWeb1Provider };\n//# sourceMappingURL=anz-mobile-web-1.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/bank/providers/anz-mobile-web-1.ts","var MockDataProvider = (function () {\n    function MockDataProvider() {\n        this.accounts = [{ accountName: \"Mock Account\", accountNumber: \"12345678\", accountBalance: \"1430.00\", accountAvailableBalance: \"1400.00\", bsb: \"555666\" }];\n        this.data = [\n            [\n                { \"description\": \"VISA DEBIT AUTHORISATION COLES EXPRESS 2010 BUSSELTON AU Card Used 9038\", \"amount\": \"-1.50\", \"balance\": \"\", \"status\": \"authorised\", \"transactionDate\": \"20170427\" },\n                { \"description\": \"VISA DEBIT AUTHORISATION BEST AND LESS BUSSELTON AU Card Used 9020\", \"amount\": \"-28.00\", \"balance\": \"\", \"status\": \"authorised\", \"transactionDate\": \"20170427\" },\n                { \"description\": \"VISA DEBIT AUTHORISATION CALLOWS CORNER NEWS BUSSELTON AU Card Used 9020\", \"amount\": \"-40.95\", \"balance\": \"\", \"status\": \"authorised\", \"transactionDate\": \"20170427\" },\n                { \"description\": \"VISA DEBIT AUTHORISATION FOOTBALL FEDERATIO N AUSTRSYDNEYAU Card Used 9020\", \"amount\": \"-110.00\", \"balance\": \"\", \"status\": \"authorised\", \"transactionDate\": \"20170426\" },\n                { \"description\": \"VISA DEBIT AUTHORISATION HARMONY HAIR AND BEAUT BUSSELTON AU Card Used 9038\", \"amount\": \"-15.00\", \"balance\": \"\", \"status\": \"authorised\", \"transactionDate\": \"20170426\" },\n                { \"description\": \"VISA DEBIT AUTHORISATION WOOLWORTHS 4416 BUSSELTON AU Card Used 9038\", \"amount\": \"-28.57\", \"balance\": \"\", \"status\": \"authorised\", \"transactionDate\": \"20170425\" },\n                { \"description\": \"VISA DEBIT AUTHORISATION TERRY WHITE CHEMISTS BUSSELTON AU Card Used 9020\", \"amount\": \"-108.55\", \"balance\": \"\", \"status\": \"authorised\", \"transactionDate\": \"20170424\" },\n                { \"description\": \"EFTPOS Cape Chiropract3227592 \\\\BUSSELTON06\", \"amount\": \"-55.00\", \"balance\": \"\", \"status\": \"processed\", \"transactionDate\": \"20170428\" },\n                { \"description\": \"EFTPOS THE REJECT SHOP 610 BUSSELTON AU\", \"amount\": \"-6.00\", \"balance\": \"\", \"status\": \"recent\", \"transactionDate\": null },\n                { \"description\": \"ANZ INTERNET BANKING FUNDS TFER DAY CARE MAMA BIRD\", \"amount\": \"62.50\", \"balance\": \"\", \"status\": \"processed\", \"transactionDate\": \"20170427\" },\n                { \"description\": \"VISA DEBIT PURCHASE CARD 9038 COLES EXPRESS 2010 BUSSELTON\", \"amount\": \"-1.50\", \"balance\": \"\", \"status\": \"processed\", \"transactionDate\": \"20170427\" },\n                { \"description\": \"ANZ INTERNET BANKING BPAY TAX OFFICE PAYMENT {238536},\", \"amount\": \"-907.00\", \"balance\": \"\", \"status\": \"processed\", \"transactionDate\": \"20170424\" },\n                { \"description\": \"ANZ INTERNET BANKING BPAY SGIO INSURANCE {240659},\", \"amount\": \"-653.60\", \"balance\": \"\", \"status\": \"processed\", \"transactionDate\": \"20170424\" },\n                { \"description\": \"VISA DEBIT PURCHASE CARD 9020 DYNAMIC ORGANIC (WA) MANDURAH\", \"amount\": \"-45.00\", \"balance\": \"\", \"status\": \"processed\", \"transactionDate\": \"20170421\" },\n                { \"description\": \"VISA DEBIT PURCHASE CARD 9038 COLES EXPRESS 2010 BUSSELTON\", \"amount\": \"-1.50\", \"balance\": \"\", \"status\": \"processed\", \"transactionDate\": \"20170418\" }\n            ], []\n        ];\n    }\n    MockDataProvider.prototype.getName = function () {\n        return \"Mock\";\n    };\n    MockDataProvider.prototype.connect = function (hostInterface) {\n        return Promise.resolve();\n    };\n    MockDataProvider.prototype.isConnected = function () {\n        return true;\n    };\n    MockDataProvider.prototype.getAccounts = function () {\n        return Promise.resolve(this.accounts);\n    };\n    MockDataProvider.prototype.getTransactions = function (account) {\n        // TODO: Increment / multiple versions of the data for test cases\n        return Promise.resolve(this.data[0]);\n    };\n    MockDataProvider.prototype.close = function () {\n        return Promise.resolve();\n    };\n    return MockDataProvider;\n}());\nexport { MockDataProvider };\n//# sourceMappingURL=mock-data-provider.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/bank/providers/mock-data-provider.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Record } from '../../db/record';\nvar TransactionReconciliation = (function (_super) {\n    __extends(TransactionReconciliation, _super);\n    function TransactionReconciliation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TransactionReconciliation.prototype.tableName = function () {\n        return 'TransactionReconciliation';\n    };\n    TransactionReconciliation.prototype.initTable = function (table) {\n        table.ensureUniqueIndex('id');\n    };\n    TransactionReconciliation.prototype.tableCreationOptions = function () {\n        return { 'indices': ['transactionId', 'bankTransactionId'] };\n    };\n    return TransactionReconciliation;\n}(Record));\nexport { TransactionReconciliation };\n//# sourceMappingURL=transaction-reconciliation.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/transaction-reconciliation.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DbTransaction } from '../../db/transaction';\nimport Big from 'big.js';\nimport { TransactionReconciliation } from \"../records/transaction-reconciliation\";\nimport { Transaction } from \"../records/transaction\";\nimport { BankTransaction } from \"../records/bank-transaction\";\nvar CreateTransactionReconciliation = (function (_super) {\n    __extends(CreateTransactionReconciliation, _super);\n    function CreateTransactionReconciliation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CreateTransactionReconciliation.prototype.getTypeId = function () {\n        return 'CreateTransactionReconciliation';\n    };\n    CreateTransactionReconciliation.prototype.apply = function (tp) {\n        // TODO: Validation\n        var table = tp.table(TransactionReconciliation);\n        var t = new TransactionReconciliation();\n        t.id = this.id * 100000;\n        t.amount = this.amount;\n        t.transactionId = this.transactionId;\n        t.bankTransactionId = this.bankTransactionId;\n        t.transactionAmountOverride = this.transactionAmountOverride;\n        var transactionTable = tp.table(Transaction);\n        var transaction = transactionTable.by('id', this.transactionId);\n        if (!transaction.x.reconciliationRecords)\n            transaction.x.reconciliationRecords = [];\n        transaction.x.reconciliationRecords.push(t);\n        var bankTransactionTable = tp.table(BankTransaction);\n        var bankTransaction = bankTransactionTable.by('id', this.bankTransactionId);\n        if (!bankTransaction.x.reconciliationRecords)\n            bankTransaction.x.reconciliationRecords = [];\n        bankTransaction.x.reconciliationRecords.push(t);\n        this.updateBankTransactionReconciliationFlags(bankTransaction);\n        bankTransactionTable.update(bankTransaction);\n        if (this.transactionAmountOverride)\n            transaction.amount = this.amount;\n        transaction.accountId = bankTransaction.accountId;\n        this.updateTransactionReconciliationFlags(transaction);\n        transactionTable.update(transaction);\n        table.insert(t);\n        tp.mapTransactionAndRecord(this, t);\n    };\n    CreateTransactionReconciliation.prototype.update = function (tp) {\n        var table = tp.table(TransactionReconciliation);\n        var t = table.by('id', (this.id * 100000));\n        if (t.transactionId !== this.transactionId || t.bankTransactionId !== this.bankTransactionId) {\n            tp.unsupported();\n        }\n        t.amount = this.amount;\n        t.transactionAmountOverride = this.transactionAmountOverride;\n        var transactionTable = tp.table(Transaction);\n        var transaction = transactionTable.by('id', this.transactionId);\n        var bankTransactionTable = tp.table(BankTransaction);\n        var bankTransaction = bankTransactionTable.by('id', this.bankTransactionId);\n        this.updateBankTransactionReconciliationFlags(bankTransaction);\n        bankTransactionTable.update(bankTransaction);\n        if (this.transactionAmountOverride)\n            transaction.amount = this.amount;\n        // TODO: undoing the transactionAmountOverride needs to re-instate the initial amount from the initial transaction\n        transaction.accountId = bankTransaction.accountId;\n        this.updateTransactionReconciliationFlags(transaction);\n        transactionTable.update(transaction);\n        table.update(t);\n    };\n    CreateTransactionReconciliation.prototype.undo = function (tp) {\n        var table = tp.table(TransactionReconciliation);\n        var t = table.by('id', (this.id * 100000));\n        table.remove(t);\n        var transactionTable = tp.table(Transaction);\n        var transaction = transactionTable.by('id', this.transactionId);\n        transaction.x.reconciliationRecords.splice(transaction.x.reconciliationRecords.indexOf(t), 1);\n        this.updateTransactionReconciliationFlags(transaction);\n        transactionTable.update(transaction);\n        var bankTransactionTable = tp.table(BankTransaction);\n        var bankTransaction = bankTransactionTable.by('id', this.bankTransactionId);\n        bankTransaction.x.reconciliationRecords.splice(bankTransaction.x.reconciliationRecords.indexOf(t), 1);\n        this.updateBankTransactionReconciliationFlags(bankTransaction);\n        bankTransactionTable.update(bankTransaction);\n        // TODO: undoing the transactionAmountOverride needs to re-instate the initial amount from the initial transaction\n        // TODO: Needs to re-instate the initial accountId from the initial transaction (if different)\n        tp.unmapTransactionAndRecord(this, t);\n    };\n    CreateTransactionReconciliation.prototype.updateTransactionReconciliationFlags = function (transaction) {\n        var reconTotal = transaction.x.reconciliationRecords.reduce(function (tot, t) { return tot.plus(t.amount); }, new Big('0'));\n        transaction.x.reconciled = reconTotal.eq(transaction.amount);\n    };\n    CreateTransactionReconciliation.prototype.updateBankTransactionReconciliationFlags = function (bankTransaction) {\n        var reconTotal = bankTransaction.x.reconciliationRecords.reduce(function (tot, t) { return tot.minus(t.amount); }, new Big('0'));\n        bankTransaction.x.reconciled = reconTotal.eq(bankTransaction.amount);\n    };\n    CreateTransactionReconciliation.prototype.deserialize = function (field, value) {\n        if (field === 'amount')\n            return new Big(value);\n        return value;\n    };\n    CreateTransactionReconciliation.prototype.toHumanisedString = function (env) {\n        if (env.action === 'apply') {\n            return \"Reconciled\";\n        }\n        else if (env.action === 'update') {\n            return \"Reconciled\";\n        }\n        else {\n            return \"Unreconciled\";\n        }\n    };\n    return CreateTransactionReconciliation;\n}(DbTransaction));\nexport { CreateTransactionReconciliation };\n//# sourceMappingURL=create-transaction-reconciliation.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-transaction-reconciliation.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable, NgZone } from \"@angular/core\";\nimport { Utils } from \"../services/utils\";\nimport { DemoPlayer } from \"./demo-player\";\nimport { DemoUI } from \"./demo-ui\";\nimport { DemoSetup } from \"./demo-setup\";\nimport { Autofocus } from \"../services/autofocus\";\nvar DemoService = (function () {\n    function DemoService(zone, demoSetup, autofocus) {\n        this.demoSetup = demoSetup;\n        this.autofocus = autofocus;\n        this.controlUrls = ['http://localhost:8100', 'https://ebudgetapp.com'];\n        if (typeof window.ebudget === 'undefined')\n            window.ebudget = {};\n    }\n    DemoService.prototype.start = function () {\n        ebudget.demo = {};\n        window.addEventListener('message', this.receiveMessage.bind(this), false);\n        if (window.parent && Utils.getQueryStringValue('demo_control_url')) {\n            window.parent.postMessage({ event: 'ready', id: Utils.getQueryStringValue('demo') }, decodeURI(Utils.getQueryStringValue('demo_control_url'))); // TODO: How to get this source ? maybe from demo query string?\n        }\n        this.demoPlayer = new DemoPlayer();\n        this.demoUI = new DemoUI();\n        this.demoUI.focusEnabled = this.autofocus.enabled && true;\n    };\n    DemoService.prototype.receiveMessage = function (event) {\n        var _this = this;\n        if (this.controlUrls.indexOf(event.origin) >= 0) {\n            if (event.data.demo && event.data.demo.command === 'script') {\n                var o = JSON.parse(event.data.demo.script);\n                this.demoPlayer.buildFrom(o);\n                this.demoPlayer.setup(this.demoSetup).then(function () {\n                    _this.demoPlayer.run(_this.demoUI);\n                });\n            }\n            else if (event.data.demo && event.data.demo.command === 'reset') {\n                this.demoSetup.reset();\n            }\n            else {\n                alert('invalid message' + JSON.stringify(event.data));\n            }\n        }\n    };\n    return DemoService;\n}());\nDemoService = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _a || Object, typeof (_b = typeof DemoSetup !== \"undefined\" && DemoSetup) === \"function\" && _b || Object, typeof (_c = typeof Autofocus !== \"undefined\" && Autofocus) === \"function\" && _c || Object])\n], DemoService);\nexport { DemoService };\nvar _a, _b, _c;\n//# sourceMappingURL=demo-service.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/demo/demo-service.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Platform, Nav } from 'ionic-angular';\nimport { ViewChild, Component } from '@angular/core';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HomePage } from '../pages/home/home';\nimport { BudgetPage } from '../pages/budget/budget';\nimport { Dbms } from '../db/dbms';\nimport { PersistenceProviderManager } from '../db/persistence-provider-manager';\nimport { EditorProvider, ModalProvider } from '../services/editor-provider';\nimport { Configuration } from '../services/configuration-service';\nimport { Replication } from '../services/replication-service';\nimport { TransactionSerializer } from '../db/transaction-serializer';\nimport { Logger } from '../services/logger';\nimport { AppReady } from './app-ready';\nimport { BankProviderManager } from '../bank/bank-provider-manager';\nimport { InitBudgetTransaction } from '../data/transactions/init-budget-transaction';\nimport { InitCategoryTransaction } from '../data/transactions/init-category-transaction';\nimport { InitSimpleTransaction } from '../data/transactions/init-simple-transaction';\nimport { CreateSplitTransaction } from '../data/transactions/create-split-transaction';\nimport { CreateSplitTransfer } from '../data/transactions/create-split-transfer';\nimport { InitCategoryTransferTransaction } from '../data/transactions/init-category-transfer-transaction';\nimport { InitCategorySimpleWeeklyTransaction } from '../data/transactions/init-category-simple-weekly-transaction';\nimport { CreateAccountTransaction } from '../data/transactions/create-account-transaction';\nimport { MergeBankTransactions } from '../data/transactions/merge-bank-transactions';\nimport { AddEditTransferModal } from '../modals/add-edit-transfer/add-edit-transfer';\nimport { AddEditTransactionModal } from '../modals/add-edit-transaction/add-edit-transaction';\nimport { AddEditSplitTransactionModal } from '../modals/add-edit-split-transaction/add-edit-split-transaction';\nimport { AddEditSplitTransferModal } from '../modals/add-edit-split-transfer/add-edit-split-transfer';\nimport { AnzMobileWeb1Provider } from '../bank/providers/anz-mobile-web-1';\nimport { MockDataProvider } from '../bank/providers/mock-data-provider';\nimport { CreateTransactionReconciliation } from \"../data/transactions/create-transaction-reconciliation\";\nimport { Utils } from \"../services/utils\";\nimport { DemoService } from \"../demo/demo-service\";\nimport { Autofocus } from \"../services/autofocus\";\nimport { DemoSetup } from \"../demo/demo-setup\";\nvar App = (function () {\n    function App(platform, configuration, dbms, persistenceProviderManager, replication, transactionSerializer, editorProvider, appReady, statusBar, splashScreen, bankProviderManager, demoService, autofocus, demoSetup) {\n        var _this = this;\n        this.configuration = configuration;\n        this.transactionSerializer = transactionSerializer;\n        this.editorProvider = editorProvider;\n        this.appReady = appReady;\n        this.statusBar = statusBar;\n        this.splashScreen = splashScreen;\n        this.bankProviderManager = bankProviderManager;\n        this.demoService = demoService;\n        this.autofocus = autofocus;\n        this.demoSetup = demoSetup;\n        this.logger = Logger.get('App');\n        this.logger.info('Constructing App');\n        platform.ready().then(function () {\n            _this.logger.info('Platform Ready');\n            _this.logger.info('Initialising Persistence Provider');\n            persistenceProviderManager.provide().init().then(function () {\n                _this.logger.info('Initialising Persistence Provider');\n                _this.logger.info('Loading Configuration');\n                return configuration.configure();\n            }).then(function () {\n                _this.registerTransactions();\n                _this.registerEditorProviders();\n                _this.registerBankProviders();\n                _this.logger.info('Loading Configuration Done');\n                _this.logger.info('Initialising Dbms');\n                return dbms.init();\n            }).then(function () {\n                _this.logger.info('Initialising Dbms Done');\n                _this.logger.info('Initialising Replication');\n                replication.init();\n                _this.logger.info('Initialising Replication Done');\n                statusBar.styleDefault();\n                splashScreen.hide(); // TODO: Move this earlier if want to have a splash screen while the db init runs... can nav.setRoot to a \"loading...\" page, then set the real page below... Can maybe even have progress updates with the \"then()\" statements?\n                _this.ready = true;\n                if (configuration.lastOpenedBudget()) {\n                    var lastOpenedBudgetId = configuration.lastOpenedBudget();\n                    try {\n                        var budget = dbms.getDb(lastOpenedBudgetId);\n                        if (!budget) {\n                            _this.logger.info('Budget ' + lastOpenedBudgetId + ' not found for auto opening');\n                            _this.nav.setRoot(HomePage);\n                        }\n                        else {\n                            _this.nav.setRoot(BudgetPage, { 'budget': budget });\n                        }\n                    }\n                    catch (e) {\n                        configuration.lastOpenedBudget(null);\n                        _this.logger.error('Unable to auto open budget ' + lastOpenedBudgetId, e);\n                        _this.nav.setRoot(HomePage);\n                    }\n                }\n                else {\n                    _this.nav.setRoot(HomePage);\n                }\n                appReady.readyResolve();\n                if (Utils.getQueryStringValue('demo')) {\n                    demoSetup.fadeOut(true);\n                    autofocus.setEnabled(false);\n                    demoService.start();\n                }\n            }).catch(function (err) {\n                _this.logger.error('Error in initialisation', err);\n            });\n        });\n    }\n    App.prototype.registerEditorProviders = function () {\n        this.editorProvider.registerModalProvider(new TransactionModalProvider(new InitCategoryTransferTransaction().getTypeId(), AddEditTransferModal));\n        this.editorProvider.registerModalProvider(new TransactionModalProvider(new InitSimpleTransaction().getTypeId(), AddEditTransactionModal));\n        this.editorProvider.registerModalProvider(new TransactionModalProvider(new CreateSplitTransaction().getTypeId(), AddEditSplitTransactionModal));\n        this.editorProvider.registerModalProvider(new TransactionModalProvider(new CreateSplitTransfer().getTypeId(), AddEditSplitTransferModal));\n    };\n    App.prototype.registerTransactions = function () {\n        this.transactionSerializer.registerType(InitCategoryTransaction);\n        this.transactionSerializer.registerType(InitCategoryTransferTransaction);\n        this.transactionSerializer.registerType(InitSimpleTransaction);\n        this.transactionSerializer.registerType(CreateSplitTransaction);\n        this.transactionSerializer.registerType(CreateSplitTransfer);\n        this.transactionSerializer.registerType(InitBudgetTransaction);\n        this.transactionSerializer.registerType(InitCategorySimpleWeeklyTransaction);\n        this.transactionSerializer.registerType(CreateAccountTransaction);\n        this.transactionSerializer.registerType(MergeBankTransactions);\n        this.transactionSerializer.registerType(CreateTransactionReconciliation);\n    };\n    App.prototype.registerBankProviders = function () {\n        this.bankProviderManager.registerProvider(AnzMobileWeb1Provider);\n        this.bankProviderManager.registerProvider(MockDataProvider);\n    };\n    return App;\n}());\n__decorate([\n    ViewChild(Nav),\n    __metadata(\"design:type\", typeof (_a = typeof Nav !== \"undefined\" && Nav) === \"function\" && _a || Object)\n], App.prototype, \"nav\", void 0);\nApp = __decorate([\n    Component({\n        templateUrl: 'app.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_b = typeof Platform !== \"undefined\" && Platform) === \"function\" && _b || Object, typeof (_c = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _c || Object, typeof (_d = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _d || Object, typeof (_e = typeof PersistenceProviderManager !== \"undefined\" && PersistenceProviderManager) === \"function\" && _e || Object, typeof (_f = typeof Replication !== \"undefined\" && Replication) === \"function\" && _f || Object, typeof (_g = typeof TransactionSerializer !== \"undefined\" && TransactionSerializer) === \"function\" && _g || Object, typeof (_h = typeof EditorProvider !== \"undefined\" && EditorProvider) === \"function\" && _h || Object, typeof (_j = typeof AppReady !== \"undefined\" && AppReady) === \"function\" && _j || Object, typeof (_k = typeof StatusBar !== \"undefined\" && StatusBar) === \"function\" && _k || Object, typeof (_l = typeof SplashScreen !== \"undefined\" && SplashScreen) === \"function\" && _l || Object, typeof (_m = typeof BankProviderManager !== \"undefined\" && BankProviderManager) === \"function\" && _m || Object, typeof (_o = typeof DemoService !== \"undefined\" && DemoService) === \"function\" && _o || Object, typeof (_p = typeof Autofocus !== \"undefined\" && Autofocus) === \"function\" && _p || Object, typeof (_q = typeof DemoSetup !== \"undefined\" && DemoSetup) === \"function\" && _q || Object])\n], App);\nexport { App };\nvar TransactionModalProvider = (function (_super) {\n    __extends(TransactionModalProvider, _super);\n    function TransactionModalProvider(transactionType, modalClass) {\n        var _this = _super.call(this) || this;\n        _this.transactionType = transactionType;\n        _this.modalClass = modalClass;\n        return _this;\n    }\n    TransactionModalProvider.prototype.provide = function (params) {\n        if (params.typeId === this.transactionType)\n            return this.modalClass;\n    };\n    return TransactionModalProvider;\n}(ModalProvider));\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n//# sourceMappingURL=app.component.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Logger } from '../services/logger';\nvar AppExceptionHandler = (function () {\n    function AppExceptionHandler() {\n    }\n    AppExceptionHandler.prototype.handleError = function (error) {\n        // TODO: Handle the error in the logger better\n        if (error.originalError) {\n            Logger.get('error').info(error);\n            Logger.get('error').error(error.originalError);\n        }\n        else {\n            Logger.get('error').error(error);\n        }\n    };\n    return AppExceptionHandler;\n}());\nexport { AppExceptionHandler };\n//# sourceMappingURL=app-exception-handler.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-exception-handler.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController, App } from 'ionic-angular';\nimport { Account } from '../../data/records/account';\nimport { Dbms } from '../../db/dbms';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { BankProviderManager } from '../../bank/bank-provider-manager';\nimport { CreateAccountTransaction } from '../../data/transactions/create-account-transaction';\nimport { Component } from '@angular/core';\nimport Big from 'big.js';\nimport { Configuration } from \"../../services/configuration-service\";\nvar AddEditAccountModal = (function () {\n    function AddEditAccountModal(viewCtrl, navParams, dbms, nav, alertController, engineFactory, appController, bankProviderManager, configuration) {\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.dbms = dbms;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.engineFactory = engineFactory;\n        this.appController = appController;\n        this.bankProviderManager = bankProviderManager;\n        this.configuration = configuration;\n        this.db = dbms.getDb(navParams.data.budgetId);\n        this.engine = engineFactory.getEngineById(this.db.id);\n        this.data = {};\n        if (navParams.data.accountId) {\n            this.editing = true;\n            var account = this.engine.getRecordById(Account, navParams.data.accountId);\n            this.data.name = account.name;\n            this.data.openingBalance = account.openingBalance == null ? \"0\" : account.openingBalance.toString();\n            this.data.accountType = account.accountType;\n            this.transaction = this.db.transactionProcessor.findTransactionsForRecord(account, CreateAccountTransaction)[0];\n            this.data.accountNumber = account.x.accountNumber;\n            this.data.bankProviderName = account.x.bankProviderName;\n            this.data.openingBankBalance = account.x.openingBankBalance == null ? \"0\" : account.x.openingBankBalance;\n            this.securePrefix = this.engine.db.id + '-' + account.id;\n        }\n        else {\n            this.editing = false;\n            this.transaction = new CreateAccountTransaction();\n            this.data.openingBalance = \"0\";\n            this.data.accountType = 'Bank';\n        }\n    }\n    AddEditAccountModal.prototype.submit = function (event) {\n        event.preventDefault();\n        this.transaction.name = this.data.name;\n        this.transaction.openingBalance = new Big(this.data.openingBalance);\n        this.transaction.accountType = this.data.accountType;\n        this.transaction.bankDetails = {};\n        this.transaction.bankDetails.accountNumber = this.data.accountNumber;\n        this.transaction.bankDetails.bankProviderName = this.data.bankProviderName;\n        this.transaction.bankDetails.openingBankBalance = new Big(this.data.openingBankBalance);\n        this.db.applyTransaction(this.transaction);\n        var accountRecord = this.db.transactionProcessor.findRecordsForTransaction(this.transaction, Account)[0];\n        this.viewCtrl.dismiss({ accountId: accountRecord.id });\n    };\n    AddEditAccountModal.prototype.cancel = function () {\n        this.viewCtrl.dismiss();\n    };\n    AddEditAccountModal.prototype.deleteAccountConfirm = function () {\n        var _this = this;\n        // TODO: Prolly better to archive it than delete it if anything linked to it\n        var confirm = this.alertController.create({\n            title: 'Delete?',\n            message: 'Are you sure you want to delete this account and everything in it?',\n            buttons: [\n                {\n                    text: 'Cancel'\n                }, {\n                    text: 'Delete',\n                    role: 'destructive',\n                    handler: function () {\n                        confirm.dismiss().then(function () {\n                            _this.deleteAccount();\n                        });\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    };\n    AddEditAccountModal.prototype.deleteAccount = function () {\n        this.db.deleteTransaction(this.transaction);\n        this.appController.getRootNav().pop({ animate: false, duration: 0 });\n        this.viewCtrl.dismiss();\n    };\n    AddEditAccountModal.prototype.securePrompt = function (field) {\n        var _this = this;\n        if (!this.configuration.secureAvailable()) {\n            return this.alertController.create({\n                title: 'Secure Stoarge',\n                message: \"Secure storage is unavailable: TODO: Why\",\n                buttons: ['OK']\n            }).present();\n        }\n        return new Promise(function (resolve, reject) {\n            var prompt = _this.alertController.create({\n                title: 'Secure Stoarge',\n                message: 'Enter secure data for \"' + field + '\"',\n                inputs: [\n                    {\n                        name: 'data',\n                        placeholder: 'Secure Data',\n                        type: 'password'\n                    },\n                ],\n                buttons: [\n                    {\n                        text: 'Cancel',\n                        role: 'cancel',\n                        handler: function (data) {\n                            resolve(false);\n                        }\n                    },\n                    {\n                        // TODO: Only if data already present\n                        text: 'Delete',\n                        cssClass: 'danger',\n                        handler: function (data) {\n                            _this.configuration.removeSecure(field).then(function () {\n                                resolve(false);\n                            }).catch(function (error) {\n                                // TODO: Prompt / log error ?\n                                resolve(false);\n                            });\n                        }\n                    },\n                    {\n                        text: 'Save',\n                        handler: function (data) {\n                            _this.configuration.setSecure(field, data.data).then(function () {\n                                resolve(true);\n                            }).catch(function (error) {\n                                // TODO: Prompt / log error ?\n                                resolve(false);\n                            });\n                        }\n                    }\n                ]\n            });\n            prompt.present();\n        });\n    };\n    return AddEditAccountModal;\n}());\nAddEditAccountModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-account.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _e || Object, typeof (_f = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _f || Object, typeof (_g = typeof App !== \"undefined\" && App) === \"function\" && _g || Object, typeof (_h = typeof BankProviderManager !== \"undefined\" && BankProviderManager) === \"function\" && _h || Object, typeof (_j = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _j || Object])\n], AddEditAccountModal);\nexport { AddEditAccountModal };\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j;\n//# sourceMappingURL=add-edit-account.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-account/add-edit-account.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\nimport { Configuration } from \"../services/configuration-service\";\nvar StandardHostInterface = (function () {\n    function StandardHostInterface(inAppBrowser, configuration) {\n        this.inAppBrowser = inAppBrowser;\n        this.configuration = configuration;\n    }\n    StandardHostInterface.prototype.manualShowBrowser = function () {\n        this.forceShowBrowser = true;\n        this.showBrowser();\n    };\n    StandardHostInterface.prototype.showBrowser = function () {\n        this.browser.show();\n    };\n    StandardHostInterface.prototype.hideBrowser = function () {\n        if (!this.forceShowBrowser)\n            this.browser.hide();\n    };\n    StandardHostInterface.prototype.prompt = function () { };\n    StandardHostInterface.prototype.notify = function () { };\n    StandardHostInterface.prototype.provideBrowser = function (url) {\n        // TODO: Track these to make sure the provider has cleaned up when closed, or force close it...\n        this.browser = this.inAppBrowser.create(url, '_blank', { hidden: 'yes', hardwareback: 'no', zoom: 'no', location: 'yes' });\n        return this.browser;\n    };\n    StandardHostInterface.prototype.getParameter = function (key) {\n        if (!this.configuration.secureAvailable())\n            return;\n        return this.configuration.getSecure(this.budgetId + '-' + this.accountId + '-' + key);\n    };\n    return StandardHostInterface;\n}());\nStandardHostInterface = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof InAppBrowser !== \"undefined\" && InAppBrowser) === \"function\" && _a || Object, typeof (_b = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _b || Object])\n], StandardHostInterface);\nexport { StandardHostInterface };\nvar _a, _b;\n//# sourceMappingURL=standard-host-interface.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/bank/standard-host-interface.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nimport { BankAccountTransaction } from './provider-interface';\nimport { Logger } from '../services/logger';\nimport { BankTransaction } from '../data/records/bank-transaction';\nimport { MergeBankTransactions } from '../data/transactions/merge-bank-transactions';\nimport Big from 'big.js';\nimport { Utils } from '../services/utils';\nvar AccountTransactionProcessing = (function (_super) {\n    __extends(AccountTransactionProcessing, _super);\n    function AccountTransactionProcessing() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AccountTransactionProcessing;\n}(BankAccountTransaction));\nvar TransactionSync = (function () {\n    function TransactionSync() {\n        this.logger = Logger.get('TransactionSync');\n    }\n    TransactionSync.prototype.merge = function (engine, account, bankAccount, bankAccountTransactions) {\n        //TODO: The page for viewing them\n        //TODO: A \"clear\" button for the bank transactions\n        var _this = this;\n        var inTransactions = bankAccountTransactions;\n        for (var i = 0; i < inTransactions.length; i++)\n            inTransactions[i].originalIndex = i;\n        var sortMap = { 'authorised': 3, 'recent': 2, 'processed': 1 };\n        inTransactions.sort(function (a, b) {\n            return sortMap[a.status] - sortMap[b.status] || Number(a.transactionDate || '0') - Number(b.transactionDate || '0') || a.originalIndex - b.originalIndex;\n        });\n        var minDate = Math.min.apply(null, inTransactions.filter(function (t) { return t.transactionDate; }).map(function (t) { return Number(t.transactionDate); }));\n        var existingBankTransactions = engine.db.transactionProcessor.table(BankTransaction).find()\n            .filter(function (t) { return t.accountId === account.id && ((t.status === 'authorised' && t.date >= minDate) || t.status !== 'authorised'); })\n            .sort(function (a, b) {\n            return sortMap[a.status] - sortMap[b.status] || Number(a.date || '0') - Number(b.date || '0') || a.id - b.id;\n        });\n        inTransactions.forEach(function (t) {\n            // TODO: Any kind of description filtering !?\n            t.amountBig = new Big(t.amount);\n            if (t.balance)\n                t.balanceBig = new Big(t.balance);\n        });\n        var lastTransaction = null;\n        var daySequence = 0;\n        inTransactions.filter(function (t) { return t.status === 'processed'; }).forEach(function (t) {\n            if (!lastTransaction || lastTransaction.transactionDate !== t.transactionDate)\n                daySequence = 0;\n            t.balanceSequence = Number(t.transactionDate) * 10000 + daySequence;\n            t.balanceCheck = !lastTransaction || lastTransaction.balanceBig.plus(t.amountBig).eq(t.balanceBig);\n            if (!t.balanceCheck)\n                _this.logger.info(\"Balance sequence check failed\", lastTransaction, t);\n            daySequence++;\n            lastTransaction = t;\n        });\n        inTransactions.forEach(function (t) {\n            var index = _this.findFirstMatch(t, existingBankTransactions).index;\n            if (index >= 0) {\n                t.matched = true;\n                t.matchedAccountTransaction = existingBankTransactions.splice(index, 1)[0];\n            }\n        });\n        var unmatchedExistingRecords = existingBankTransactions.filter(function (t) { return t.status !== 'processed'; });\n        var minMatchedDate = Math.min.apply(null, inTransactions.filter(function (t) { return t.status === 'processed' && t.matched; }).map(function (t) { return Number(t.transactionDate); }));\n        if (minMatchedDate !== Infinity && minMatchedDate !== NaN && minMatchedDate > 0) {\n            unmatchedExistingRecords = unmatchedExistingRecords.concat(existingBankTransactions.filter(function (t) { return t.status === 'processed' && t.date > minMatchedDate; }));\n        }\n        // TODO: CHECK THE BALANCES AND SEQUENCES HAVEN'T CHANGED (OR USE THEM AS PART OF THE MATCHING PROCESS ??)\n        // TODO: Do another check of toAdd to unmatchedExistingRecords and check for same amount, but different date OR description ??? - Only do this if real world evidence suggests any discrepency which results in an add/remove rather than update\n        // Now we want unmatched to add, matched to update if to pending / authorised\n        var toUpgrade = inTransactions.filter(function (t) { return t.matched && t.status !== t.matchedAccountTransaction.status; });\n        var toAdd = inTransactions.filter(function (t) { return !t.matched; });\n        var toFlag = unmatchedExistingRecords.filter(function (t) { return !t.flagRemoved; }).map(function (t) { return { bankTransactionId: t.id, flag: 'removed', set: true }; })\n            .concat(inTransactions.filter(function (t) { return t.matched && t.matchedAccountTransaction.flagRemoved; }).map(function (t) { return { bankTransactionId: t.matchedAccountTransaction.id, flag: 'removed', set: undefined }; }));\n        var mergeBankTransactions = new MergeBankTransactions();\n        mergeBankTransactions.accountId = account.id;\n        if (toUpgrade)\n            mergeBankTransactions.inserts = toAdd.map(function (t) { return { date: t.transactionDate || Utils.nowYYYYMMDD(), status: t.status, description: t.description, amount: t.amountBig, balance: t.balanceBig, balanceSequence: t.balanceSequence }; });\n        if (toAdd)\n            mergeBankTransactions.upgrades = toUpgrade.map(function (t) { return { bankTransactionId: t.matchedAccountTransaction.id, date: t.transactionDate, status: t.status, description: t.description, amount: t.amountBig, balance: t.balanceBig, balanceSequence: t.balanceSequence }; });\n        if (toFlag)\n            mergeBankTransactions.flags = toFlag;\n        if (account.x.bankBalance + '' !== bankAccount.accountBalance + '')\n            mergeBankTransactions.accountBalance = new Big(bankAccount.accountBalance);\n        if (account.x.bankAvailableBalance + '' !== bankAccount.accountAvailableBalance + '')\n            mergeBankTransactions.accountAvailableBalance = new Big(bankAccount.accountAvailableBalance);\n        if (toUpgrade || toAdd || toFlag || mergeBankTransactions.accountBalance || mergeBankTransactions.accountAvailableBalance)\n            mergeBankTransactions.generateChecksum(engine.db.transactionProcessor);\n        mergeBankTransactions.timestamp = new Date().toISOString();\n        engine.db.applyTransaction(mergeBankTransactions);\n    };\n    TransactionSync.prototype.findFirstMatch = function (inTransaction, accountTransactions, fromIndex) {\n        if (fromIndex === void 0) { fromIndex = 0; }\n        var i = -2;\n        accountTransactions = accountTransactions.slice(fromIndex);\n        if (inTransaction.status === 'processed') {\n            // Processed - match : Date, status, description & amount - full record, or a record upgrade (see comments inline)\n            i = accountTransactions.findIndex(function (t) {\n                return (t.status === 'processed' && t.amount.eq(inTransaction.amountBig) && t.date === inTransaction.transactionDate && t.description == inTransaction.description)\n                    || (t.status === 'recent' && t.amount.eq(inTransaction.amountBig)) // Not sure on description ? // Date >= ?, or within tolerance ?\n                    || (t.status === 'authorised' && t.amount.eq(inTransaction.amountBig) && t.date <= inTransaction.transactionDate);\n            } // Processed date >= authorised date\n            );\n        }\n        else if (inTransaction.status === 'authorised') {\n            // Authorised - match : Date, status = 'authorised', description & amount - full record\n            i = accountTransactions.findIndex(function (t) {\n                return t.status === 'authorised' && t.amount.eq(inTransaction.amountBig) && t.date === inTransaction.transactionDate && t.description == inTransaction.description;\n            });\n        }\n        else if (inTransaction.status === 'recent') {\n            // Recent - match : status = 'recent' | 'authorised', description & amount - full record\n            i = accountTransactions.findIndex(function (t) {\n                return (t.status === 'recent' && t.amount.eq(inTransaction.amountBig) && t.description == inTransaction.description)\n                    || (t.status === 'authorised' && t.amount.eq(inTransaction.amountBig));\n            });\n        }\n        else {\n            // error TODO\n        }\n        return { record: i >= 0 ? accountTransactions[i] : null, index: i >= 0 ? i + fromIndex : i };\n    };\n    return TransactionSync;\n}());\nTransactionSync = __decorate([\n    Injectable()\n], TransactionSync);\nexport { TransactionSync };\n//# sourceMappingURL=transaction-sync.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/bank/transaction-sync.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Injectable } from '@angular/core';\nimport { StandardHostInterface } from './standard-host-interface';\nimport { TransactionSync } from './transaction-sync';\nimport { BankProviderManager } from './bank-provider-manager';\nimport { Replication } from '../services/replication-service';\nvar BankSync = (function () {\n    function BankSync(standardHostInterface, transactionSync, bankProviderManager, replication) {\n        this.standardHostInterface = standardHostInterface;\n        this.transactionSync = transactionSync;\n        this.bankProviderManager = bankProviderManager;\n        this.replication = replication;\n    }\n    BankSync.prototype.sync = function (providerName, account, engine) {\n        return __awaiter(this, void 0, void 0, function () {\n            var provider, bankAccounts, bankAccount, transactions;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // TODO: Want to handle errors from this gracefully - Unable to sync budget prior to bank account linking... (maybe a force to do it anyway?)\n                    return [4 /*yield*/, this.replication.sync()];\n                    case 1:\n                        // TODO: Want to handle errors from this gracefully - Unable to sync budget prior to bank account linking... (maybe a force to do it anyway?)\n                        _a.sent();\n                        provider = this.bankProviderManager.newProvider(providerName);\n                        this.standardHostInterface.accountId = account.id;\n                        this.standardHostInterface.budgetId = engine.db.id;\n                        return [4 /*yield*/, provider.connect(this.standardHostInterface)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, provider.getAccounts()];\n                    case 3:\n                        bankAccounts = _a.sent();\n                        bankAccount = bankAccounts.find(function (b) { return account.x.accountNumber == b.accountNumber; });\n                        return [4 /*yield*/, provider.getTransactions(bankAccount)];\n                    case 4:\n                        transactions = _a.sent();\n                        this.transactionSync.merge(engine, account, bankAccount, transactions);\n                        return [4 /*yield*/, provider.close()];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return BankSync;\n}());\nBankSync = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof StandardHostInterface !== \"undefined\" && StandardHostInterface) === \"function\" && _a || Object, typeof (_b = typeof TransactionSync !== \"undefined\" && TransactionSync) === \"function\" && _b || Object, typeof (_c = typeof BankProviderManager !== \"undefined\" && BankProviderManager) === \"function\" && _c || Object, typeof (_d = typeof Replication !== \"undefined\" && Replication) === \"function\" && _d || Object])\n], BankSync);\nexport { BankSync };\nvar _a, _b, _c, _d;\n//# sourceMappingURL=bank-sync.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/bank/bank-sync.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController, ModalController } from 'ionic-angular';\nimport { Dbms } from '../../db/dbms';\nimport { Configuration } from '../../services/configuration-service';\nimport { Component } from '@angular/core';\nimport { BankTransaction } from \"../../data/records/bank-transaction\";\nimport { Transaction } from \"../../data/records/transaction\";\nimport { EngineFactory } from \"../../engine/engine-factory\";\nimport Big from 'big.js';\nimport { CreateTransactionReconciliation } from \"../../data/transactions/create-transaction-reconciliation\";\nimport { AddEditSplitTransactionModal } from \"../add-edit-split-transaction/add-edit-split-transaction\";\nvar ViewBankTransactionModal = (function () {\n    function ViewBankTransactionModal(configuration, engineFactory, viewCtrl, navParams, dbms, nav, alertController, modalController) {\n        var _this = this;\n        this.configuration = configuration;\n        this.engineFactory = engineFactory;\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.dbms = dbms;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.modalController = modalController;\n        this.viewCtrl = viewCtrl;\n        this.nav = nav;\n        this.budget = dbms.getDb(navParams.data.budgetId);\n        this.engine = engineFactory.getEngine(this.budget);\n        this.t = this.budget.transactionProcessor.table(BankTransaction).by('id', navParams.data.bankTransactionId);\n        this.initialSelectedTransactions = new Map();\n        if (this.t.x.reconciliationRecords) {\n            this.t.x.reconciliationRecords.forEach(function (transactionReconciliation) {\n                var transaction = _this.budget.transactionProcessor.table(Transaction).by('id', transactionReconciliation.transactionId);\n                _this.initialSelectedTransactions.set(transaction, transactionReconciliation);\n            });\n        }\n        this.selectedTransactions = new Map(this.initialSelectedTransactions);\n    }\n    ViewBankTransactionModal.prototype.unreconciliedAndThisReconciledTransactions = function () {\n        var _this = this;\n        var view = this.engine.getTransactionsUnreconciledView();\n        if (view.sortDirty || view.resultsdirty || this.forceRefresh || !this.transactionsUnreconciledCached) {\n            this.forceRefresh = false;\n            this.transactionsUnreconciledCached = view.data();\n            // TODO: Sorting based on match probability\n            // TODO: Group. ie. transactions on this account, transactions with no account, transactions on another account...\n            this.initialSelectedTransactions.forEach(function (r1, t1) {\n                var existing = _this.transactionsUnreconciledCached.indexOf(t1);\n                if (existing >= 0)\n                    _this.transactionsUnreconciledCached.splice(existing, 1);\n                _this.transactionsUnreconciledCached.unshift(t1);\n            });\n            this.selectedTransactions.forEach(function (r1, t1) {\n                var existing = _this.transactionsUnreconciledCached.indexOf(t1);\n                if (existing < 0)\n                    _this.transactionsUnreconciledCached.unshift(t1);\n            });\n        }\n        return this.transactionsUnreconciledCached;\n    };\n    ViewBankTransactionModal.prototype.toggleSelected = function (transaction) {\n        var _this = this;\n        if (this.selectedTransactions.has(transaction)) {\n            // TODO: Message if the transaction will be restored to it's initial amount and/or account - only for already saved reconciliations - not for new ones (you'd assume it would be)\n            // TODO: This needs to be implemented in the dbTransaction so when the \"undo\" or \"update\" event happens then it correctly restores the initial transaction\n            this.selectedTransactions.delete(transaction);\n        }\n        else {\n            if (transaction.accountId != null && transaction.accountId != this.t.accountId) {\n                this.alertController.create({ message: \"The selected transaction is logged under a different account (TODO: Account name) in the budget. By reconciling against this bank account it will be changed to be logged under (TODO: This account name).\" }).present();\n            }\n            if (!this.reconcileAmount(transaction).times(-1).eq(this.reconciledRemaining())) {\n                this.alertController.create({\n                    message: \"I've updated the budget amount from (TODO: Amount) to (TODO: New Amount) to match the bank transaction.\",\n                    buttons: [\n                        {\n                            text: 'Undo',\n                            role: 'cancel',\n                            handler: function (data) {\n                                _this.selectedTransactions.set(transaction, { amount: _this.reconcileAmount(transaction) });\n                            }\n                        },\n                        {\n                            text: 'OK',\n                            handler: function (data) {\n                                // TODO: If the amount is subsequently edited, then this needs to be addresses again\n                                _this.selectedTransactions.set(transaction, { amount: _this.reconciledRemaining().times(-1), transactionAmountOverride: true });\n                            }\n                        }\n                    ]\n                }).present();\n            }\n            else {\n                this.selectedTransactions.set(transaction, { amount: this.reconcileAmount(transaction) });\n            }\n        }\n    };\n    ViewBankTransactionModal.prototype.isSelected = function (transaction) {\n        return this.selectedTransactions.has(transaction);\n    };\n    ViewBankTransactionModal.prototype.reconcileAmount = function (transaction) {\n        if (this.selectedTransactions.has(transaction)) {\n            // TODO: The case where an item is partially reconciled and there is some remaining, but it is selected\n            // TODO: The case where it is initially reconciled, but for a DIFFERENT amount than to here.\n            // Think about these cases, may need to display an extra field (or maybe, multiple?, transaction total, transaction left to reconcile, this reconciled (if different to total / remaining), eg. partial/split ) <= this last one will have a bit of logic to work out, as we need to add/remove this \n            // This is wrong, we want the remaining amount AND what we have already reconciled it for...\n            return this.selectedTransactions.get(transaction).amount;\n        }\n        if (transaction.x.reconciliationRecords) {\n            // TODO: Filter and remove \"this\" from the calc\n            return transaction.x.reconciliationRecords.reduce(function (amt, t) { return amt.minus(t.amount); }, transaction.amount);\n        }\n        else {\n            return transaction.amount;\n        }\n    };\n    ViewBankTransactionModal.prototype.reconciledTotal = function () {\n        return Array.from(this.selectedTransactions.values()).reduce(function (tot, o) { return tot.plus(o.amount); }, new Big('0'));\n    };\n    ViewBankTransactionModal.prototype.reconciledRemaining = function () {\n        return this.t.amount.minus(this.reconciledTotal());\n    };\n    ViewBankTransactionModal.prototype.save = function () {\n        var _this = this;\n        this.selectedTransactions.forEach(function (reconcilation, transaction) {\n            if (!_this.initialSelectedTransactions.has(transaction) || !_this.initialSelectedTransactions.get(transaction).amount.eq(reconcilation.amount)) {\n                var createTransactionReconciliation = new CreateTransactionReconciliation();\n                createTransactionReconciliation.amount = reconcilation.amount;\n                createTransactionReconciliation.transactionId = transaction.id;\n                createTransactionReconciliation.bankTransactionId = _this.t.id;\n                if (reconcilation.transactionAmountOverride)\n                    createTransactionReconciliation.transactionAmountOverride = true;\n                _this.budget.applyTransaction(createTransactionReconciliation);\n            }\n            else {\n                // TODO: Update as needed (and only if needed)\n            }\n        });\n        this.initialSelectedTransactions.forEach(function (reconcilation, transaction) {\n            if (!_this.selectedTransactions.has(transaction) || !_this.selectedTransactions.get(transaction).amount.eq(reconcilation.amount)) {\n                _this.budget.deleteTransaction(_this.budget.transactionProcessor.findTransactionsForRecord(reconcilation, CreateTransactionReconciliation)[0]);\n            }\n        });\n    };\n    ViewBankTransactionModal.prototype.close = function () {\n        this.save();\n        this.viewCtrl.dismiss();\n    };\n    ViewBankTransactionModal.prototype.createTransaction = function () {\n        var _this = this;\n        var modal = this.modalController.create(AddEditSplitTransactionModal, { budgetId: this.budget.id, accountId: this.t.accountId, amount: this.reconciledRemaining().times(-1), description: this.t.description, date: this.t.date });\n        modal.onDidDismiss(function (data) {\n            if (data && data.transactions) {\n                data.transactions.forEach(function (transaction) {\n                    _this.selectedTransactions.set(transaction, { amount: transaction.amount });\n                    _this.forceRefresh = true;\n                });\n            }\n        });\n        modal.present();\n    };\n    ViewBankTransactionModal.prototype.deleteBankTransactionConfirm = function () {\n        var _this = this;\n        var confirm = this.alertController.create({\n            title: 'Delete?',\n            message: 'Are you sure you want to delete this transaction? (TODO: functionality, notice: This will \"flag\" it as deleted)',\n            buttons: [\n                {\n                    text: 'Cancel'\n                }, {\n                    text: 'Delete',\n                    role: 'destructive',\n                    handler: function () {\n                        confirm.dismiss().then(function () {\n                            _this.viewCtrl.dismiss();\n                        });\n                        return false;\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    };\n    return ViewBankTransactionModal;\n}());\nViewBankTransactionModal = __decorate([\n    Component({\n        templateUrl: 'view-bank-transaction.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _a || Object, typeof (_b = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _b || Object, typeof (_c = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _e || Object, typeof (_f = typeof NavController !== \"undefined\" && NavController) === \"function\" && _f || Object, typeof (_g = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _g || Object, typeof (_h = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _h || Object])\n], ViewBankTransactionModal);\nexport { ViewBankTransactionModal };\nvar _a, _b, _c, _d, _e, _f, _g, _h;\n//# sourceMappingURL=view-bank-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/view-bank-transaction/view-bank-transaction.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { NavController, NavParams, ModalController } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { Dbms } from '../../db/dbms';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { Account } from '../../data/records/account';\nimport { BankSync } from '../../bank/bank-sync';\nimport { Notifications } from '../../services/notifications';\nimport { Logger } from '../../services/logger';\nimport { StandardHostInterface } from '../../bank/standard-host-interface';\nimport { BankTransaction } from '../../data/records/bank-transaction';\nimport { ViewBankTransactionModal } from \"../../modals/view-bank-transaction/view-bank-transaction\";\nvar BankPage = (function () {\n    function BankPage(nav, dbms, navParams, engineFactory, modalController, bankSync, notifications, standardHostInterface) {\n        this.nav = nav;\n        this.dbms = dbms;\n        this.navParams = navParams;\n        this.engineFactory = engineFactory;\n        this.modalController = modalController;\n        this.bankSync = bankSync;\n        this.notifications = notifications;\n        this.standardHostInterface = standardHostInterface;\n        this.logger = Logger.get('BankPage');\n        this.engine = this.engineFactory.getEngineById(navParams.data.budgetId);\n        this.account = this.engine.getRecordById(Account, navParams.data.accountId);\n        this.bankTransactionTable = this.engine.db.transactionProcessor.table(BankTransaction);\n        this.transactionView = { data: function () { return []; } };\n    }\n    BankPage.prototype.syncBank = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.syncing = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, this.bankSync.sync(this.account.x.bankProviderName, this.account, this.engine)];\n                    case 2:\n                        _a.sent();\n                        this.notifications.notify(\"Syncing Done\");\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_1 = _a.sent();\n                        this.logger.info(\"Bank Sync Error\", error_1);\n                        this.notifications.notify(\"Error syncing: \" + error_1);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.syncing = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BankPage.prototype.showSyncWindow = function () {\n        this.standardHostInterface.manualShowBrowser();\n    };\n    BankPage.prototype.ionViewWillEnter = function () {\n        this.transactionView = this.bankTransactionTable.addDynamicView('accountBankTransactions_' + this.account.id)\n            .applyFind({ 'accountId': this.account.id })\n            .applySortCriteria([['date', true], ['id', false]]);\n        this.logger.debug('WIll Enter Dynamic Views ' + this.bankTransactionTable.DynamicViews.length);\n        /*if (this.transactions.data().length <= this.transactionDisplayLimit) {\n          this.transactionDisplayLimit = 0;\n          this.infiniteScroll.enable(false);\n        }*/\n    };\n    BankPage.prototype.ionViewDidLeave = function () {\n        this.bankTransactionTable.removeDynamicView(this.transactionView.name);\n        this.logger.debug('Did Leave Dynamic Views ' + this.bankTransactionTable.DynamicViews.length);\n        this.transactionView = { data: function () { return []; } };\n    };\n    BankPage.prototype.openTransaction = function (t) {\n        var modal = this.modalController.create(ViewBankTransactionModal, { budgetId: this.navParams.data.budgetId, bankTransactionId: t.id });\n        modal.present();\n    };\n    return BankPage;\n}());\nBankPage = __decorate([\n    Component({\n        templateUrl: 'bank.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _d || Object, typeof (_e = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _e || Object, typeof (_f = typeof BankSync !== \"undefined\" && BankSync) === \"function\" && _f || Object, typeof (_g = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _g || Object, typeof (_h = typeof StandardHostInterface !== \"undefined\" && StandardHostInterface) === \"function\" && _h || Object])\n], BankPage);\nexport { BankPage };\nvar _a, _b, _c, _d, _e, _f, _g, _h;\n//# sourceMappingURL=bank.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/bank/bank.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, NavParams, ModalController } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { Dbms } from '../../db/dbms';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { Account } from '../../data/records/account';\nimport { AddEditAccountModal } from '../../modals/add-edit-account/add-edit-account';\nimport { BankSync } from '../../bank/bank-sync';\nimport { Notifications } from '../../services/notifications';\nimport { Logger } from '../../services/logger';\nimport { StandardHostInterface } from '../../bank/standard-host-interface';\nimport { BankPage } from '../bank/bank';\nvar AccountPage = (function () {\n    function AccountPage(nav, dbms, navParams, engineFactory, modalController, bankSync, notifications, standardHostInterface) {\n        this.nav = nav;\n        this.dbms = dbms;\n        this.navParams = navParams;\n        this.engineFactory = engineFactory;\n        this.modalController = modalController;\n        this.bankSync = bankSync;\n        this.notifications = notifications;\n        this.standardHostInterface = standardHostInterface;\n        this.logger = Logger.get('AccountPage');\n        this.engine = this.engineFactory.getEngineById(navParams.data.budgetId);\n        this.account = this.engine.getRecordById(Account, navParams.data.accountId);\n    }\n    AccountPage.prototype.editAccount = function () {\n        var modal = this.modalController.create(AddEditAccountModal, { budgetId: this.engine.db.id, accountId: this.account.id });\n        modal.present();\n    };\n    AccountPage.prototype.gotoBank = function () {\n        this.nav.push(BankPage, { budgetId: this.navParams.data.budgetId, accountId: this.navParams.data.accountId });\n    };\n    return AccountPage;\n}());\nAccountPage = __decorate([\n    Component({\n        templateUrl: 'account.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _d || Object, typeof (_e = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _e || Object, typeof (_f = typeof BankSync !== \"undefined\" && BankSync) === \"function\" && _f || Object, typeof (_g = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _g || Object, typeof (_h = typeof StandardHostInterface !== \"undefined\" && StandardHostInterface) === \"function\" && _h || Object])\n], AccountPage);\nexport { AccountPage };\nvar _a, _b, _c, _d, _e, _f, _g, _h;\n//# sourceMappingURL=account.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/account.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, NavParams, AlertController, ModalController } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { Dbms } from '../../db/dbms';\nimport { Configuration } from '../../services/configuration-service';\nimport { Replication } from '../../services/replication-service';\nimport { Logger } from '../../services/logger';\nimport { Budget } from '../../data/records/budget';\nimport { HomePage } from '../home/home';\nimport { ShareBudgetModal } from '../../modals/share-budget/share-budget';\nimport { InitBudgetTransaction } from '../../data/transactions/init-budget-transaction';\nimport { Http } from '@angular/http';\nimport { AccountPage } from '../../pages/account/account';\nimport { AddEditAccountModal } from '../../modals/add-edit-account/add-edit-account';\nvar BudgetSettingsPage = (function () {\n    function BudgetSettingsPage(nav, navParams, configuration, replication, http, dbms, alertController, engineFactory, modalController) {\n        this.nav = nav;\n        this.navParams = navParams;\n        this.configuration = configuration;\n        this.replication = replication;\n        this.http = http;\n        this.dbms = dbms;\n        this.alertController = alertController;\n        this.engineFactory = engineFactory;\n        this.modalController = modalController;\n        this.logger = Logger.get('BudgetSettingsPage');\n        this.nav = nav;\n        this.db = this.dbms.getDb(navParams.data.budgetId);\n        this.engine = this.engineFactory.getEngine(this.db);\n        var budgetRecord = this.db.transactionProcessor.single(Budget);\n        this.initBudgetTransaction = this.db.transactionProcessor.findTransactionsForRecord(budgetRecord, InitBudgetTransaction)[0];\n        this.data = {};\n        this.data.budgetName = this.db.name();\n    }\n    BudgetSettingsPage.prototype.addAccount = function () {\n        var _this = this;\n        var modal = this.modalController.create(AddEditAccountModal, { budgetId: this.db.id });\n        modal.onDidDismiss(function (data) {\n            if (data && data.accountId) {\n                _this.nav.push(AccountPage, { accountId: data.accountId, budgetId: _this.db.id });\n            }\n        });\n        modal.present();\n    };\n    BudgetSettingsPage.prototype.openAccount = function (account) {\n        this.nav.push(AccountPage, { accountId: account.id, budgetId: this.db.id });\n    };\n    BudgetSettingsPage.prototype.updateBudgetName = function () {\n        var _this = this;\n        if (this.data.budgetName == \"\") {\n            this.data.budgetName = this.initBudgetTransaction.budgetName;\n            return;\n        }\n        if (this.initBudgetTransaction.budgetName !== this.data.budgetName) {\n            this.initBudgetTransaction.budgetName = this.data.budgetName;\n            this.db.applyTransaction(this.initBudgetTransaction);\n            if (this.replication.enabled(this.db)) {\n                // TODO: really need to refactor this out...\n                this.budgetNameUpdating = true;\n                ShareBudgetModal.postShare(this.http, this.db.id, this.db.name(), this.configuration.deviceInstallationId, this.configuration.deviceName)\n                    .map(function (response) { return response.json(); })\n                    .subscribe(function (response) {\n                    _this.logger.info(\"Updated shared budget name to \" + _this.db.name());\n                }, function (error) {\n                    _this.logger.error(\"Error updating shared budget name to \" + _this.db.name(), error);\n                }, function () {\n                    _this.budgetNameUpdating = false;\n                });\n            }\n        }\n    };\n    BudgetSettingsPage.prototype.deleteBudgetConfirm = function () {\n        var _this = this;\n        var confirm = this.alertController.create({\n            title: 'Delete?',\n            message: 'Are you sure you want to delete this budget (' + this.db.name() + ')?',\n            buttons: [\n                {\n                    text: 'Cancel'\n                }, {\n                    text: 'Delete',\n                    role: 'destructive',\n                    handler: function () {\n                        confirm.dismiss().then(function () {\n                            _this.doDeleteBudget();\n                        });\n                        return false;\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    };\n    BudgetSettingsPage.prototype.doDeleteBudget = function () {\n        this.db.deactivate();\n        this.dbms.deleteDb(this.db.id);\n        this.configuration.lastOpenedBudget(null);\n        this.nav.setRoot(HomePage);\n    };\n    return BudgetSettingsPage;\n}());\nBudgetSettingsPage = __decorate([\n    Component({\n        templateUrl: 'budget-settings.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _c || Object, typeof (_d = typeof Replication !== \"undefined\" && Replication) === \"function\" && _d || Object, typeof (_e = typeof Http !== \"undefined\" && Http) === \"function\" && _e || Object, typeof (_f = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _f || Object, typeof (_g = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _g || Object, typeof (_h = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _h || Object, typeof (_j = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _j || Object])\n], BudgetSettingsPage);\nexport { BudgetSettingsPage };\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j;\n//# sourceMappingURL=budget-settings.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/budget-settings/budget-settings.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable, ApplicationRef } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Notifications } from './notifications';\nimport { Configuration } from './configuration-service';\nimport { AppReady } from '../app/app-ready';\nimport { BuildInfo } from '../app/build-info';\nimport { Logger } from './logger';\nimport { Utils } from \"./utils\";\nvar UpdateCheck = (function () {\n    function UpdateCheck(appReady, notifications, configuration, applicationRef, http) {\n        var _this = this;\n        this.notifications = notifications;\n        this.configuration = configuration;\n        this.applicationRef = applicationRef;\n        this.http = http;\n        this.logger = Logger.get('notifications');\n        this.serviceWorkerUnregistered = false;\n        if (Utils.getQueryStringValue('demo'))\n            return; // Skip this for demos\n        appReady.ready.then(function () {\n            setTimeout(function () {\n                if (!_this.checkAndNotifyServiceWorkerUpdate()) {\n                    window.addEventListener('serviceworkerupdateavailable', function (ev) {\n                        _this.checkAndNotifyServiceWorkerUpdate();\n                        applicationRef.tick();\n                    });\n                    _this.triggerServiceWorkerUpdateCheck();\n                    setInterval(function () { return _this.triggerServiceWorkerUpdateCheck(); }, 1000 * 60 * 60 /*1 Hour*/);\n                }\n                _this.initWebUpdateAutoCheck();\n            }, 5000);\n            _this.serviceWorkerVersion = window.activeServiceWorkerVersion;\n            _this.checkServiceWorkerVersionMismatch();\n            window.addEventListener('activeserviceworkerversionreported', function (ev) {\n                _this.serviceWorkerVersion = window.activeServiceWorkerVersion;\n                _this.checkServiceWorkerVersionMismatch();\n                applicationRef.tick();\n            });\n            _this.checkAndNotifyServiceWorkerUpdate();\n            window.addEventListener('updatedserviceworkerversionreported', function (ev) {\n                _this.checkAndNotifyServiceWorkerUpdate();\n                applicationRef.tick();\n            });\n            window.addEventListener('serviceworkerinstalled', function (ev) {\n                var message = \"Offline support has been installed. You can now use the app offline.\";\n                _this.logger.info(message);\n                _this.notifications.notify(message, true);\n                applicationRef.tick();\n            });\n            _this.triggerServiceWorkerUpdateCheck();\n        });\n    }\n    UpdateCheck.prototype.checkServiceWorkerVersionMismatch = function () {\n        if (this.serviceWorkerVersion && this.serviceWorkerVersion !== BuildInfo.version) {\n            this.logger.info(\"Service worker version (\" + this.serviceWorkerVersion + \") <-> app version (\" + BuildInfo.version + \") mismatach. Unregistering service worker.\");\n            this.unregisterServiceWorker();\n        }\n    };\n    UpdateCheck.prototype.isServiceWorkerAvailable = function () {\n        return !this.serviceWorkerUnregistered && window.serviceWorkerUpdateCheckFunction;\n    };\n    UpdateCheck.prototype.triggerServiceWorkerUpdateCheck = function () {\n        if (this.serviceWorkerUpdateAvailable)\n            return;\n        if (window.serviceWorkerUpdateCheckFunction) {\n            window.serviceWorkerUpdateCheckFunction();\n        }\n    };\n    UpdateCheck.prototype.checkAndNotifyServiceWorkerUpdate = function () {\n        if (this.serviceWorkerUpdateNotified)\n            return true;\n        if (window.serviceWorkerUpdateAvailable) {\n            this.serviceWorkerUpdateAvailable = true;\n        }\n        if (window.updatedServiceWorkerVersion) {\n            this.updatedServiceWorkerVersion = window.updatedServiceWorkerVersion;\n            var message = \"An update has been downloaded (\" + this.updatedServiceWorkerVersion + \") and will be installed next time the app is opened.\";\n            this.logger.info(message);\n            this.notifications.notify(message, true);\n            this.serviceWorkerUpdateNotified = true;\n            return true;\n        }\n        return false;\n    };\n    UpdateCheck.prototype.unregisterServiceWorker = function () {\n        var _this = this;\n        if (window.serviceWorkerUnregisterFunction) {\n            return (window.serviceWorkerUnregisterFunction()).then(function (result) {\n                if (result) {\n                    var message = \"Offline support has been removed. It will be re-enabled after the app has been restarted.\";\n                    _this.serviceWorkerUnregistered = true;\n                    _this.logger.info(message);\n                    _this.notifications.notify(message, true);\n                }\n                return result;\n            });\n        }\n        return Promise.resolve(false);\n    };\n    UpdateCheck.prototype.initWebUpdateAutoCheck = function () {\n        var _this = this;\n        setTimeout(function () {\n            if (_this.webUpdateAvailable)\n                return;\n            _this.runWebUpdateCheck();\n            _this.initWebUpdateAutoCheck();\n        }, 1000 * 60 * 60 /*1 Hour*/);\n        this.runWebUpdateCheck();\n    };\n    UpdateCheck.prototype.runWebUpdateCheck = function () {\n        var _this = this;\n        var observable = this.http.get('https://ebudget.live/info.json');\n        observable.map(function (res) { return res.json(); })\n            .subscribe(function (response) {\n            try {\n                if (BuildInfo.version !== response.version) {\n                    _this.webVersion = response.version;\n                    _this.webUpdateAvailable = true;\n                    _this.logger.info(\"Web update is available. Version: \" + _this.webVersion);\n                    if (!_this.isServiceWorkerAvailable() && !_this.configuration.native) {\n                        var message = \"An update is available (\" + _this.webVersion + \"). Refresh to update.\";\n                        _this.logger.info(message);\n                        _this.notifications.notify(message, true);\n                    }\n                }\n            }\n            catch (err) {\n                _this.logger.info(\"Error in response data from web update check\", response, err);\n            }\n        }, function (error) {\n            _this.logger.info(\"Error during web update check\", error);\n        });\n        return observable;\n    };\n    return UpdateCheck;\n}());\nUpdateCheck = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof AppReady !== \"undefined\" && AppReady) === \"function\" && _a || Object, typeof (_b = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _b || Object, typeof (_c = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _c || Object, typeof (_d = typeof ApplicationRef !== \"undefined\" && ApplicationRef) === \"function\" && _d || Object, typeof (_e = typeof Http !== \"undefined\" && Http) === \"function\" && _e || Object])\n], UpdateCheck);\nexport { UpdateCheck };\nvar _a, _b, _c, _d, _e;\n//# sourceMappingURL=update-check.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/update-check.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, AlertController } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { Configuration } from '../../services/configuration-service';\nimport { UpdateCheck } from '../../services/update-check';\nimport { BuildInfo } from '../../app/build-info';\nvar AboutPage = (function () {\n    function AboutPage(nav, configuration, updateCheck, alertController) {\n        this.nav = nav;\n        this.configuration = configuration;\n        this.updateCheck = updateCheck;\n        this.alertController = alertController;\n        this.buildInfo = BuildInfo;\n        this.nav = nav;\n        this.projectMenuEnabled = true;\n    }\n    AboutPage.prototype.serviceWorkerUpdateCheck = function () {\n        var _this = this;\n        this.updateCheckDisabled = true;\n        this.updateCheck.triggerServiceWorkerUpdateCheck();\n        setTimeout(function () { _this.updateCheckDisabled = false; }, 5000);\n    };\n    AboutPage.prototype.webCheckUpdate = function () {\n        var _this = this;\n        this.updateCheckDisabled = true;\n        this.updateCheck.runWebUpdateCheck().subscribe(function (response) {\n            _this.updateCheckDisabled = false;\n        }, function (error) {\n            _this.updateCheckDisabled = false;\n        });\n    };\n    AboutPage.prototype.isWkWebView = function () {\n        if (navigator.platform.substr(0, 2) === 'iP') {\n            //iOS (iPhone, iPod or iPad)\n            var lte9 = /constructor/i.test(window.HTMLElement);\n            var nav = window.navigator, ua = nav.userAgent, idb = !!window.indexedDB;\n            if (ua.indexOf('Safari') !== -1 && ua.indexOf('Version') !== -1 && !nav.standalone) {\n                //Safari (WKWebView/Nitro since 6+)\n            }\n            else if ((!idb && lte9) || !window.statusbar.visible) {\n                //UIWebView\n            }\n            else if ((window.webkit && window.webkit.messageHandlers) || !lte9 || idb) {\n                return true;\n            }\n        }\n        return false;\n    };\n    AboutPage.prototype.unregisterServiceWorker = function () {\n        var _this = this;\n        this.alertController.create({\n            buttons: [{ text: 'Ok', handler: function () { _this.updateCheck.unregisterServiceWorker(); } }, { text: 'Cancel', role: 'cancel' }],\n            message: 'Unregistering the service worker will disable offline support. A new service worker will be installed after the app has been restarted.',\n            title: 'Are you sure?'\n        }).present();\n    };\n    return AboutPage;\n}());\nAboutPage = __decorate([\n    Component({\n        templateUrl: 'about.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _b || Object, typeof (_c = typeof UpdateCheck !== \"undefined\" && UpdateCheck) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object])\n], AboutPage);\nexport { AboutPage };\nvar _a, _b, _c, _d;\n//# sourceMappingURL=about.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { Configuration } from '../../services/configuration-service';\nvar SettingsPage = (function () {\n    function SettingsPage(nav, configuration) {\n        this.nav = nav;\n        this.configuration = configuration;\n    }\n    return SettingsPage;\n}());\nSettingsPage = __decorate([\n    Component({\n        templateUrl: 'settings.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _b || Object])\n], SettingsPage);\nexport { SettingsPage };\nvar _a, _b;\n//# sourceMappingURL=settings.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { Notifications } from '../../services/notifications';\nvar NotificationsPage = (function () {\n    function NotificationsPage(notifications) {\n        this.notifications = notifications;\n    }\n    NotificationsPage.prototype.ionViewDidEnter = function () {\n        var _this = this;\n        this.markReadTimeout = setTimeout(function () {\n            _this.notifications.markRead();\n            _this.markReadTimeout = 0;\n        }, 3000);\n    };\n    NotificationsPage.prototype.ionViewDidLeave = function () {\n        if (this.markReadTimeout)\n            clearTimeout(this.markReadTimeout);\n    };\n    return NotificationsPage;\n}());\nNotificationsPage = __decorate([\n    Component({\n        templateUrl: 'notifications.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _a || Object])\n], NotificationsPage);\nexport { NotificationsPage };\nvar _a;\n//# sourceMappingURL=notifications.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { ModalController, Menu, Nav, App, AlertController, ToastController } from 'ionic-angular';\nimport { Component, Input, ApplicationRef } from '@angular/core';\nimport { Dbms } from '../../db/dbms';\nimport { BudgetSettingsPage } from '../../pages/budget-settings/budget-settings';\nimport { Configuration } from '../../services/configuration-service';\nimport { Replication } from '../../services/replication-service';\nimport { Notifications } from '../../services/notifications';\nimport { BudgetPage } from '../../pages/budget/budget';\nimport { HomePage } from '../../pages/home/home';\nimport { InitBudgetTransaction } from '../../data/transactions/init-budget-transaction';\nimport { AddBudgetModal } from '../../modals/add-budget/add-budget';\nimport { DevPage } from '../../pages/dev/dev';\nimport { SettingsPage } from '../../pages/settings/settings';\nimport { AboutPage } from '../../pages/about/about';\nimport { NotificationsPage } from '../../pages/notifications/notifications';\nimport { ShareBudgetModal } from '../../modals/share-budget/share-budget';\nvar MainMenuContent = (function () {\n    function MainMenuContent(dbms, app, configuration, replication, modalController, alertController, toastCtrl, notifications, applicationRef) {\n        this.dbms = dbms;\n        this.app = app;\n        this.configuration = configuration;\n        this.replication = replication;\n        this.modalController = modalController;\n        this.alertController = alertController;\n        this.toastCtrl = toastCtrl;\n        this.notifications = notifications;\n        this.applicationRef = applicationRef;\n        this.window = window;\n        this.dbms = dbms;\n        this.budgets = dbms.dbs;\n        this.app = app;\n    }\n    MainMenuContent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.menu.ionOpen.subscribe(function () {\n            _this.markReadTimeout = setTimeout(function () {\n                _this.notifications.markRead(3);\n                _this.markReadTimeout = 0;\n                _this.applicationRef.tick();\n            }, 3000);\n        });\n        this.menu.ionClose.subscribe(function () {\n            if (_this.markReadTimeout)\n                clearTimeout(_this.markReadTimeout);\n        });\n    };\n    MainMenuContent.prototype.isBudgetPageOpen = function () {\n        return this.nav.getActive().component === BudgetPage;\n    };\n    MainMenuContent.prototype.budgetName = function (budget) {\n        return budget.name() || 'New Budget (' + budget.id + ')';\n    };\n    MainMenuContent.prototype.openBudget = function (budget) {\n        this.nav.setRoot(BudgetPage, { 'budget': budget });\n    };\n    MainMenuContent.prototype.lastOpenedBudget = function () {\n        var budgetId = this.configuration.lastOpenedBudget();\n        if (!budgetId)\n            return;\n        var budget = this.dbms.getDb(budgetId);\n        return budget;\n    };\n    MainMenuContent.prototype.goHome = function () {\n        this.nav.setRoot(HomePage);\n    };\n    MainMenuContent.prototype.goDev = function () {\n        this.nav.setRoot(DevPage);\n    };\n    MainMenuContent.prototype.goSettings = function () {\n        this.nav.setRoot(SettingsPage);\n    };\n    MainMenuContent.prototype.goBudgetSettings = function () {\n        this.nav.setRoot(BudgetSettingsPage, { budgetId: this.lastOpenedBudget().id });\n    };\n    MainMenuContent.prototype.goAbout = function () {\n        this.nav.setRoot(AboutPage);\n    };\n    MainMenuContent.prototype.addBudget = function () {\n        var _this = this;\n        var modal = this.modalController.create(AddBudgetModal);\n        // TODO: Refactor with HomePage. Move to AddBudgetModal...\n        modal.onDidDismiss(function (data) {\n            if (data && data.budgetName !== '') {\n                _this.dbms.createDb().then(function (db) {\n                    db.activate().then(function () {\n                        var t = new InitBudgetTransaction();\n                        t.budgetName = data.budgetName;\n                        db.applyTransaction(t);\n                        db.deactivate();\n                        _this.nav.setRoot(BudgetPage, { 'budget': db });\n                    });\n                });\n            }\n        });\n        modal.present();\n    };\n    // -- //\n    MainMenuContent.prototype.shareBudget = function () {\n        var modal = this.modalController.create(ShareBudgetModal, { budgetId: this.lastOpenedBudget().id });\n        modal.present();\n    };\n    Object.defineProperty(MainMenuContent.prototype, \"shared\", {\n        get: function () {\n            return this.replication.enabled(this.lastOpenedBudget());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MainMenuContent.prototype.linkBudget = function () {\n        var _this = this;\n        var modal = this.modalController.create(ShareBudgetModal);\n        modal.onDidDismiss(function (data) {\n            if (data && data.newBudget) {\n                _this.nav.setRoot(BudgetPage, { 'budget': data.newBudget });\n            }\n        });\n        modal.present();\n    };\n    MainMenuContent.prototype.sync = function (event) {\n        var _this = this;\n        this.syncing = true;\n        setTimeout(function () {\n            return _this.replication.sync().then(function () { _this.syncing = false; _this.toastCtrl.create({ message: 'Budget is up to date', duration: 3000 }).present(); }, function () { _this.syncing = false; });\n        }, 1000);\n    };\n    // -- //\n    MainMenuContent.prototype.clearNotifications = function () {\n        this.notifications.clear(3);\n    };\n    MainMenuContent.prototype.goNotifications = function () {\n        this.nav.setRoot(NotificationsPage);\n    };\n    return MainMenuContent;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", typeof (_a = typeof Menu !== \"undefined\" && Menu) === \"function\" && _a || Object)\n], MainMenuContent.prototype, \"menu\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", typeof (_b = typeof Nav !== \"undefined\" && Nav) === \"function\" && _b || Object)\n], MainMenuContent.prototype, \"nav\", void 0);\nMainMenuContent = __decorate([\n    Component({\n        selector: 'main-menu-content',\n        templateUrl: 'main-menu-content.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_c = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _c || Object, typeof (_d = typeof App !== \"undefined\" && App) === \"function\" && _d || Object, typeof (_e = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _e || Object, typeof (_f = typeof Replication !== \"undefined\" && Replication) === \"function\" && _f || Object, typeof (_g = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _g || Object, typeof (_h = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _h || Object, typeof (_j = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _j || Object, typeof (_k = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _k || Object, typeof (_l = typeof ApplicationRef !== \"undefined\" && ApplicationRef) === \"function\" && _l || Object])\n], MainMenuContent);\nexport { MainMenuContent };\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n//# sourceMappingURL=main-menu-content.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/main-menu-content/main-menu-content.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input } from '@angular/core';\nimport { Notifications } from '../../services/notifications';\nvar NotificationList = (function () {\n    function NotificationList(notificationService) {\n        this.notificationService = notificationService;\n        this.limit = Number.MAX_SAFE_INTEGER;\n    }\n    Object.defineProperty(NotificationList.prototype, \"notifications\", {\n        get: function () {\n            return this.new ? this.notificationService.newNotifications : this.notificationService.notifications;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NotificationList;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], NotificationList.prototype, \"limit\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], NotificationList.prototype, \"new\", void 0);\nNotificationList = __decorate([\n    Component({\n        selector: 'notification-list',\n        templateUrl: 'notification-list.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _a || Object])\n], NotificationList);\nexport { NotificationList };\nvar _a;\n//# sourceMappingURL=notification-list.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/notification-list/notification-list.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { Notifications } from '../../services/notifications';\nvar MainMenuIcon = (function () {\n    function MainMenuIcon(notifications) {\n        this.notifications = notifications;\n    }\n    return MainMenuIcon;\n}());\nMainMenuIcon = __decorate([\n    Component({\n        selector: 'main-menu-icon',\n        templateUrl: 'main-menu-icon.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _a || Object])\n], MainMenuIcon);\nexport { MainMenuIcon };\nvar _a;\n//# sourceMappingURL=main-menu-icon.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/main-menu-icon/main-menu-icon.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Notifications } from './notifications';\nimport { Configuration } from './configuration-service';\nimport { AppReady } from '../app/app-ready';\nimport { Logger } from './logger';\nimport { BuildInfo } from '../app/build-info';\nimport { Utils } from \"./utils\";\nvar UpdatedCheck = (function () {\n    function UpdatedCheck(appReady, notifications, configuration) {\n        var _this = this;\n        this.logger = Logger.get('Notifications');\n        if (Utils.getQueryStringValue('demo'))\n            return; // Skip this for demos\n        appReady.ready.then(function () {\n            var latestVersion = configuration.option('latest-version');\n            if (BuildInfo.version !== latestVersion || BuildInfo.version === \"%BUILD_INFO_VERSION%\") {\n                configuration.option('latest-version', BuildInfo.version);\n                var message = \"Updated to version \" + BuildInfo.version;\n                _this.logger.info(message);\n                notifications.notify(message, true);\n            }\n        });\n    }\n    return UpdatedCheck;\n}());\nUpdatedCheck = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof AppReady !== \"undefined\" && AppReady) === \"function\" && _a || Object, typeof (_b = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _b || Object, typeof (_c = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _c || Object])\n], UpdatedCheck);\nexport { UpdatedCheck };\nvar _a, _b, _c;\n//# sourceMappingURL=updated-check.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/updated-check.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n//import MaskedInput from 'ionic2-input-mask';\nimport { Configuration } from '../services/configuration-service';\nimport { Platform } from 'ionic-angular';\nvar CurrencyField = (function () {\n    function CurrencyField(elementRef, ngControl, platform, configuration) {\n        this.elementRef = elementRef;\n        this.ngControl = ngControl;\n        this.platform = platform;\n        this.configuration = configuration;\n        if (!(this.platform.is('ios') || this.platform.is('android'))) {\n            //            this.maskedInput = new MaskedInput(elementRef, ngControl);\n            //            this.maskedInput.textMaskConfig = <any> {mask: this.numberMask.bind(this), placeholderChar: '0'};\n        }\n    }\n    CurrencyField.prototype.ngAfterViewInit = function () {\n        this.htmlInputElement = this.elementRef.nativeElement.children[0];\n        //if (this.maskedInput) {\n        //this.maskedInput.ngAfterViewInit();\n        //}\n        if (this.platform.is('ios') || this.platform.is('android')) {\n            this.htmlInputElement.setAttribute('type', 'number');\n            this.htmlInputElement.setAttribute('step', '0.01');\n        }\n        /*        this.htmlInputElement.addEventListener('input', (ev) => {\n                    let val = this.htmlInputElement.value;\n                    let parts = val.split('.');\n                    if (parts.length > 1) {\n                        let cents = parts[1];\n                        if (cents.length > 2) cents = cents.substring(0,2);\n                        val = parts[0] + '.' + cents;\n                    }\n                    val = val.replace(/[^0-9.]/g, '');\n                    if (val !== this.htmlInputElement.value) this.htmlInputElement.value = val;\n                });\n        */\n        this.htmlInputElement.setAttribute('placeholder', '0.00');\n    };\n    CurrencyField.prototype.onInput = function () {\n        var val = this.htmlInputElement.value;\n        val = val.replace(/[^0123456789.]/g, '');\n        var parts = val.split('.');\n        if (parts.length > 1) {\n            var cents = parts[1];\n            if (cents.length > 2)\n                cents = cents.substring(0, 2);\n            val = parts[0] + '.' + cents;\n        }\n        if (val !== this.htmlInputElement.value)\n            this.htmlInputElement.value = val;\n        this.ngControl.viewToModelUpdate(this.htmlInputElement.value);\n    };\n    return CurrencyField;\n}());\nCurrencyField = __decorate([\n    Directive({\n        host: {\n            '(input)': 'onInput()'\n        },\n        selector: 'ion-input[currency-field]'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" && _a || Object, typeof (_b = typeof NgControl !== \"undefined\" && NgControl) === \"function\" && _b || Object, typeof (_c = typeof Platform !== \"undefined\" && Platform) === \"function\" && _c || Object, typeof (_d = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _d || Object])\n], CurrencyField);\nexport { CurrencyField };\nvar _a, _b, _c, _d;\n//# sourceMappingURL=currency-field.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/currency-field.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input } from '@angular/core';\nimport { ActionSheetController } from 'ionic-angular';\nimport { LoggerUINotifierAppender } from '../services/logger-ui-notifier-appender';\nvar ErrorLabel = (function () {\n    function ErrorLabel(actionSheetCtrl) {\n        this.actionSheetCtrl = actionSheetCtrl;\n        this.hide = false;\n    }\n    ErrorLabel.prototype.click = function () {\n        var _this = this;\n        var actionSheet = this.actionSheetCtrl.create({\n            title: 'Error',\n            buttons: [\n                {\n                    text: 'Send Error Report',\n                    handler: function () {\n                        LoggerUINotifierAppender.instance.handler.handle(_this.message);\n                    }\n                }, {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    handler: function () {\n                    }\n                }\n            ]\n        });\n        actionSheet.present();\n    };\n    return ErrorLabel;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], ErrorLabel.prototype, \"message\", void 0);\nErrorLabel = __decorate([\n    Component({\n        selector: 'error-label',\n        template: '<div (click)=\"click()\">{{message}}</div>'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ActionSheetController !== \"undefined\" && ActionSheetController) === \"function\" && _a || Object])\n], ErrorLabel);\nexport { ErrorLabel };\nvar _a;\n//# sourceMappingURL=error-label.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/error-label.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { Replication } from '../services/replication-service';\nimport { ActionSheetController } from 'ionic-angular';\nimport { LoggerUINotifierAppender } from '../services/logger-ui-notifier-appender';\nvar ReplicationErrorDisplay = (function () {\n    function ReplicationErrorDisplay(replication, actionSheetCtrl) {\n        this.replication = replication;\n        this.actionSheetCtrl = actionSheetCtrl;\n        this.hide = false;\n    }\n    ReplicationErrorDisplay.prototype.replicationStatus = function () {\n        if (this.replication.syncing.lastResultSuccess)\n            return 'Synchronised';\n        return 'Synchronise Error';\n    };\n    ReplicationErrorDisplay.prototype.click = function () {\n        var _this = this;\n        var actionSheet = this.actionSheetCtrl.create({\n            title: 'Sync Error',\n            buttons: [\n                {\n                    text: 'Hide Sync Error Messages',\n                    handler: function () {\n                        _this.hide = true;\n                    }\n                }, {\n                    text: 'Send Error Report',\n                    handler: function () {\n                        LoggerUINotifierAppender.instance.handler.handle('Sync Error');\n                    }\n                }, {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    handler: function () {\n                    }\n                }\n            ]\n        });\n        actionSheet.present();\n    };\n    return ReplicationErrorDisplay;\n}());\nReplicationErrorDisplay = __decorate([\n    Component({\n        selector: 'replication-error',\n        template: '<div *ngIf=\"!hide\" (click)=\"click()\" [class.show]=\"!replication.syncing.lastResultSuccess\" [class.error]=\"replication.syncing.consecutiveErrorCount>2\">{{replicationStatus()}}</div>'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Replication !== \"undefined\" && Replication) === \"function\" && _a || Object, typeof (_b = typeof ActionSheetController !== \"undefined\" && ActionSheetController) === \"function\" && _b || Object])\n], ReplicationErrorDisplay);\nexport { ReplicationErrorDisplay };\nvar _a, _b;\n//# sourceMappingURL=replication-error-display.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/replication-error-display.ts","var PriceFormat = (function () {\n    function PriceFormat(model, eleRef) {\n        this.model = model;\n        this.is_number = /[0-9]/;\n        this.centsLimit = 2;\n        this.clearOnEmpty = false;\n        this.centsSeparator = \".\";\n        this.thousandsSeparator = \",\";\n        this.allowNegative = true;\n        this.insertPlusSign = false;\n        this.prefix = \"\";\n        this.suffix = \"\";\n        this.element = eleRef.nativeElement;\n    }\n    PriceFormat.prototype.ngOnInit = function () {\n        if (\"input\" == this.element.tagName.toLowerCase())\n            this.input = this.element;\n        else if (\"ion-input\" == this.element.tagName.toLowerCase()) {\n            this.input = this.element.firstChild;\n            //this.displayInput = this.input.cloneNode();\n            //this.element.insertBefore(this.displayInput, this.input);\n        }\n        if (this.model.valueAccessor) {\n            this.model.valueAccessor.writeValue(this.fix_it(this.model.value));\n            this.model.viewToModelUpdate(this.fix_it(this.model.value));\n        }\n        else {\n            throw new Error(\"price-format requires NgModel to function correctly\");\n            //(<Control>this.ctrl.control).updateValue(this.fix_it(this.model.value));\n        }\n    };\n    PriceFormat.prototype.onInput = function () {\n        this.input.value = this.formatIt(this.input.value);\n    };\n    PriceFormat.prototype.onNgModelChange = function (nv) {\n        nv = this.formatIt(nv);\n        if (this.model.value !== nv.toUpperCase() && this.model.value !== this.modelPreviousValue) {\n            this.modelPreviousValue = this.model.value;\n            this.model.valueAccessor.writeValue(nv);\n            this.model.viewToModelUpdate(nv);\n            //if (this.displayInput) this.displayInput.value = nv;\n        }\n    };\n    PriceFormat.prototype.formatIt = function (value) {\n        return this.price_format(value, false);\n    };\n    PriceFormat.prototype.to_numbers = function (str) {\n        var formatted = '';\n        for (var i = 0; i < (str.length); i++) {\n            var char_ = str.charAt(i);\n            if (formatted.length == 0 && char_ == 0)\n                char_ = false;\n            if (char_ && char_.match(this.is_number)) {\n                //if (limit) {\n                //    if (formatted.length < limit) formatted = formatted + char_;\n                //}\n                //else {\n                formatted = formatted + char_;\n                //}\n            }\n        }\n        return formatted;\n    };\n    // format to fill with zeros to complete cents chars\n    PriceFormat.prototype.fill_with_zeroes = function (str) {\n        while (str.length < (this.centsLimit + 1))\n            str = '0' + str;\n        return str;\n    };\n    PriceFormat.prototype.fix_it = function (str1) {\n        var str = str1 ? str1 + \"\" : \"0\";\n        var parts = str.split(\".\");\n        if (parts.length == 1) {\n            str = str + this.centsSeparator + Array(this.centsLimit + 1).join(\"0\");\n        }\n        else if (parts.length == 2) {\n            var cents = parts[1];\n            if (parts[1].length > this.centsLimit)\n                cents = parts[1].substring(0, this.centsLimit + 1);\n            else if (parts[1].length < this.centsLimit)\n                cents = parts[1] + Array(this.centsLimit - parts[1].length + 1).join(\"0\");\n            str = parts[0] + this.centsSeparator + cents;\n        }\n        return this.price_format(str, false);\n    };\n    PriceFormat.prototype.price_format = function (str, ignore) {\n        str = str + \"\";\n        if (!ignore && (str === '' || str == this.price_format('0', true)) && this.clearOnEmpty)\n            return '';\n        // formatting settings\n        var formatted = this.fill_with_zeroes(this.to_numbers(str));\n        var thousandsFormatted = '';\n        var thousandsCount = 0;\n        var centsSeparator = this.centsSeparator;\n        // Checking CentsLimit\n        if (this.centsLimit == 0) {\n            centsSeparator = \"\";\n            centsVal = \"\";\n        }\n        // split integer from cents\n        var centsVal = formatted.substr(formatted.length - this.centsLimit, this.centsLimit);\n        var integerVal = formatted.substr(0, formatted.length - this.centsLimit);\n        // apply cents pontuation\n        formatted = (this.centsLimit == 0) ? integerVal : integerVal + centsSeparator + centsVal;\n        // apply thousands pontuation\n        if (this.thousandsSeparator) {\n            for (var j = integerVal.length; j > 0; j--) {\n                var char_ = integerVal.substr(j - 1, 1);\n                thousandsCount++;\n                if (thousandsCount % 3 == 0)\n                    char_ = this.thousandsSeparator + char_;\n                thousandsFormatted = char_ + thousandsFormatted;\n            }\n            //\n            if (thousandsFormatted.substr(0, 1) == this.thousandsSeparator)\n                thousandsFormatted = thousandsFormatted.substring(1, thousandsFormatted.length);\n            formatted = (this.centsLimit == 0) ? thousandsFormatted : thousandsFormatted + centsSeparator + centsVal;\n        }\n        // if the string contains a dash, it is negative - add it to the begining (except for zero)\n        if (this.allowNegative && (integerVal != 0 || centsVal != 0)) {\n            if (str.indexOf('-') != -1 && str.indexOf('+') < str.indexOf('-')) {\n                formatted = '-' + formatted;\n            }\n            else {\n                if (!this.insertPlusSign)\n                    formatted = '' + formatted;\n                else\n                    formatted = '+' + formatted;\n            }\n        }\n        // apply the prefix\n        if (this.prefix)\n            formatted = this.prefix + formatted;\n        // apply the suffix\n        if (this.suffix)\n            formatted = formatted + this.suffix;\n        return formatted;\n    };\n    return PriceFormat;\n}());\nexport { PriceFormat };\n//# sourceMappingURL=price-format.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/price-format.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input } from '@angular/core';\nimport { PriceFormat } from './price-format';\nvar CurrencyDisplay = (function () {\n    function CurrencyDisplay() {\n    }\n    CurrencyDisplay.prototype.ngOnInit = function () {\n        // this.formatCurrency();\n    };\n    CurrencyDisplay.prototype.ngOnChanges = function () {\n        this.formatCurrency();\n    };\n    CurrencyDisplay.prototype.formatCurrency = function () {\n        // If they are defined, then they are true, otherwise they will be falsy\n        if (typeof this.highlightPositive !== 'undefined')\n            this.highlightPositive = true;\n        if (typeof this.highlightNegative !== 'undefined')\n            this.highlightNegative = true;\n        if (typeof this.invertedCurrency !== 'undefined')\n            this.invertedCurrency = true;\n        if (typeof this.showPositive !== 'undefined')\n            this.showPositive = true;\n        if (typeof this.showNegative !== 'undefined')\n            this.showNegative = true;\n        if (this.checkValue === this.value)\n            return this.formattedCurrencyCached;\n        this.checkValue = this.value;\n        var pf = new PriceFormat({}, {});\n        var formattedVal = pf.formatIt(pf.fix_it(this.value));\n        formattedVal = formattedVal.replace('-', '');\n        this.positive = true;\n        if (parseFloat(this.value) < 0) {\n            this.positive = false;\n            if (this.highlightNegative)\n                formattedVal = '(' + formattedVal + ')';\n        }\n        if (this.invertedCurrency)\n            this.positive = !this.positive;\n        if (this.positive && this.showPositive && formattedVal !== '0.00') {\n            formattedVal = '+' + formattedVal;\n        }\n        else if (!this.positive && this.showNegative && formattedVal !== '0.00') {\n            formattedVal = '-' + formattedVal;\n        }\n        this.formattedCurrencyCached = formattedVal;\n        return this.formattedCurrencyCached;\n    };\n    return CurrencyDisplay;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CurrencyDisplay.prototype, \"value\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], CurrencyDisplay.prototype, \"highlightPositive\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], CurrencyDisplay.prototype, \"highlightNegative\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], CurrencyDisplay.prototype, \"invertedCurrency\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], CurrencyDisplay.prototype, \"showPositive\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], CurrencyDisplay.prototype, \"showNegative\", void 0);\nCurrencyDisplay = __decorate([\n    Component({\n        selector: 'currency-display',\n        template: '<span [class.positive-currency]=\"positive && highlightPositive\" [class.negative-currency]=\"!positive && highlightNegative\">{{formattedCurrencyCached}}</span>'\n    })\n], CurrencyDisplay);\nexport { CurrencyDisplay };\n//# sourceMappingURL=currency-display.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/currency-display.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Pipe } from '@angular/core';\nimport moment from 'moment';\nvar DFormatPipe = (function () {\n    function DFormatPipe() {\n    }\n    DFormatPipe.prototype.transform = function (val, args) {\n        var m = moment(val, 'YYYYMMDD');\n        if (m.year() === new Date().getFullYear()) {\n            return m.format('DD MMM');\n        }\n        else {\n            return m.format('DD MMM YYYY');\n        }\n    };\n    return DFormatPipe;\n}());\nDFormatPipe = __decorate([\n    Pipe({\n        name: 'dFormat'\n    })\n], DFormatPipe);\nexport { DFormatPipe };\n//# sourceMappingURL=date-format.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/date-format.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input } from '@angular/core';\nvar CuteProgressBar = (function () {\n    function CuteProgressBar() {\n    }\n    CuteProgressBar.prototype.cssWidth = function () {\n        // TODO: Need a way to immediately update this, perhaps instead of binding, have a method which will update the DOM directly...\n        // TODO: Or need a way to trigger angular to run immediately, and not in a setTimeout()...\n        if (this.of > 0)\n            return (this.value / this.of * 100) + \"%\";\n        return \"0\"; // TODO: Trigger an indeterminate animation\n    };\n    return CuteProgressBar;\n}());\n__decorate([\n    Input(\"value\"),\n    __metadata(\"design:type\", Number)\n], CuteProgressBar.prototype, \"value\", void 0);\n__decorate([\n    Input(\"of\"),\n    __metadata(\"design:type\", Number)\n], CuteProgressBar.prototype, \"of\", void 0);\nCuteProgressBar = __decorate([\n    Component({\n        selector: 'cute-progress-bar',\n        template: '<div class=\"cute-progress-indicator\" [style.left]=\"cssWidth()\"></div>'\n    })\n], CuteProgressBar);\nexport { CuteProgressBar };\n//# sourceMappingURL=cute-progress-bar.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/cute-progress-bar.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\nimport { IonicApp, IonicModule } from 'ionic-angular';\nimport { App } from './app.component';\nimport { AppReady } from './app-ready';\nimport { AppExceptionHandler } from './app-exception-handler';\nimport { HomePage } from '../pages/home/home';\nimport { BudgetSettingsPage } from '../pages/budget-settings/budget-settings';\nimport { AccountPage } from '../pages/account/account';\nimport { BankPage } from '../pages/bank/bank';\nimport { BudgetPage } from '../pages/budget/budget';\nimport { AboutPage } from '../pages/about/about';\nimport { CategoryPage, CategoryPopover } from '../pages/category/category';\nimport { SettingsPage } from '../pages/settings/settings';\nimport { DevPage } from '../pages/dev/dev';\nimport { NotificationsPage } from '../pages/notifications/notifications';\nimport { ShareBudgetModal } from '../modals/share-budget/share-budget';\nimport { AddBudgetModal } from '../modals/add-budget/add-budget';\nimport { AddEditCategoryModal } from '../modals/add-edit-category/add-edit-category';\nimport { AddEditCategorySimpleWeeklyModal } from '../modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly';\nimport { AddEditTransactionModal } from '../modals/add-edit-transaction/add-edit-transaction';\nimport { AddEditSplitTransactionModal } from '../modals/add-edit-split-transaction/add-edit-split-transaction';\nimport { AddEditSplitTransactionLineModal } from '../modals/add-edit-split-transaction/add-edit-split-transaction-line';\nimport { AddEditSplitTransferModal } from '../modals/add-edit-split-transfer/add-edit-split-transfer';\nimport { AddEditSplitTransferLineModal } from '../modals/add-edit-split-transfer/add-edit-split-transfer-line';\nimport { AddEditTransferModal } from '../modals/add-edit-transfer/add-edit-transfer';\nimport { AddEditAccountModal } from '../modals/add-edit-account/add-edit-account';\nimport { MainMenuContent } from '../components/main-menu-content/main-menu-content';\nimport { NotificationList } from '../components/notification-list/notification-list';\nimport { MainMenuIcon } from '../components/main-menu-icon/main-menu-icon';\nimport { Dbms } from '../db/dbms';\nimport { PersistenceProviderManager } from '../db/persistence-provider-manager';\nimport { EditorProvider } from '../services/editor-provider';\nimport { Configuration } from '../services/configuration-service';\nimport { BankProviderManager } from '../bank/bank-provider-manager';\nimport { StandardHostInterface } from '../bank/standard-host-interface';\nimport { TransactionSync } from '../bank/transaction-sync';\nimport { BankSync } from '../bank/bank-sync';\nimport { Replication } from '../services/replication-service';\nimport { UpdatedCheck } from '../services/updated-check';\nimport { UpdateCheck } from '../services/update-check';\nimport { CurrencyFormatter } from '../services/currency-formatter';\nimport { Notifications } from '../services/notifications';\nimport { TransactionSerializer } from '../db/transaction-serializer';\nimport { EngineFactory } from '../engine/engine-factory';\nimport { CurrencyField } from '../components/currency-field';\nimport { NoFocusDirective } from '../components/no-focus';\nimport { ErrorLabel } from '../components/error-label';\nimport { ReplicationErrorDisplay } from '../components/replication-error-display';\nimport { CurrencyDisplay } from '../components/currency-display';\nimport { DFormatPipe } from '../components/date-format';\nimport { CFormatPipe } from '../components/currency-format';\nimport { CuteProgressBar } from '../components/cute-progress-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { Device } from '@ionic-native/device';\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { ViewBankTransactionModal } from \"../modals/view-bank-transaction/view-bank-transaction\";\nimport { SecureStorage } from \"@ionic-native/secure-storage\";\nimport { DemoService } from \"../demo/demo-service\";\nimport { DemoSetup } from \"../demo/demo-setup\";\nimport { Autofocus } from \"../services/autofocus\";\nvar AppModule = (function () {\n    function AppModule(updatedCheck, updateCheck) {\n    }\n    return AppModule;\n}());\nAppModule = __decorate([\n    NgModule({\n        declarations: [\n            App,\n            HomePage,\n            BudgetSettingsPage,\n            AccountPage,\n            BudgetPage,\n            CategoryPage,\n            SettingsPage,\n            DevPage,\n            AboutPage,\n            NotificationsPage,\n            BankPage,\n            ShareBudgetModal,\n            AddBudgetModal,\n            AddEditCategoryModal,\n            AddEditTransactionModal,\n            AddEditSplitTransactionModal,\n            AddEditSplitTransactionLineModal,\n            AddEditSplitTransferModal,\n            AddEditSplitTransferLineModal,\n            AddEditTransferModal,\n            AddEditAccountModal,\n            AddEditCategorySimpleWeeklyModal,\n            ViewBankTransactionModal,\n            CurrencyField,\n            NoFocusDirective,\n            ErrorLabel,\n            ReplicationErrorDisplay,\n            CurrencyDisplay,\n            DFormatPipe,\n            MainMenuContent,\n            CategoryPopover,\n            CFormatPipe,\n            CuteProgressBar,\n            MainMenuIcon,\n            NotificationList\n        ],\n        imports: [\n            BrowserModule,\n            HttpModule,\n            IonicModule.forRoot(App)\n        ],\n        bootstrap: [IonicApp],\n        entryComponents: [\n            App,\n            HomePage,\n            BankPage,\n            BudgetSettingsPage,\n            BudgetPage,\n            AccountPage,\n            CategoryPage,\n            SettingsPage,\n            DevPage,\n            AboutPage,\n            NotificationsPage,\n            ShareBudgetModal,\n            AddBudgetModal,\n            AddEditCategoryModal,\n            AddEditTransactionModal,\n            AddEditSplitTransactionModal,\n            AddEditSplitTransactionLineModal,\n            AddEditSplitTransferModal,\n            AddEditSplitTransferLineModal,\n            AddEditTransferModal,\n            AddEditAccountModal,\n            AddEditCategorySimpleWeeklyModal,\n            ViewBankTransactionModal,\n            CategoryPopover\n        ],\n        providers: [\n            { provide: ErrorHandler, useClass: AppExceptionHandler },\n            StandardHostInterface,\n            BankProviderManager,\n            TransactionSync,\n            BankSync,\n            Device,\n            Clipboard,\n            SecureStorage,\n            SQLite,\n            InAppBrowser,\n            SplashScreen,\n            StatusBar,\n            AppReady,\n            UpdatedCheck,\n            UpdateCheck,\n            Notifications,\n            CurrencyFormatter,\n            EditorProvider,\n            Configuration,\n            PersistenceProviderManager,\n            Dbms,\n            TransactionSerializer,\n            EngineFactory,\n            Replication,\n            DemoService,\n            DemoSetup,\n            Autofocus\n        ]\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof UpdatedCheck !== \"undefined\" && UpdatedCheck) === \"function\" && _a || Object, typeof (_b = typeof UpdateCheck !== \"undefined\" && UpdateCheck) === \"function\" && _b || Object])\n], AppModule);\nexport { AppModule };\nvar _a, _b;\n//# sourceMappingURL=app.module.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n/* tslint:disable */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as import0 from '@angular/core';\nimport * as import1 from './app.module';\nimport * as import2 from '@angular/common';\nimport * as import3 from './app-exception-handler';\nimport * as import4 from 'ionic-angular/platform/dom-controller';\nimport * as import5 from 'ionic-angular/components/app/menu-controller';\nimport * as import6 from 'ionic-angular/components/app/app';\nimport * as import7 from 'ionic-angular/gestures/gesture-controller';\nimport * as import8 from 'ionic-angular/util/ng-module-loader';\nimport * as import9 from '@angular/platform-browser';\nimport * as import10 from '@angular/http';\nimport * as import11 from '@angular/forms';\nimport * as import12 from 'ionic-angular/module';\nimport * as import13 from './app-ready';\nimport * as import14 from 'ionic-angular/components/toast/toast-controller';\nimport * as import15 from '../services/currency-formatter';\nimport * as import16 from '../services/notifications';\nimport * as import17 from '../db/transaction-serializer';\nimport * as import18 from '@ionic-native/device/index';\nimport * as import19 from '@ionic-native/sqlite/index';\nimport * as import20 from '../db/persistence-provider-manager';\nimport * as import21 from '@ionic-native/secure-storage/index';\nimport * as import22 from '../services/configuration-service';\nimport * as import23 from '../services/updated-check';\nimport * as import24 from '../services/update-check';\nimport * as import25 from 'ionic-angular/gestures/gesture-config';\nimport * as import26 from 'ionic-angular/components/action-sheet/action-sheet-controller';\nimport * as import27 from 'ionic-angular/components/alert/alert-controller';\nimport * as import28 from 'ionic-angular/util/events';\nimport * as import29 from 'ionic-angular/util/form';\nimport * as import30 from 'ionic-angular/tap-click/haptic';\nimport * as import31 from 'ionic-angular/platform/keyboard';\nimport * as import32 from 'ionic-angular/components/loading/loading-controller';\nimport * as import33 from 'ionic-angular/components/modal/modal-controller';\nimport * as import34 from 'ionic-angular/components/picker/picker-controller';\nimport * as import35 from 'ionic-angular/components/popover/popover-controller';\nimport * as import36 from 'ionic-angular/tap-click/tap-click';\nimport * as import37 from 'ionic-angular/transitions/transition-controller';\nimport * as import38 from '@ionic-native/in-app-browser/index';\nimport * as import39 from '../bank/standard-host-interface';\nimport * as import40 from '../bank/bank-provider-manager';\nimport * as import41 from '../bank/transaction-sync';\nimport * as import42 from '../db/dbms';\nimport * as import43 from '../services/replication-service';\nimport * as import44 from '../bank/bank-sync';\nimport * as import45 from '@ionic-native/clipboard/index';\nimport * as import46 from '@ionic-native/splash-screen/index';\nimport * as import47 from '@ionic-native/status-bar/index';\nimport * as import48 from '../services/editor-provider';\nimport * as import49 from '../engine/engine-factory';\nimport * as import50 from '../demo/demo-setup';\nimport * as import51 from '../services/autofocus';\nimport * as import52 from '../demo/demo-service';\nimport * as import53 from '../../node_modules/ionic-angular/components/action-sheet/action-sheet-component.ngfactory';\nimport * as import54 from '../../node_modules/ionic-angular/components/alert/alert-component.ngfactory';\nimport * as import55 from '../../node_modules/ionic-angular/components/app/app-root.ngfactory';\nimport * as import56 from '../../node_modules/ionic-angular/components/loading/loading-component.ngfactory';\nimport * as import57 from '../../node_modules/ionic-angular/components/modal/modal-component.ngfactory';\nimport * as import58 from '../../node_modules/ionic-angular/components/picker/picker-component.ngfactory';\nimport * as import59 from '../../node_modules/ionic-angular/components/popover/popover-component.ngfactory';\nimport * as import60 from '../../node_modules/ionic-angular/components/select/select-popover-component.ngfactory';\nimport * as import61 from '../../node_modules/ionic-angular/components/toast/toast-component.ngfactory';\nimport * as import62 from './app.component.ngfactory';\nimport * as import63 from '../pages/home/home.ngfactory';\nimport * as import64 from '../pages/bank/bank.ngfactory';\nimport * as import65 from '../pages/budget-settings/budget-settings.ngfactory';\nimport * as import66 from '../pages/budget/budget.ngfactory';\nimport * as import67 from '../pages/account/account.ngfactory';\nimport * as import68 from '../pages/category/category.ngfactory';\nimport * as import69 from '../pages/settings/settings.ngfactory';\nimport * as import70 from '../pages/dev/dev.ngfactory';\nimport * as import71 from '../pages/about/about.ngfactory';\nimport * as import72 from '../pages/notifications/notifications.ngfactory';\nimport * as import73 from '../modals/share-budget/share-budget.ngfactory';\nimport * as import74 from '../modals/add-budget/add-budget.ngfactory';\nimport * as import75 from '../modals/add-edit-category/add-edit-category.ngfactory';\nimport * as import76 from '../modals/add-edit-transaction/add-edit-transaction.ngfactory';\nimport * as import77 from '../modals/add-edit-split-transaction/add-edit-split-transaction.ngfactory';\nimport * as import78 from '../modals/add-edit-split-transaction/add-edit-split-transaction-line.ngfactory';\nimport * as import79 from '../modals/add-edit-split-transfer/add-edit-split-transfer.ngfactory';\nimport * as import80 from '../modals/add-edit-split-transfer/add-edit-split-transfer-line.ngfactory';\nimport * as import81 from '../modals/add-edit-transfer/add-edit-transfer.ngfactory';\nimport * as import82 from '../modals/add-edit-account/add-edit-account.ngfactory';\nimport * as import83 from '../modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly.ngfactory';\nimport * as import84 from '../modals/view-bank-transaction/view-bank-transaction.ngfactory';\nimport * as import85 from 'ionic-angular/navigation/url-serializer';\nimport * as import86 from 'ionic-angular/navigation/deep-linker';\nimport * as import87 from 'ionic-angular/platform/platform-registry';\nimport * as import88 from 'ionic-angular/platform/platform';\nimport * as import89 from 'ionic-angular/config/config';\nimport * as import90 from 'ionic-angular/util/module-loader';\nimport * as import91 from 'ionic-angular/config/mode-registry';\nimport * as import92 from './app.component';\nimport * as import93 from 'ionic-angular/components/app/app-root';\nvar AppModuleInjector = (function (_super) {\n    __extends(AppModuleInjector, _super);\n    function AppModuleInjector(parent) {\n        return _super.call(this, parent, [\n            import53.ActionSheetCmpNgFactory,\n            import54.AlertCmpNgFactory,\n            import55.IonicAppNgFactory,\n            import56.LoadingCmpNgFactory,\n            import57.ModalCmpNgFactory,\n            import58.PickerCmpNgFactory,\n            import59.PopoverCmpNgFactory,\n            import60.SelectPopoverNgFactory,\n            import61.ToastCmpNgFactory,\n            import62.AppNgFactory,\n            import63.HomePageNgFactory,\n            import64.BankPageNgFactory,\n            import65.BudgetSettingsPageNgFactory,\n            import66.BudgetPageNgFactory,\n            import67.AccountPageNgFactory,\n            import68.CategoryPageNgFactory,\n            import69.SettingsPageNgFactory,\n            import70.DevPageNgFactory,\n            import71.AboutPageNgFactory,\n            import72.NotificationsPageNgFactory,\n            import73.ShareBudgetModalNgFactory,\n            import74.AddBudgetModalNgFactory,\n            import75.AddEditCategoryModalNgFactory,\n            import76.AddEditTransactionModalNgFactory,\n            import77.AddEditSplitTransactionModalNgFactory,\n            import78.AddEditSplitTransactionLineModalNgFactory,\n            import79.AddEditSplitTransferModalNgFactory,\n            import80.AddEditSplitTransferLineModalNgFactory,\n            import81.AddEditTransferModalNgFactory,\n            import82.AddEditAccountModalNgFactory,\n            import83.AddEditCategorySimpleWeeklyModalNgFactory,\n            import84.ViewBankTransactionModalNgFactory,\n            import68.CategoryPopoverNgFactory\n        ], [import55.IonicAppNgFactory]) || this;\n    }\n    Object.defineProperty(AppModuleInjector.prototype, \"_LOCALE_ID_44\", {\n        get: function () {\n            if ((this.__LOCALE_ID_44 == null)) {\n                (this.__LOCALE_ID_44 = import0.ɵn(this.parent.get(import0.LOCALE_ID, null)));\n            }\n            return this.__LOCALE_ID_44;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_NgLocalization_45\", {\n        get: function () {\n            if ((this.__NgLocalization_45 == null)) {\n                (this.__NgLocalization_45 = new import2.NgLocaleLocalization(this._LOCALE_ID_44));\n            }\n            return this.__NgLocalization_45;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_APP_ID_46\", {\n        get: function () {\n            if ((this.__APP_ID_46 == null)) {\n                (this.__APP_ID_46 = import0.ɵg());\n            }\n            return this.__APP_ID_46;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_IterableDiffers_47\", {\n        get: function () {\n            if ((this.__IterableDiffers_47 == null)) {\n                (this.__IterableDiffers_47 = import0.ɵl());\n            }\n            return this.__IterableDiffers_47;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_KeyValueDiffers_48\", {\n        get: function () {\n            if ((this.__KeyValueDiffers_48 == null)) {\n                (this.__KeyValueDiffers_48 = import0.ɵm());\n            }\n            return this.__KeyValueDiffers_48;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_DomSanitizer_49\", {\n        get: function () {\n            if ((this.__DomSanitizer_49 == null)) {\n                (this.__DomSanitizer_49 = new import9.ɵe(this.parent.get(import9.DOCUMENT)));\n            }\n            return this.__DomSanitizer_49;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Sanitizer_50\", {\n        get: function () {\n            if ((this.__Sanitizer_50 == null)) {\n                (this.__Sanitizer_50 = this._DomSanitizer_49);\n            }\n            return this.__Sanitizer_50;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_HAMMER_GESTURE_CONFIG_51\", {\n        get: function () {\n            if ((this.__HAMMER_GESTURE_CONFIG_51 == null)) {\n                (this.__HAMMER_GESTURE_CONFIG_51 = new import25.IonicGestureConfig());\n            }\n            return this.__HAMMER_GESTURE_CONFIG_51;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_EVENT_MANAGER_PLUGINS_52\", {\n        get: function () {\n            if ((this.__EVENT_MANAGER_PLUGINS_52 == null)) {\n                (this.__EVENT_MANAGER_PLUGINS_52 = [\n                    new import9.ɵDomEventsPlugin(this.parent.get(import9.DOCUMENT)),\n                    new import9.ɵKeyEventsPlugin(this.parent.get(import9.DOCUMENT)),\n                    new import9.ɵHammerGesturesPlugin(this.parent.get(import9.DOCUMENT), this._HAMMER_GESTURE_CONFIG_51)\n                ]);\n            }\n            return this.__EVENT_MANAGER_PLUGINS_52;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_EventManager_53\", {\n        get: function () {\n            if ((this.__EventManager_53 == null)) {\n                (this.__EventManager_53 = new import9.EventManager(this._EVENT_MANAGER_PLUGINS_52, this.parent.get(import0.NgZone)));\n            }\n            return this.__EventManager_53;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_\\u0275DomSharedStylesHost_54\", {\n        get: function () {\n            if ((this.__ɵDomSharedStylesHost_54 == null)) {\n                (this.__ɵDomSharedStylesHost_54 = new import9.ɵDomSharedStylesHost(this.parent.get(import9.DOCUMENT)));\n            }\n            return this.__ɵDomSharedStylesHost_54;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_\\u0275DomRendererFactory2_55\", {\n        get: function () {\n            if ((this.__ɵDomRendererFactory2_55 == null)) {\n                (this.__ɵDomRendererFactory2_55 = new import9.ɵDomRendererFactory2(this._EventManager_53, this._ɵDomSharedStylesHost_54));\n            }\n            return this.__ɵDomRendererFactory2_55;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_RendererFactory2_56\", {\n        get: function () {\n            if ((this.__RendererFactory2_56 == null)) {\n                (this.__RendererFactory2_56 = this._ɵDomRendererFactory2_55);\n            }\n            return this.__RendererFactory2_56;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_\\u0275SharedStylesHost_57\", {\n        get: function () {\n            if ((this.__ɵSharedStylesHost_57 == null)) {\n                (this.__ɵSharedStylesHost_57 = this._ɵDomSharedStylesHost_54);\n            }\n            return this.__ɵSharedStylesHost_57;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Testability_58\", {\n        get: function () {\n            if ((this.__Testability_58 == null)) {\n                (this.__Testability_58 = new import0.Testability(this.parent.get(import0.NgZone)));\n            }\n            return this.__Testability_58;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Meta_59\", {\n        get: function () {\n            if ((this.__Meta_59 == null)) {\n                (this.__Meta_59 = new import9.Meta(this.parent.get(import9.DOCUMENT)));\n            }\n            return this.__Meta_59;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Title_60\", {\n        get: function () {\n            if ((this.__Title_60 == null)) {\n                (this.__Title_60 = new import9.Title(this.parent.get(import9.DOCUMENT)));\n            }\n            return this.__Title_60;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_\\u0275i_61\", {\n        get: function () {\n            if ((this.__ɵi_61 == null)) {\n                (this.__ɵi_61 = new import11.ɵi());\n            }\n            return this.__ɵi_61;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_FormBuilder_62\", {\n        get: function () {\n            if ((this.__FormBuilder_62 == null)) {\n                (this.__FormBuilder_62 = new import11.FormBuilder());\n            }\n            return this.__FormBuilder_62;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_ActionSheetController_65\", {\n        get: function () {\n            if ((this.__ActionSheetController_65 == null)) {\n                (this.__ActionSheetController_65 = new import26.ActionSheetController(this._App_8, this._Config_5));\n            }\n            return this.__ActionSheetController_65;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_AlertController_66\", {\n        get: function () {\n            if ((this.__AlertController_66 == null)) {\n                (this.__AlertController_66 = new import27.AlertController(this._App_8, this._Config_5));\n            }\n            return this.__AlertController_66;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Events_67\", {\n        get: function () {\n            if ((this.__Events_67 == null)) {\n                (this.__Events_67 = new import28.Events());\n            }\n            return this.__Events_67;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Form_68\", {\n        get: function () {\n            if ((this.__Form_68 == null)) {\n                (this.__Form_68 = new import29.Form());\n            }\n            return this.__Form_68;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Haptic_69\", {\n        get: function () {\n            if ((this.__Haptic_69 == null)) {\n                (this.__Haptic_69 = new import30.Haptic(this._Platform_4));\n            }\n            return this.__Haptic_69;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Keyboard_70\", {\n        get: function () {\n            if ((this.__Keyboard_70 == null)) {\n                (this.__Keyboard_70 = new import31.Keyboard(this._Config_5, this._Platform_4, this.parent.get(import0.NgZone), this._DomController_6));\n            }\n            return this.__Keyboard_70;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_LoadingController_71\", {\n        get: function () {\n            if ((this.__LoadingController_71 == null)) {\n                (this.__LoadingController_71 = new import32.LoadingController(this._App_8, this._Config_5));\n            }\n            return this.__LoadingController_71;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_LocationStrategy_72\", {\n        get: function () {\n            if ((this.__LocationStrategy_72 == null)) {\n                (this.__LocationStrategy_72 = import12.provideLocationStrategy(this.parent.get(import2.PlatformLocation), this._APP_BASE_HREF_64, this._Config_5));\n            }\n            return this.__LocationStrategy_72;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Location_73\", {\n        get: function () {\n            if ((this.__Location_73 == null)) {\n                (this.__Location_73 = new import2.Location(this._LocationStrategy_72));\n            }\n            return this.__Location_73;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_UrlSerializer_74\", {\n        get: function () {\n            if ((this.__UrlSerializer_74 == null)) {\n                (this.__UrlSerializer_74 = import85.setupUrlSerializer(this._DeepLinkConfigToken_10));\n            }\n            return this.__UrlSerializer_74;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_DeepLinker_75\", {\n        get: function () {\n            if ((this.__DeepLinker_75 == null)) {\n                (this.__DeepLinker_75 = import86.setupDeepLinker(this._App_8, this._UrlSerializer_74, this._Location_73, this._ModuleLoader_13, this.componentFactoryResolver));\n            }\n            return this.__DeepLinker_75;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_ModalController_76\", {\n        get: function () {\n            if ((this.__ModalController_76 == null)) {\n                (this.__ModalController_76 = new import33.ModalController(this._App_8, this._Config_5, this._DeepLinker_75));\n            }\n            return this.__ModalController_76;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_PickerController_77\", {\n        get: function () {\n            if ((this.__PickerController_77 == null)) {\n                (this.__PickerController_77 = new import34.PickerController(this._App_8, this._Config_5));\n            }\n            return this.__PickerController_77;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_PopoverController_78\", {\n        get: function () {\n            if ((this.__PopoverController_78 == null)) {\n                (this.__PopoverController_78 = new import35.PopoverController(this._App_8, this._Config_5, this._DeepLinker_75));\n            }\n            return this.__PopoverController_78;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_TapClick_79\", {\n        get: function () {\n            if ((this.__TapClick_79 == null)) {\n                (this.__TapClick_79 = new import36.TapClick(this._Config_5, this._Platform_4, this._DomController_6, this._App_8, this._GestureController_9));\n            }\n            return this.__TapClick_79;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_TransitionController_80\", {\n        get: function () {\n            if ((this.__TransitionController_80 == null)) {\n                (this.__TransitionController_80 = new import37.TransitionController(this._Platform_4, this._Config_5));\n            }\n            return this.__TransitionController_80;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_InAppBrowser_81\", {\n        get: function () {\n            if ((this.__InAppBrowser_81 == null)) {\n                (this.__InAppBrowser_81 = new import38.InAppBrowser());\n            }\n            return this.__InAppBrowser_81;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_StandardHostInterface_82\", {\n        get: function () {\n            if ((this.__StandardHostInterface_82 == null)) {\n                (this.__StandardHostInterface_82 = new import39.StandardHostInterface(this._InAppBrowser_81, this._Configuration_34));\n            }\n            return this.__StandardHostInterface_82;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_BankProviderManager_83\", {\n        get: function () {\n            if ((this.__BankProviderManager_83 == null)) {\n                (this.__BankProviderManager_83 = new import40.BankProviderManager());\n            }\n            return this.__BankProviderManager_83;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_TransactionSync_84\", {\n        get: function () {\n            if ((this.__TransactionSync_84 == null)) {\n                (this.__TransactionSync_84 = new import41.TransactionSync());\n            }\n            return this.__TransactionSync_84;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Dbms_85\", {\n        get: function () {\n            if ((this.__Dbms_85 == null)) {\n                (this.__Dbms_85 = new import42.Dbms(this._TransactionSerializer_29, this._PersistenceProviderManager_32));\n            }\n            return this.__Dbms_85;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Replication_86\", {\n        get: function () {\n            if ((this.__Replication_86 == null)) {\n                (this.__Replication_86 = new import43.Replication(this._Dbms_85, this._Http_41, this._TransactionSerializer_29, this._Configuration_34));\n            }\n            return this.__Replication_86;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_BankSync_87\", {\n        get: function () {\n            if ((this.__BankSync_87 == null)) {\n                (this.__BankSync_87 = new import44.BankSync(this._StandardHostInterface_82, this._TransactionSync_84, this._BankProviderManager_83, this._Replication_86));\n            }\n            return this.__BankSync_87;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Clipboard_88\", {\n        get: function () {\n            if ((this.__Clipboard_88 == null)) {\n                (this.__Clipboard_88 = new import45.Clipboard());\n            }\n            return this.__Clipboard_88;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_SplashScreen_89\", {\n        get: function () {\n            if ((this.__SplashScreen_89 == null)) {\n                (this.__SplashScreen_89 = new import46.SplashScreen());\n            }\n            return this.__SplashScreen_89;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_StatusBar_90\", {\n        get: function () {\n            if ((this.__StatusBar_90 == null)) {\n                (this.__StatusBar_90 = new import47.StatusBar());\n            }\n            return this.__StatusBar_90;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_EditorProvider_91\", {\n        get: function () {\n            if ((this.__EditorProvider_91 == null)) {\n                (this.__EditorProvider_91 = new import48.EditorProvider(this._ModalController_76));\n            }\n            return this.__EditorProvider_91;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_EngineFactory_92\", {\n        get: function () {\n            if ((this.__EngineFactory_92 == null)) {\n                (this.__EngineFactory_92 = new import49.EngineFactory(this._Dbms_85, this._Notifications_28, this._Configuration_34));\n            }\n            return this.__EngineFactory_92;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_DemoSetup_93\", {\n        get: function () {\n            if ((this.__DemoSetup_93 == null)) {\n                (this.__DemoSetup_93 = new import50.DemoSetup(this._App_8, this._Dbms_85, this._PersistenceProviderManager_32, this._TransactionSerializer_29));\n            }\n            return this.__DemoSetup_93;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Autofocus_94\", {\n        get: function () {\n            if ((this.__Autofocus_94 == null)) {\n                (this.__Autofocus_94 = new import51.Autofocus());\n            }\n            return this.__Autofocus_94;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_DemoService_95\", {\n        get: function () {\n            if ((this.__DemoService_95 == null)) {\n                (this.__DemoService_95 = new import52.DemoService(this.parent.get(import0.NgZone), this._DemoSetup_93, this._Autofocus_94));\n            }\n            return this.__DemoService_95;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AppModuleInjector.prototype.createInternal = function () {\n        this._CommonModule_0 = new import2.CommonModule();\n        this._ErrorHandler_1 = new import3.AppExceptionHandler();\n        this._ConfigToken_2 = null;\n        this._PlatformConfigToken_3 = import87.providePlatformConfigs();\n        this._Platform_4 = import88.setupPlatform(this.parent.get(import9.DOCUMENT), this._PlatformConfigToken_3, this.parent.get(import0.NgZone));\n        this._Config_5 = import89.setupConfig(this._ConfigToken_2, this._Platform_4);\n        this._DomController_6 = new import4.DomController(this._Platform_4);\n        this._MenuController_7 = new import5.MenuController();\n        this._App_8 = new import6.App(this._Config_5, this._Platform_4, this._MenuController_7);\n        this._GestureController_9 = new import7.GestureController(this._App_8);\n        this._DeepLinkConfigToken_10 = null;\n        this._Compiler_11 = new import0.Compiler();\n        this._NgModuleLoader_12 = new import8.NgModuleLoader(this._Compiler_11);\n        this._ModuleLoader_13 = import90.provideModuleLoader(this._NgModuleLoader_12, this);\n        this._APP_INITIALIZER_14 = [\n            import0.ɵo,\n            import9.ɵc(this.parent.get(import9.NgProbeToken, null), this.parent.get(import0.NgProbeToken, null)),\n            import91.registerModeConfigs(this._Config_5),\n            import28.setupProvideEvents(this._Platform_4, this._DomController_6),\n            import36.setupTapClick(this._Config_5, this._Platform_4, this._DomController_6, this._App_8, this._GestureController_9),\n            import90.setupPreloading(this._Config_5, this._DeepLinkConfigToken_10, this._ModuleLoader_13, this.parent.get(import0.NgZone))\n        ];\n        this._ApplicationInitStatus_15 = new import0.ApplicationInitStatus(this._APP_INITIALIZER_14);\n        this._ɵf_16 = new import0.ɵf(this.parent.get(import0.NgZone), this.parent.get(import0.ɵConsole), this, this._ErrorHandler_1, this.componentFactoryResolver, this._ApplicationInitStatus_15);\n        this._ApplicationRef_17 = this._ɵf_16;\n        this._ApplicationModule_18 = new import0.ApplicationModule(this._ApplicationRef_17);\n        this._BrowserModule_19 = new import9.BrowserModule(this.parent.get(import9.BrowserModule, null));\n        this._HttpModule_20 = new import10.HttpModule();\n        this._ɵba_21 = new import11.ɵba();\n        this._FormsModule_22 = new import11.FormsModule();\n        this._ReactiveFormsModule_23 = new import11.ReactiveFormsModule();\n        this._IonicModule_24 = new import12.IonicModule();\n        this._AppReady_25 = new import13.AppReady();\n        this._ToastController_26 = new import14.ToastController(this._App_8, this._Config_5);\n        this._CurrencyFormatter_27 = new import15.CurrencyFormatter();\n        this._Notifications_28 = new import16.Notifications(this._ToastController_26, this._CurrencyFormatter_27);\n        this._TransactionSerializer_29 = new import17.TransactionSerializer();\n        this._Device_30 = new import18.Device();\n        this._SQLite_31 = new import19.SQLite();\n        this._PersistenceProviderManager_32 = new import20.PersistenceProviderManager(this._TransactionSerializer_29, this._Platform_4, this._Device_30, this._SQLite_31);\n        this._SecureStorage_33 = new import21.SecureStorage();\n        this._Configuration_34 = new import22.Configuration(this._PersistenceProviderManager_32, this._Platform_4, this._Device_30, this._SecureStorage_33);\n        this._UpdatedCheck_35 = new import23.UpdatedCheck(this._AppReady_25, this._Notifications_28, this._Configuration_34);\n        this._BrowserXhr_36 = new import10.BrowserXhr();\n        this._ResponseOptions_37 = new import10.BaseResponseOptions();\n        this._XSRFStrategy_38 = import10.ɵb();\n        this._XHRBackend_39 = new import10.XHRBackend(this._BrowserXhr_36, this._ResponseOptions_37, this._XSRFStrategy_38);\n        this._RequestOptions_40 = new import10.BaseRequestOptions();\n        this._Http_41 = import10.ɵc(this._XHRBackend_39, this._RequestOptions_40);\n        this._UpdateCheck_42 = new import24.UpdateCheck(this._AppReady_25, this._Notifications_28, this._Configuration_34, this._ApplicationRef_17, this._Http_41);\n        this._AppModule_43 = new import1.AppModule(this._UpdatedCheck_35, this._UpdateCheck_42);\n        this._AppRootToken_63 = import92.App;\n        this._APP_BASE_HREF_64 = '/';\n        return this._AppModule_43;\n    };\n    AppModuleInjector.prototype.getInternal = function (token, notFoundResult) {\n        if ((token === import2.CommonModule)) {\n            return this._CommonModule_0;\n        }\n        if ((token === import0.ErrorHandler)) {\n            return this._ErrorHandler_1;\n        }\n        if ((token === import89.ConfigToken)) {\n            return this._ConfigToken_2;\n        }\n        if ((token === import87.PlatformConfigToken)) {\n            return this._PlatformConfigToken_3;\n        }\n        if ((token === import88.Platform)) {\n            return this._Platform_4;\n        }\n        if ((token === import89.Config)) {\n            return this._Config_5;\n        }\n        if ((token === import4.DomController)) {\n            return this._DomController_6;\n        }\n        if ((token === import5.MenuController)) {\n            return this._MenuController_7;\n        }\n        if ((token === import6.App)) {\n            return this._App_8;\n        }\n        if ((token === import7.GestureController)) {\n            return this._GestureController_9;\n        }\n        if ((token === import85.DeepLinkConfigToken)) {\n            return this._DeepLinkConfigToken_10;\n        }\n        if ((token === import0.Compiler)) {\n            return this._Compiler_11;\n        }\n        if ((token === import8.NgModuleLoader)) {\n            return this._NgModuleLoader_12;\n        }\n        if ((token === import90.ModuleLoader)) {\n            return this._ModuleLoader_13;\n        }\n        if ((token === import0.APP_INITIALIZER)) {\n            return this._APP_INITIALIZER_14;\n        }\n        if ((token === import0.ApplicationInitStatus)) {\n            return this._ApplicationInitStatus_15;\n        }\n        if ((token === import0.ɵf)) {\n            return this._ɵf_16;\n        }\n        if ((token === import0.ApplicationRef)) {\n            return this._ApplicationRef_17;\n        }\n        if ((token === import0.ApplicationModule)) {\n            return this._ApplicationModule_18;\n        }\n        if ((token === import9.BrowserModule)) {\n            return this._BrowserModule_19;\n        }\n        if ((token === import10.HttpModule)) {\n            return this._HttpModule_20;\n        }\n        if ((token === import11.ɵba)) {\n            return this._ɵba_21;\n        }\n        if ((token === import11.FormsModule)) {\n            return this._FormsModule_22;\n        }\n        if ((token === import11.ReactiveFormsModule)) {\n            return this._ReactiveFormsModule_23;\n        }\n        if ((token === import12.IonicModule)) {\n            return this._IonicModule_24;\n        }\n        if ((token === import13.AppReady)) {\n            return this._AppReady_25;\n        }\n        if ((token === import14.ToastController)) {\n            return this._ToastController_26;\n        }\n        if ((token === import15.CurrencyFormatter)) {\n            return this._CurrencyFormatter_27;\n        }\n        if ((token === import16.Notifications)) {\n            return this._Notifications_28;\n        }\n        if ((token === import17.TransactionSerializer)) {\n            return this._TransactionSerializer_29;\n        }\n        if ((token === import18.Device)) {\n            return this._Device_30;\n        }\n        if ((token === import19.SQLite)) {\n            return this._SQLite_31;\n        }\n        if ((token === import20.PersistenceProviderManager)) {\n            return this._PersistenceProviderManager_32;\n        }\n        if ((token === import21.SecureStorage)) {\n            return this._SecureStorage_33;\n        }\n        if ((token === import22.Configuration)) {\n            return this._Configuration_34;\n        }\n        if ((token === import23.UpdatedCheck)) {\n            return this._UpdatedCheck_35;\n        }\n        if ((token === import10.BrowserXhr)) {\n            return this._BrowserXhr_36;\n        }\n        if ((token === import10.ResponseOptions)) {\n            return this._ResponseOptions_37;\n        }\n        if ((token === import10.XSRFStrategy)) {\n            return this._XSRFStrategy_38;\n        }\n        if ((token === import10.XHRBackend)) {\n            return this._XHRBackend_39;\n        }\n        if ((token === import10.RequestOptions)) {\n            return this._RequestOptions_40;\n        }\n        if ((token === import10.Http)) {\n            return this._Http_41;\n        }\n        if ((token === import24.UpdateCheck)) {\n            return this._UpdateCheck_42;\n        }\n        if ((token === import1.AppModule)) {\n            return this._AppModule_43;\n        }\n        if ((token === import0.LOCALE_ID)) {\n            return this._LOCALE_ID_44;\n        }\n        if ((token === import2.NgLocalization)) {\n            return this._NgLocalization_45;\n        }\n        if ((token === import0.APP_ID)) {\n            return this._APP_ID_46;\n        }\n        if ((token === import0.IterableDiffers)) {\n            return this._IterableDiffers_47;\n        }\n        if ((token === import0.KeyValueDiffers)) {\n            return this._KeyValueDiffers_48;\n        }\n        if ((token === import9.DomSanitizer)) {\n            return this._DomSanitizer_49;\n        }\n        if ((token === import0.Sanitizer)) {\n            return this._Sanitizer_50;\n        }\n        if ((token === import9.HAMMER_GESTURE_CONFIG)) {\n            return this._HAMMER_GESTURE_CONFIG_51;\n        }\n        if ((token === import9.EVENT_MANAGER_PLUGINS)) {\n            return this._EVENT_MANAGER_PLUGINS_52;\n        }\n        if ((token === import9.EventManager)) {\n            return this._EventManager_53;\n        }\n        if ((token === import9.ɵDomSharedStylesHost)) {\n            return this._ɵDomSharedStylesHost_54;\n        }\n        if ((token === import9.ɵDomRendererFactory2)) {\n            return this._ɵDomRendererFactory2_55;\n        }\n        if ((token === import0.RendererFactory2)) {\n            return this._RendererFactory2_56;\n        }\n        if ((token === import9.ɵSharedStylesHost)) {\n            return this._ɵSharedStylesHost_57;\n        }\n        if ((token === import0.Testability)) {\n            return this._Testability_58;\n        }\n        if ((token === import9.Meta)) {\n            return this._Meta_59;\n        }\n        if ((token === import9.Title)) {\n            return this._Title_60;\n        }\n        if ((token === import11.ɵi)) {\n            return this._ɵi_61;\n        }\n        if ((token === import11.FormBuilder)) {\n            return this._FormBuilder_62;\n        }\n        if ((token === import93.AppRootToken)) {\n            return this._AppRootToken_63;\n        }\n        if ((token === import2.APP_BASE_HREF)) {\n            return this._APP_BASE_HREF_64;\n        }\n        if ((token === import26.ActionSheetController)) {\n            return this._ActionSheetController_65;\n        }\n        if ((token === import27.AlertController)) {\n            return this._AlertController_66;\n        }\n        if ((token === import28.Events)) {\n            return this._Events_67;\n        }\n        if ((token === import29.Form)) {\n            return this._Form_68;\n        }\n        if ((token === import30.Haptic)) {\n            return this._Haptic_69;\n        }\n        if ((token === import31.Keyboard)) {\n            return this._Keyboard_70;\n        }\n        if ((token === import32.LoadingController)) {\n            return this._LoadingController_71;\n        }\n        if ((token === import2.LocationStrategy)) {\n            return this._LocationStrategy_72;\n        }\n        if ((token === import2.Location)) {\n            return this._Location_73;\n        }\n        if ((token === import85.UrlSerializer)) {\n            return this._UrlSerializer_74;\n        }\n        if ((token === import86.DeepLinker)) {\n            return this._DeepLinker_75;\n        }\n        if ((token === import33.ModalController)) {\n            return this._ModalController_76;\n        }\n        if ((token === import34.PickerController)) {\n            return this._PickerController_77;\n        }\n        if ((token === import35.PopoverController)) {\n            return this._PopoverController_78;\n        }\n        if ((token === import36.TapClick)) {\n            return this._TapClick_79;\n        }\n        if ((token === import37.TransitionController)) {\n            return this._TransitionController_80;\n        }\n        if ((token === import38.InAppBrowser)) {\n            return this._InAppBrowser_81;\n        }\n        if ((token === import39.StandardHostInterface)) {\n            return this._StandardHostInterface_82;\n        }\n        if ((token === import40.BankProviderManager)) {\n            return this._BankProviderManager_83;\n        }\n        if ((token === import41.TransactionSync)) {\n            return this._TransactionSync_84;\n        }\n        if ((token === import42.Dbms)) {\n            return this._Dbms_85;\n        }\n        if ((token === import43.Replication)) {\n            return this._Replication_86;\n        }\n        if ((token === import44.BankSync)) {\n            return this._BankSync_87;\n        }\n        if ((token === import45.Clipboard)) {\n            return this._Clipboard_88;\n        }\n        if ((token === import46.SplashScreen)) {\n            return this._SplashScreen_89;\n        }\n        if ((token === import47.StatusBar)) {\n            return this._StatusBar_90;\n        }\n        if ((token === import48.EditorProvider)) {\n            return this._EditorProvider_91;\n        }\n        if ((token === import49.EngineFactory)) {\n            return this._EngineFactory_92;\n        }\n        if ((token === import50.DemoSetup)) {\n            return this._DemoSetup_93;\n        }\n        if ((token === import51.Autofocus)) {\n            return this._Autofocus_94;\n        }\n        if ((token === import52.DemoService)) {\n            return this._DemoService_95;\n        }\n        return notFoundResult;\n    };\n    AppModuleInjector.prototype.destroyInternal = function () {\n        this._ɵf_16.ngOnDestroy();\n        (this.__ɵDomSharedStylesHost_54 && this._ɵDomSharedStylesHost_54.ngOnDestroy());\n    };\n    return AppModuleInjector;\n}(import0.ɵNgModuleInjector));\nexport var AppModuleNgFactory = new import0.NgModuleFactory(AppModuleInjector, import1.AppModule);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3J5YW4vZWJ1ZGdldC9zcmMvYXBwL2FwcC5tb2R1bGUubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvcnlhbi9lYnVkZ2V0L3NyYy9hcHAvYXBwLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIgIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9\n//# sourceMappingURL=app.module.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ngfactory.ts","import { Category } from '../data/records/category';\nimport { Account } from '../data/records/account';\nimport { Transaction } from \"../data/records/transaction\";\nimport { Utils } from \"../services/utils\";\nvar Engine = (function () {\n    function Engine(db, notifications, configuration) {\n        var _this = this;\n        this.db = db;\n        db.addEventListener(function (dbEvent) {\n            if (dbEvent.db && dbEvent.db.isBatchProcessing()) {\n                // Only process at batch end, which isBatchProcessing is false\n            }\n            else {\n                var message = void 0;\n                if (dbEvent.eventName === 'transaction-batch-end')\n                    _this.runAllProcessors();\n                if (dbEvent.eventName === 'transaction-applied') {\n                    _this.runAllProcessors();\n                    message = dbEvent.data.transaction.toHumanisedString({ action: dbEvent.data.update ? 'update' : 'apply', currencyFormatter: notifications.formatCurrency, originalTransaction: dbEvent.data.originalTransaction });\n                }\n                if (dbEvent.eventName === 'transaction-undone') {\n                    message = dbEvent.data.transaction.toHumanisedString({ action: 'undo', currencyFormatter: notifications.formatCurrency });\n                    _this.runAllProcessors();\n                }\n                // TODO: Move this out of the engine and into another listener\n                if (message && configuration.option('experimental.transaction.notifications')) {\n                    notifications.notify(message, true, dbEvent.data.transaction && dbEvent.db.transactionIdLocalGen() === dbEvent.db.extractTransactionLocalGenId(dbEvent.data.transaction.id), false);\n                }\n            }\n        });\n        this.categorySortedAlphabeticalDynamicView = this.db.transactionProcessor.table(Category).addDynamicView(\"CategorySortedAlphabetical\");\n        this.categorySortedAlphabeticalDynamicView.applySort((function (a, b) { return (a.name + ''.toLocaleLowerCase()).localeCompare(b.name + ''.toLocaleLowerCase()); }));\n        this.transactionUnreconciledDynamicView = this.db.transactionProcessor.table(Transaction).addDynamicView(\"TransactionUnreconciled\");\n        this.transactionUnreconciledDynamicView.applyWhere(function (t) { return !t.x.reconciled; });\n        this.transactionUnreconciledDynamicView.applySimpleSort('date', true);\n        this.initMidnightWatch();\n    }\n    Engine.prototype.initMidnightWatch = function () {\n        var _this = this;\n        var nowDate = Utils.nowYYYYMMDD();\n        if (this.currentDate !== nowDate) {\n            this.currentDate = nowDate;\n            this.runAllProcessors();\n        }\n        setTimeout(function () { return _this.initMidnightWatch(); }, 60000);\n    };\n    Engine.prototype.runAllProcessors = function () {\n        var _this = this;\n        this.db.transactionProcessor.table(Category).data.forEach(function (category) {\n            category.engine.processors.forEach(function (processor) {\n                processor.execute(_this.db.transactionProcessor);\n            });\n        });\n        this.db.transactionProcessor.table(Account).data.forEach(function (account) {\n            account.processors.forEach(function (processor) {\n                processor.execute(_this.db.transactionProcessor);\n            });\n        });\n    };\n    Engine.prototype.getCategories = function (order) {\n        if (order === void 0) { order = \"natural\"; }\n        if (order == \"alphabetical\")\n            return this.categorySortedAlphabeticalDynamicView.data();\n        return this.db.transactionProcessor.table(Category).chain().data();\n    };\n    Engine.prototype.getTransactionsUnreconciledView = function () {\n        return this.transactionUnreconciledDynamicView;\n    };\n    Engine.prototype.getCategory = function (categoryId) {\n        return this.db.transactionProcessor.table(Category).by('id', categoryId);\n    };\n    Engine.prototype.getAccounts = function () {\n        return this.db.transactionProcessor.table(Account).chain().simplesort('name').data();\n    };\n    Engine.prototype.getRecordById = function (type, id) {\n        return this.db.transactionProcessor.table(type).by('id', id);\n    };\n    return Engine;\n}());\nexport { Engine };\n//# sourceMappingURL=engine.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/engine/engine.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Engine } from './engine';\nimport { Dbms } from '../db/dbms';\nimport { Notifications } from '../services/notifications';\nimport { Configuration } from '../services/configuration-service';\nvar EngineFactory = (function () {\n    function EngineFactory(dbms, notifications, configuration) {\n        // TODO: some kind of \"activate\" listener on Db to process transactions as they go? - Or better to do it afterwards, then incrementally do it ?\n        this.dbms = dbms;\n        this.notifications = notifications;\n        this.configuration = configuration;\n    }\n    EngineFactory.prototype.getEngineById = function (dbId) {\n        return this.getEngine(this.dbms.getDb(dbId));\n    };\n    EngineFactory.prototype.getEngine = function (db) {\n        if (!db.engine) {\n            var engine = new Engine(db, this.notifications, this.configuration);\n            db.engine = engine;\n        }\n        return db.engine;\n    };\n    return EngineFactory;\n}());\nEngineFactory = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _a || Object, typeof (_b = typeof Notifications !== \"undefined\" && Notifications) === \"function\" && _b || Object, typeof (_c = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _c || Object])\n], EngineFactory);\nexport { EngineFactory };\nvar _a, _b, _c;\n//# sourceMappingURL=engine-factory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/engine/engine-factory.ts","var map = {\n\t\"./af\": 182,\n\t\"./af.js\": 182,\n\t\"./ar\": 183,\n\t\"./ar-dz\": 184,\n\t\"./ar-dz.js\": 184,\n\t\"./ar-kw\": 185,\n\t\"./ar-kw.js\": 185,\n\t\"./ar-ly\": 186,\n\t\"./ar-ly.js\": 186,\n\t\"./ar-ma\": 187,\n\t\"./ar-ma.js\": 187,\n\t\"./ar-sa\": 188,\n\t\"./ar-sa.js\": 188,\n\t\"./ar-tn\": 189,\n\t\"./ar-tn.js\": 189,\n\t\"./ar.js\": 183,\n\t\"./az\": 190,\n\t\"./az.js\": 190,\n\t\"./be\": 191,\n\t\"./be.js\": 191,\n\t\"./bg\": 192,\n\t\"./bg.js\": 192,\n\t\"./bn\": 193,\n\t\"./bn.js\": 193,\n\t\"./bo\": 194,\n\t\"./bo.js\": 194,\n\t\"./br\": 195,\n\t\"./br.js\": 195,\n\t\"./bs\": 196,\n\t\"./bs.js\": 196,\n\t\"./ca\": 197,\n\t\"./ca.js\": 197,\n\t\"./cs\": 198,\n\t\"./cs.js\": 198,\n\t\"./cv\": 199,\n\t\"./cv.js\": 199,\n\t\"./cy\": 200,\n\t\"./cy.js\": 200,\n\t\"./da\": 201,\n\t\"./da.js\": 201,\n\t\"./de\": 202,\n\t\"./de-at\": 203,\n\t\"./de-at.js\": 203,\n\t\"./de-ch\": 204,\n\t\"./de-ch.js\": 204,\n\t\"./de.js\": 202,\n\t\"./dv\": 205,\n\t\"./dv.js\": 205,\n\t\"./el\": 206,\n\t\"./el.js\": 206,\n\t\"./en-au\": 207,\n\t\"./en-au.js\": 207,\n\t\"./en-ca\": 208,\n\t\"./en-ca.js\": 208,\n\t\"./en-gb\": 209,\n\t\"./en-gb.js\": 209,\n\t\"./en-ie\": 210,\n\t\"./en-ie.js\": 210,\n\t\"./en-nz\": 211,\n\t\"./en-nz.js\": 211,\n\t\"./eo\": 212,\n\t\"./eo.js\": 212,\n\t\"./es\": 213,\n\t\"./es-do\": 214,\n\t\"./es-do.js\": 214,\n\t\"./es.js\": 213,\n\t\"./et\": 215,\n\t\"./et.js\": 215,\n\t\"./eu\": 216,\n\t\"./eu.js\": 216,\n\t\"./fa\": 217,\n\t\"./fa.js\": 217,\n\t\"./fi\": 218,\n\t\"./fi.js\": 218,\n\t\"./fo\": 219,\n\t\"./fo.js\": 219,\n\t\"./fr\": 220,\n\t\"./fr-ca\": 221,\n\t\"./fr-ca.js\": 221,\n\t\"./fr-ch\": 222,\n\t\"./fr-ch.js\": 222,\n\t\"./fr.js\": 220,\n\t\"./fy\": 223,\n\t\"./fy.js\": 223,\n\t\"./gd\": 224,\n\t\"./gd.js\": 224,\n\t\"./gl\": 225,\n\t\"./gl.js\": 225,\n\t\"./gom-latn\": 226,\n\t\"./gom-latn.js\": 226,\n\t\"./he\": 227,\n\t\"./he.js\": 227,\n\t\"./hi\": 228,\n\t\"./hi.js\": 228,\n\t\"./hr\": 229,\n\t\"./hr.js\": 229,\n\t\"./hu\": 230,\n\t\"./hu.js\": 230,\n\t\"./hy-am\": 231,\n\t\"./hy-am.js\": 231,\n\t\"./id\": 232,\n\t\"./id.js\": 232,\n\t\"./is\": 233,\n\t\"./is.js\": 233,\n\t\"./it\": 234,\n\t\"./it.js\": 234,\n\t\"./ja\": 235,\n\t\"./ja.js\": 235,\n\t\"./jv\": 236,\n\t\"./jv.js\": 236,\n\t\"./ka\": 237,\n\t\"./ka.js\": 237,\n\t\"./kk\": 238,\n\t\"./kk.js\": 238,\n\t\"./km\": 239,\n\t\"./km.js\": 239,\n\t\"./kn\": 240,\n\t\"./kn.js\": 240,\n\t\"./ko\": 241,\n\t\"./ko.js\": 241,\n\t\"./ky\": 242,\n\t\"./ky.js\": 242,\n\t\"./lb\": 243,\n\t\"./lb.js\": 243,\n\t\"./lo\": 244,\n\t\"./lo.js\": 244,\n\t\"./lt\": 245,\n\t\"./lt.js\": 245,\n\t\"./lv\": 246,\n\t\"./lv.js\": 246,\n\t\"./me\": 247,\n\t\"./me.js\": 247,\n\t\"./mi\": 248,\n\t\"./mi.js\": 248,\n\t\"./mk\": 249,\n\t\"./mk.js\": 249,\n\t\"./ml\": 250,\n\t\"./ml.js\": 250,\n\t\"./mr\": 251,\n\t\"./mr.js\": 251,\n\t\"./ms\": 252,\n\t\"./ms-my\": 253,\n\t\"./ms-my.js\": 253,\n\t\"./ms.js\": 252,\n\t\"./my\": 254,\n\t\"./my.js\": 254,\n\t\"./nb\": 255,\n\t\"./nb.js\": 255,\n\t\"./ne\": 256,\n\t\"./ne.js\": 256,\n\t\"./nl\": 257,\n\t\"./nl-be\": 258,\n\t\"./nl-be.js\": 258,\n\t\"./nl.js\": 257,\n\t\"./nn\": 259,\n\t\"./nn.js\": 259,\n\t\"./pa-in\": 260,\n\t\"./pa-in.js\": 260,\n\t\"./pl\": 261,\n\t\"./pl.js\": 261,\n\t\"./pt\": 262,\n\t\"./pt-br\": 263,\n\t\"./pt-br.js\": 263,\n\t\"./pt.js\": 262,\n\t\"./ro\": 264,\n\t\"./ro.js\": 264,\n\t\"./ru\": 265,\n\t\"./ru.js\": 265,\n\t\"./sd\": 266,\n\t\"./sd.js\": 266,\n\t\"./se\": 267,\n\t\"./se.js\": 267,\n\t\"./si\": 268,\n\t\"./si.js\": 268,\n\t\"./sk\": 269,\n\t\"./sk.js\": 269,\n\t\"./sl\": 270,\n\t\"./sl.js\": 270,\n\t\"./sq\": 271,\n\t\"./sq.js\": 271,\n\t\"./sr\": 272,\n\t\"./sr-cyrl\": 273,\n\t\"./sr-cyrl.js\": 273,\n\t\"./sr.js\": 272,\n\t\"./ss\": 274,\n\t\"./ss.js\": 274,\n\t\"./sv\": 275,\n\t\"./sv.js\": 275,\n\t\"./sw\": 276,\n\t\"./sw.js\": 276,\n\t\"./ta\": 277,\n\t\"./ta.js\": 277,\n\t\"./te\": 278,\n\t\"./te.js\": 278,\n\t\"./tet\": 279,\n\t\"./tet.js\": 279,\n\t\"./th\": 280,\n\t\"./th.js\": 280,\n\t\"./tl-ph\": 281,\n\t\"./tl-ph.js\": 281,\n\t\"./tlh\": 282,\n\t\"./tlh.js\": 282,\n\t\"./tr\": 283,\n\t\"./tr.js\": 283,\n\t\"./tzl\": 284,\n\t\"./tzl.js\": 284,\n\t\"./tzm\": 285,\n\t\"./tzm-latn\": 286,\n\t\"./tzm-latn.js\": 286,\n\t\"./tzm.js\": 285,\n\t\"./uk\": 287,\n\t\"./uk.js\": 287,\n\t\"./ur\": 288,\n\t\"./ur.js\": 288,\n\t\"./uz\": 289,\n\t\"./uz-latn\": 290,\n\t\"./uz-latn.js\": 290,\n\t\"./uz.js\": 289,\n\t\"./vi\": 291,\n\t\"./vi.js\": 291,\n\t\"./x-pseudo\": 292,\n\t\"./x-pseudo.js\": 292,\n\t\"./yo\": 293,\n\t\"./yo.js\": 293,\n\t\"./zh-cn\": 294,\n\t\"./zh-cn.js\": 294,\n\t\"./zh-hk\": 295,\n\t\"./zh-hk.js\": 295,\n\t\"./zh-tw\": 296,\n\t\"./zh-tw.js\": 296\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 341;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 341\n// module chunks = 0","import moment from 'moment';\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.nowIonic = function () {\n        return moment().format('YYYY-MM-DD');\n    };\n    Utils.nowYYYYMMDD = function () {\n        return moment().format('YYYYMMDD');\n    };\n    Utils.toYYYYMMDDFromIonic = function (uiValue) {\n        return moment(uiValue.split('T')[0]).format('YYYYMMDD');\n    };\n    Utils.toIonicFromYYYYMMDD = function (modelValue) {\n        return moment(modelValue, 'YYYYMMDD').format('YYYY-MM-DD');\n    };\n    Utils.javaScriptEscape = function (value) {\n        return value.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\").replace(/\"/g, '\\\\\"').replace(/\\r/g, '').replace(/\\n/g, '');\n    };\n    Utils.randomChars = function (length) {\n        var text = \"\";\n        var possible = \"ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789\";\n        for (var i = 0; i < length; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        return text;\n    };\n    Utils.getQueryStringValue = function (key, url) {\n        if (!url)\n            url = window.location.href;\n        key = key.replace(/[\\[\\]]/g, \"\\\\$&\");\n        var regex = new RegExp(\"[?&]\" + key + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\n        if (!results)\n            return null;\n        if (!results[2])\n            return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n    };\n    return Utils;\n}());\nexport { Utils };\nUtils.STANDARD_DATE_FORMAT = 'YYYYMMDD';\n//# sourceMappingURL=utils.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/utils.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Record } from '../../db/record';\nvar Transaction = (function (_super) {\n    __extends(Transaction, _super);\n    function Transaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Transaction.prototype.tableName = function () {\n        return 'Transaction';\n    };\n    Transaction.prototype.initTable = function (table) {\n        table.ensureUniqueIndex('id');\n    };\n    Transaction.prototype.tableCreationOptions = function () {\n        return { 'indices': ['categoryId'] };\n    };\n    return Transaction;\n}(Record));\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/transaction.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Record } from '../../db/record';\nvar Category = (function (_super) {\n    __extends(Category, _super);\n    function Category() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.engine = { 'processors': new Array() };\n        return _this;\n    }\n    Category.prototype.tableName = function () {\n        return 'Category';\n    };\n    Category.prototype.initTable = function (table) {\n        table.ensureUniqueIndex('id');\n    };\n    return Category;\n}(Record));\nexport { Category };\n//# sourceMappingURL=category.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/category.ts","var DbTransaction = (function () {\n    function DbTransaction() {\n        this.x = {};\n        this.typeId = this.getTypeId();\n    }\n    return DbTransaction;\n}());\nexport { DbTransaction };\nvar TransactionStringEnv = (function () {\n    function TransactionStringEnv() {\n    }\n    return TransactionStringEnv;\n}());\nexport { TransactionStringEnv };\n//# sourceMappingURL=transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/transaction.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nimport { Logger } from '../services/logger';\nvar TransactionSerializer = (function () {\n    function TransactionSerializer() {\n        this.logger = Logger.get('TransactionSerializer');\n        this.transactionTypeIdMap = new Map();\n    }\n    TransactionSerializer.prototype.registerType = function (type) {\n        this.transactionTypeIdMap.set(new type().getTypeId(), type);\n        this.logger.info('Registered Transaction Type ' + new type().getTypeId());\n    };\n    TransactionSerializer.prototype.newTransaction = function (typeId, jsonObject) {\n        var transactionType = this.transactionTypeIdMap.get(typeId);\n        if (!transactionType) {\n            this.logger.error({ 'msg': 'No transaction type available for ' + typeId, 'obj': jsonObject });\n        }\n        var t = new transactionType();\n        if (jsonObject) {\n            for (var key in jsonObject) {\n                t[key] = t.deserialize(key, JSON.parse(JSON.stringify(jsonObject[key])));\n            }\n        }\n        return t;\n    };\n    TransactionSerializer.prototype.cloneTransaction = function (transaction) {\n        var recordsTemp = transaction.records;\n        transaction.records = null;\n        var dataCopy = JSON.parse(JSON.stringify(transaction)); // Deep copy this so we aren't accidentally copying any references\n        transaction.records = recordsTemp;\n        delete dataCopy.$loki;\n        delete dataCopy.meta;\n        delete dataCopy.applied;\n        delete dataCopy.records;\n        return this.newTransaction(transaction.typeId, dataCopy);\n    };\n    TransactionSerializer.prototype.toJson = function (transaction) {\n        return JSON.stringify(transaction);\n    };\n    TransactionSerializer.prototype.fromJson = function (jsonString) {\n        var obj = JSON.parse(jsonString);\n        return this.newTransaction(obj.typeId, obj);\n    };\n    return TransactionSerializer;\n}());\nTransactionSerializer = __decorate([\n    Injectable()\n], TransactionSerializer);\nexport { TransactionSerializer };\n//# sourceMappingURL=transaction-serializer.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/transaction-serializer.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Record } from '../../db/record';\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.processors = [];\n        return _this;\n    }\n    Account.prototype.tableName = function () {\n        return 'Account';\n    };\n    Account.prototype.initTable = function (table) {\n        table.ensureUniqueIndex('id');\n    };\n    return Account;\n}(Record));\nexport { Account };\n//# sourceMappingURL=account.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/account.ts","var LocalStoragePersistenceProvider = (function () {\n    function LocalStoragePersistenceProvider(storagePrefix, transactionSerializer) {\n        this.storagePrefix = storagePrefix;\n        this.transactionSerializer = transactionSerializer;\n    }\n    LocalStoragePersistenceProvider.prototype.init = function () {\n        return Promise.resolve();\n    };\n    LocalStoragePersistenceProvider.prototype.dbs = function () {\n        var dbArray = localStorage.getItem(this.storagePrefix + '_dbs');\n        if (!dbArray)\n            return [];\n        return JSON.parse(dbArray);\n    };\n    LocalStoragePersistenceProvider.prototype.addDb = function (dbId) {\n        var dbArray = this.dbs();\n        if (dbArray.indexOf(dbId) === -1) {\n            dbArray.push(dbId);\n            localStorage.setItem(this.storagePrefix + '_dbs', JSON.stringify(dbArray));\n        }\n        return Promise.resolve();\n    };\n    LocalStoragePersistenceProvider.prototype.unlinkDb = function (dbId) {\n        var _this = this;\n        var dbArray = this.dbs();\n        if (dbArray.indexOf(dbId) > -1) {\n            dbArray.splice(dbArray.indexOf(dbId), 1);\n            this.transactionsSync(dbId).forEach(function (transaction) {\n                _this.deleteTransaction(dbId, transaction.id);\n            });\n            localStorage.setItem(this.storagePrefix + '_dbs', JSON.stringify(dbArray));\n        }\n    };\n    LocalStoragePersistenceProvider.prototype.transactionsSync = function (dbId) {\n        var transactions = [];\n        for (var i = 0, len = localStorage.length; i < len; ++i) {\n            if (localStorage.key(i).match(this.storagePrefix + '_' + dbId + '_')) {\n                var transactionString = localStorage.getItem(localStorage.key(i));\n                var transaction = this.transactionSerializer.fromJson(transactionString);\n                transactions.push(transaction);\n            }\n        }\n        return transactions;\n    };\n    LocalStoragePersistenceProvider.prototype.transactions = function (dbId) {\n        return Promise.resolve(this.transactionsSync(dbId));\n    };\n    LocalStoragePersistenceProvider.prototype.saveTransaction = function (dbId, transaction) {\n        localStorage.setItem(this.storagePrefix + '_' + dbId + '_' + transaction.id, this.transactionSerializer.toJson(transaction));\n    };\n    LocalStoragePersistenceProvider.prototype.deleteTransaction = function (dbId, transactionId) {\n        localStorage.removeItem(this.storagePrefix + '_' + dbId + '_' + transactionId);\n    };\n    LocalStoragePersistenceProvider.prototype.getTransaction = function (dbId, transactionId) {\n        var transactionString = localStorage.getItem(this.storagePrefix + '_' + dbId + '_' + transactionId);\n        var transaction = this.transactionSerializer.fromJson(transactionString);\n        return transaction;\n    };\n    LocalStoragePersistenceProvider.prototype.keyStore = function (dbId, key, value) {\n        var localKey = this.storagePrefix + '_keystore_' + dbId + '_' + key;\n        if (typeof value !== 'undefined')\n            localStorage.setItem(localKey, value);\n        return localStorage.getItem(localKey);\n    };\n    return LocalStoragePersistenceProvider;\n}());\nexport { LocalStoragePersistenceProvider };\n//# sourceMappingURL=local-storage-persistence-provider.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/local-storage-persistence-provider.ts","import { Logger } from '../services/logger';\nvar SqlStoragePersistenceProvider = (function () {\n    function SqlStoragePersistenceProvider(storagePrefix, transactionSerializer, sqlite) {\n        this.storagePrefix = storagePrefix;\n        this.transactionSerializer = transactionSerializer;\n        this.sqlite = sqlite;\n        this.logger = Logger.get('SqlStoragePersistenceProvider');\n        this.keyStoreCache = new Map();\n        this.transactionsCache = new Map();\n    }\n    SqlStoragePersistenceProvider.prototype.init = function () {\n        var _this = this;\n        return this.sqlite.create({ name: this.storagePrefix + '_db', location: 'default' }).then(function (db) {\n            _this.sqlStorage = db;\n            return _this.sqlStorage.executeSql('CREATE TABLE IF NOT EXISTS _keystore (dbid TEXT, key TEXT, keyvalue TEXT, PRIMARY KEY (dbid, key))', []);\n        })\n            .then(function () {\n            return _this.sqlStorage.executeSql('SELECT * FROM _keystore', [])\n                .then(function (result) {\n                for (var i = 0; i < result.rows.length; i++) {\n                    var item = result.rows.item(i);\n                    _this.keyStoreCache.set(item.dbid + '_' + item.key, item.keyvalue);\n                }\n            }).then(function () {\n                var dbsValue = _this.keyStore(\"_dbs\", \"dbs\");\n                _this.dbsCache = dbsValue ? JSON.parse(dbsValue) : [];\n                var p = new Array();\n                _this.dbsCache.forEach(function (dbId) {\n                    p.push(_this.createDbTables(dbId));\n                });\n                return Promise.all(p);\n            });\n        });\n    };\n    SqlStoragePersistenceProvider.prototype.dbs = function () {\n        return this.dbsCache;\n    };\n    SqlStoragePersistenceProvider.prototype.createDbTables = function (dbId) {\n        var p = new Array();\n        p.push(this.sqlStorage.executeSql('CREATE TABLE IF NOT EXISTS db_' + this.sanitise(dbId) + '_transaction (id INTEGER PRIMARY KEY, dbtransaction TEXT)', []));\n        return Promise.all(p);\n    };\n    SqlStoragePersistenceProvider.prototype.addDb = function (dbId) {\n        var _this = this;\n        var dbArray = this.dbs();\n        if (dbArray.indexOf(dbId) === -1) {\n            dbArray.push(dbId);\n            return this.createDbTables(dbId).then(function () {\n                _this.keyStore('_dbs', 'dbs', JSON.stringify(dbArray));\n            }).catch(function (err) {\n                _this.logger.error('Error adding db', err);\n            });\n        }\n    };\n    SqlStoragePersistenceProvider.prototype.unlinkDb = function (dbId) {\n        var _this = this;\n        var dbArray = this.dbs();\n        if (dbArray.indexOf(dbId) > -1) {\n            dbArray.splice(dbArray.indexOf(dbId), 1);\n            this.keyStore('_dbs', 'dbs', JSON.stringify(dbArray));\n            this.sqlStorage.executeSql('DROP TABLE IF EXISTS db_' + this.sanitise(dbId) + '_transaction', []).catch(function (err) {\n                _this.logger.error({ 'msg': 'Error dropping database db_' + dbId + '_transaction', 'err': err });\n            });\n            this.sqlStorage.executeSql('DROP TABLE IF EXISTS db_' + this.sanitise(dbId) + '_keystore', []).catch(function (err) {\n                _this.logger.error({ 'msg': 'Error dropping database db_' + dbId + '_keystore', 'err': err });\n            });\n        }\n    };\n    SqlStoragePersistenceProvider.prototype.transactions = function (dbId) {\n        var _this = this;\n        return this.sqlStorage.executeSql('SELECT dbtransaction FROM db_' + this.sanitise(dbId) + '_transaction ORDER BY id', []).then(function (result) {\n            var transactions = [];\n            for (var i = 0; i < result.rows.length; i++) {\n                var transactionString = result.rows.item(i).dbtransaction;\n                var transaction = _this.transactionSerializer.fromJson(transactionString);\n                transactions.push(transaction);\n                _this.transactionsCache.set(_this.sanitise(dbId) + '_' + transaction.id, transactionString);\n            }\n            return transactions;\n        }).catch(function (err) {\n            _this.logger.error('Error getting db transactions', err);\n        });\n    };\n    SqlStoragePersistenceProvider.prototype.saveTransaction = function (dbId, transaction) {\n        var _this = this;\n        var transactionString = this.transactionSerializer.toJson(transaction);\n        this.sqlStorage.executeSql('INSERT OR REPLACE INTO db_' + this.sanitise(dbId) + '_transaction (id, dbtransaction) VALUES (?, ?)', [transaction.id, transactionString])\n            .catch(function (err) {\n            _this.logger.error('Error inserting/replacing transaction in database db_' + dbId + '_transaction for id ' + transaction.id, err);\n            // TODO: Application halt ?\n        });\n        this.transactionsCache.set(this.sanitise(dbId) + '_' + transaction.id, transactionString);\n    };\n    SqlStoragePersistenceProvider.prototype.deleteTransaction = function (dbId, transactionId) {\n        var _this = this;\n        this.sqlStorage.executeSql('DELETE FROM db_' + this.sanitise(dbId) + '_transaction WHERE id = ?', [transactionId])\n            .catch(function (err) {\n            _this.logger.error('Error deleting transaction in table db_' + dbId + '_transaction for id ' + transactionId, err);\n            // TODO: Application halt ?\n        });\n        this.transactionsCache.delete(this.sanitise(dbId) + '_' + transactionId);\n    };\n    SqlStoragePersistenceProvider.prototype.getTransaction = function (dbId, transactionId) {\n        var transactionString = this.transactionsCache.get(this.sanitise(dbId) + '_' + transactionId);\n        var transaction = this.transactionSerializer.fromJson(transactionString);\n        return transaction;\n    };\n    SqlStoragePersistenceProvider.prototype.keyStore = function (dbId, key, value) {\n        var _this = this;\n        var localKey = dbId + '_' + key;\n        if (typeof value !== 'undefined') {\n            this.keyStoreCache.set(localKey, value);\n            this.sqlStorage.executeSql('INSERT OR REPLACE INTO _keystore (dbid, key, keyvalue) VALUES (?, ?, ?)', [dbId, key, value])\n                .catch(function (err) {\n                _this.logger.error('Error inserting/replacing in table _keystore for dbid/key/value ' + dbId + '/' + key + '/' + value, err);\n                // TODO: Application halt ? - need to at least stop them doing more - warning - fatal error has occured....\n            });\n        }\n        return this.keyStoreCache.get(localKey);\n    };\n    SqlStoragePersistenceProvider.prototype.sanitise = function (dbId) {\n        return dbId.split('-').join('');\n    };\n    return SqlStoragePersistenceProvider;\n}());\nexport { SqlStoragePersistenceProvider };\n//# sourceMappingURL=sql-storage-persistence-provider.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/sql-storage-persistence-provider.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { LocalStoragePersistenceProvider } from './local-storage-persistence-provider';\nimport { TransactionSerializer } from './transaction-serializer';\nimport { SqlStoragePersistenceProvider } from './sql-storage-persistence-provider';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { Platform } from 'ionic-angular';\nimport { Device } from '@ionic-native/device';\nimport { Utils } from \"../services/utils\";\nimport { NoPersistenceProvider } from \"./no-persistence-provider\";\nvar PersistenceProviderManager = (function () {\n    function PersistenceProviderManager(transactionSerializer, platform, device, sqlite) {\n        this.transactionSerializer = transactionSerializer;\n        this.platform = platform;\n        this.device = device;\n        this.sqlite = sqlite;\n    }\n    PersistenceProviderManager.prototype.provide = function () {\n        if (this.persistenceProvider == null) {\n            if (Utils.getQueryStringValue('demo')) {\n                this.persistenceProvider = new NoPersistenceProvider(this.transactionSerializer);\n            }\n            else if (this.platform.is('cordova') && this.device.platform !== 'browser') {\n                this.persistenceProvider = new SqlStoragePersistenceProvider('A', this.transactionSerializer, this.sqlite);\n            }\n            else {\n                this.persistenceProvider = new LocalStoragePersistenceProvider('A', this.transactionSerializer);\n            }\n        }\n        return this.persistenceProvider;\n    };\n    return PersistenceProviderManager;\n}());\nPersistenceProviderManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof TransactionSerializer !== \"undefined\" && TransactionSerializer) === \"function\" && _a || Object, typeof (_b = typeof Platform !== \"undefined\" && Platform) === \"function\" && _b || Object, typeof (_c = typeof Device !== \"undefined\" && Device) === \"function\" && _c || Object, typeof (_d = typeof SQLite !== \"undefined\" && SQLite) === \"function\" && _d || Object])\n], PersistenceProviderManager);\nexport { PersistenceProviderManager };\nvar _a, _b, _c, _d;\n//# sourceMappingURL=persistence-provider-manager.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/persistence-provider-manager.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Device } from '@ionic-native/device';\nimport { Platform } from 'ionic-angular';\nimport { Injectable } from '@angular/core';\nimport { PersistenceProviderManager } from '../db/persistence-provider-manager';\nimport { Logger } from './logger';\nimport { SecureStorage } from '@ionic-native/secure-storage';\nvar Configuration = (function () {\n    function Configuration(persistenceProviderManager, platform, device, secureStorage) {\n        this.persistenceProviderManager = persistenceProviderManager;\n        this.platform = platform;\n        this.device = device;\n        this.secureStorage = secureStorage;\n        this.logger = Logger.get('Configuration');\n        this.configured = false;\n        this.cId = 'conf';\n        this.temporary = {};\n        this.booleanValueAccessor = (function () {\n            function class_1(option, configuration) {\n                this.option = option;\n                this.configuration = configuration;\n            }\n            Object.defineProperty(class_1.prototype, \"value\", {\n                get: function () {\n                    return this.configuration.persistence.keyStore(this.configuration.cId, this.option) === 'true';\n                },\n                set: function (value) {\n                    this.configuration.persistence.keyStore(this.configuration.cId, this.option, value === undefined ? undefined : value ? 'true' : 'false');\n                },\n                enumerable: true,\n                configurable: true\n            });\n            return class_1;\n        }());\n    }\n    Configuration.prototype.option = function (option, value) {\n        return this.persistence.keyStore(this.cId, option, value);\n    };\n    Configuration.prototype.optionBoolean = function (option, value) {\n        return this.persistence.keyStore(this.cId, option, value === undefined ? undefined : value ? 'true' : 'false') === 'true';\n    };\n    Configuration.prototype.optionBooleanAccessor = function (option) {\n        return new this.booleanValueAccessor(option, this);\n    };\n    Object.defineProperty(Configuration.prototype, \"loglevel\", {\n        get: function () {\n            return this.persistence.keyStore(this.cId, 'loglevel');\n        },\n        set: function (value) {\n            this.persistence.keyStore(this.cId, 'loglevel', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Configuration.prototype.removeSecure = function (key) {\n        var _this = this;\n        var originalValue = this.secureCache[key];\n        delete this.secureCache[key];\n        return !this.native || (this.optionBoolean('testing.secure-storage.enabled') && !this.secure) ? Promise.resolve(originalValue) : this.secure.remove(key).catch(function (reason) {\n            _this.logger.info(\"Unable to update secure storage\", reason);\n            _this.secureCache[key] = originalValue;\n            throw reason;\n        });\n    };\n    Configuration.prototype.setSecure = function (key, value) {\n        var _this = this;\n        if (value === undefined) {\n            return this.removeSecure(key);\n        }\n        var originalValue = this.secureCache[key];\n        this.secureCache[key] = value;\n        return !this.native || (this.optionBoolean('testing.secure-storage.enabled') && !this.secure) ? Promise.resolve(originalValue) : this.secure.set('secure', JSON.stringify(this.secureCache)).catch(function (reason) {\n            _this.logger.info(\"Unable to update secure storage\", reason);\n            _this.secureCache[key] = originalValue;\n            throw reason;\n        });\n    };\n    Configuration.prototype.getSecure = function (key) {\n        return this.secureCache[key];\n    };\n    Configuration.prototype.secureAvailable = function () {\n        return this.secureCache != null;\n    };\n    Configuration.prototype.configure = function () {\n        // Note: This has already been initialised....\n        var _this = this;\n        this.persistence = this.persistenceProviderManager.provide();\n        this.initLogLevel();\n        if (this.platform.is('cordova')) {\n            this.logger.info('Running cordova');\n            this.native = true;\n            this.logger.info('Device Info');\n            this.logger.info(\"name: \" + Device.name);\n        }\n        if (!this.platform.is('cordova')) {\n            this.logger.info('Running web browser');\n            this.native = false;\n        }\n        // Device and install Ids\n        if (!this.persistence.keyStore(this.cId, 'installationId'))\n            this.persistence.keyStore(this.cId, 'installationId', 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) { var r = Math.random() * 16 | 0, v = c === 'x' ? r : r & 0x3 | 0x8; return v.toString(16); }));\n        this.installationId = this.persistence.keyStore(this.cId, 'installationId');\n        this.logger.info('Installation Id: ' + this.installationId);\n        this.deviceId = this.device.uuid ? this.device.uuid.toLowerCase() : this.installationId;\n        this.logger.info(\"Device id: \" + this.deviceId);\n        this.deviceName = !this.native ? 'Web Browser' : this.device.model || 'Mobile Device';\n        if (this.deviceName.length <= 3)\n            this.deviceName = this.deviceName + \"___\";\n        this.logger.info(\"Device name: \" + this.deviceName);\n        if (!this.persistence.keyStore(this.cId, 'deviceId'))\n            this.persistence.keyStore(this.cId, 'deviceId', this.deviceId);\n        // Unique to this device and installation\n        this.deviceInstallationId = this.deviceId + '-' + this.installationId;\n        this.configured = true;\n        return this.secureStorage.create('eBudget').then(function (secureStorageObject) {\n            _this.secure = secureStorageObject;\n            if (!_this.native) {\n                throw new Error(\"Browser has no implementation of secure storage\");\n            }\n            return _this.secure.keys();\n        }).then(function (keys) {\n            if (keys.indexOf('secure') >= 0)\n                return _this.secure.get('secure');\n            else\n                return '{}';\n        }).then(function (secureObjectString) {\n            _this.secureCache = JSON.parse(secureObjectString);\n            _this.logger.info(\"Secure storage initialised\");\n        }).catch(function (reason) {\n            _this.logger.info(\"Secure storage unable to be initialised\", reason);\n            if (_this.optionBoolean('testing.secure-storage.enabled'))\n                _this.secureCache = {};\n        });\n    };\n    Configuration.prototype.initLogLevel = function () {\n        if (this.loglevel === 'Debug') {\n            Logger.root.config.level = Logger.DEBUG;\n        }\n        else {\n            Logger.root.config.level = Logger.INFO;\n        }\n    };\n    Configuration.prototype.lastOpenedBudget = function (budgetId) {\n        if (!this.configured)\n            return null;\n        return this.persistence.keyStore(this.cId, 'autoOpenBudgetId', budgetId);\n    };\n    return Configuration;\n}());\nConfiguration = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof PersistenceProviderManager !== \"undefined\" && PersistenceProviderManager) === \"function\" && _a || Object, typeof (_b = typeof Platform !== \"undefined\" && Platform) === \"function\" && _b || Object, typeof (_c = typeof Device !== \"undefined\" && Device) === \"function\" && _c || Object, typeof (_d = typeof SecureStorage !== \"undefined\" && SecureStorage) === \"function\" && _d || Object])\n], Configuration);\nexport { Configuration };\nvar _a, _b, _c, _d;\n//# sourceMappingURL=configuration-service.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/configuration-service.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, NavParams, ModalController } from 'ionic-angular';\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { Dbms } from '../../db/dbms';\nimport { CategoryPage } from '../../pages/category/category';\nimport { Budget } from '../../data/records/budget';\nimport { AddEditCategoryModal } from '../../modals/add-edit-category/add-edit-category';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { Configuration } from '../../services/configuration-service';\nimport { InitCategorySimpleWeeklyTransaction } from '../../data/transactions/init-category-simple-weekly-transaction';\nimport { Logger } from '../../services/logger';\nvar BudgetPage = (function () {\n    function BudgetPage(changeDetectorRef, nav, dbms, params, engineFactory, modalController, configuration) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.nav = nav;\n        this.dbms = dbms;\n        this.params = params;\n        this.engineFactory = engineFactory;\n        this.modalController = modalController;\n        this.configuration = configuration;\n        this.logger = Logger.get('BudgetPage');\n        this.nav = nav;\n        this.dbms = dbms;\n        this.budget = this.params.data.budget ? this.params.data.budget : dbms.getDb(this.params.data.budgetId);\n        this.engine = engineFactory.getEngine(this.budget);\n        this.activated = false;\n        this.logger.debug(\"Calling activate budget\");\n    }\n    BudgetPage.prototype.addCategory = function () {\n        var modal = this.modalController.create(AddEditCategoryModal, { budgetId: this.budget.id });\n        modal.present();\n    };\n    BudgetPage.prototype.openCategory = function (category) {\n        this.nav.push(CategoryPage, { 'budget': this.budget, 'categoryId': category.id });\n    };\n    BudgetPage.prototype.categoryWeeklyAmount = function (category) {\n        // TODO get cache it in the category record and get it straight from there\n        var t = this.budget.transactionProcessor.findTransactionsForRecord(category, InitCategorySimpleWeeklyTransaction)[0];\n        if (t)\n            return t.weeklyAmount;\n    };\n    BudgetPage.prototype.ionViewDidLeave = function () {\n        // TODO: CHeck this is called appropriately (ie. on a different setRoot(), but not on navigating to a child page)\n        // this.budget.deactivate();\n    };\n    BudgetPage.prototype.ionViewDidEnter = function () {\n        var _this = this;\n        this.configuration.lastOpenedBudget(this.budget.id);\n        this.budget.activate(this.activateProgressCallback.bind(this)).then(function () {\n            _this.logger.debug(\"Activate Budget Resolved\");\n            _this.budgetRecord = _this.budget.transactionProcessor.single(Budget);\n            _this.activated = true;\n        });\n    };\n    BudgetPage.prototype.activateProgressCallback = function (value, of) {\n        this.activatedProgress = value;\n        this.activatedOf = of;\n    };\n    return BudgetPage;\n}());\nBudgetPage = __decorate([\n    Component({\n        templateUrl: 'budget.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ChangeDetectorRef !== \"undefined\" && ChangeDetectorRef) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof Dbms !== \"undefined\" && Dbms) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _e || Object, typeof (_f = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _f || Object, typeof (_g = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _g || Object])\n], BudgetPage);\nexport { BudgetPage };\nvar _a, _b, _c, _d, _e, _f, _g;\n//# sourceMappingURL=budget.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/budget/budget.ts","var Record = (function () {\n    function Record() {\n        /**\n         * Place to store cached values for external processors, purely for performance and ease of lookup.\n         * This data could be found elsewhere (directly or by calculation) and shouldn't be used within the records or transactions themselves.\n         */\n        this.x = {};\n    }\n    Record.prototype.tableCreationOptions = function () { };\n    ;\n    return Record;\n}());\nexport { Record };\n//# sourceMappingURL=record.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/record.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { ModalController } from 'ionic-angular';\nimport { Logger } from './logger';\nvar EditorProvider = (function () {\n    function EditorProvider(modalController) {\n        this.modalController = modalController;\n        this.logger = Logger.get('EditorProvider');\n        this.modalProviders = [];\n    }\n    EditorProvider.prototype.registerModalProvider = function (provider) {\n        this.modalProviders.unshift(provider);\n    };\n    EditorProvider.prototype.getModal = function (params, data) {\n        for (var i = 0; i < this.modalProviders.length; i++) {\n            var modalClass = this.modalProviders[i].provide(params);\n            if (modalClass)\n                return this.modalController.create(modalClass, data);\n        }\n        this.logger.error({ msg: 'No modal provider found', params: params });\n        throw new Error('No modal provider for ' + params);\n    };\n    return EditorProvider;\n}());\nEditorProvider = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _a || Object])\n], EditorProvider);\nexport { EditorProvider };\nvar ModalProvider = (function () {\n    function ModalProvider() {\n    }\n    return ModalProvider;\n}());\nexport { ModalProvider };\nvar _a;\n//# sourceMappingURL=editor-provider.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/editor-provider.ts","var TransactionProcessor = (function () {\n    function TransactionProcessor(db, loki) {\n        this.loki = loki;\n        this.db = db;\n    }\n    TransactionProcessor.prototype.tableByName = function (tableName, type) {\n        var collection = this.loki.getCollection(tableName + '_' + this.db.id);\n        if (collection == null) {\n            collection = this.loki.addCollection(tableName + '_' + this.db.id, new type().tableCreationOptions);\n            new type().initTable(collection);\n        }\n        return collection;\n    };\n    TransactionProcessor.prototype.table = function (type) {\n        return this.tableByName(new type().tableName(), type);\n    };\n    TransactionProcessor.prototype.single = function (type) {\n        var table = this.tableByName(new type().tableName(), type);\n        if (!table.data.length) {\n            table.insert(new type());\n        }\n        return table.data[0];\n    };\n    TransactionProcessor.prototype.unmapTransactionAndRecord = function (transaction, record) {\n        if (transaction.records && transaction.records.indexOf(record) != -1)\n            transaction.records.splice(transaction.records.indexOf(record), 1);\n        if (record.transactions && record.transactions.indexOf(transaction) != -1)\n            record.transactions.splice(record.transactions.indexOf(transaction), 1);\n    };\n    TransactionProcessor.prototype.mapTransactionAndRecord = function (transaction, record) {\n        if (!transaction.records)\n            transaction.records = new Array();\n        if (transaction.records.indexOf(record) == -1)\n            transaction.records.push(record);\n        if (!record.transactions)\n            record.transactions = new Array();\n        if (record.transactions.indexOf(transaction) == -1)\n            record.transactions.push(transaction);\n    };\n    TransactionProcessor.prototype.findAllTransactionsForRecord = function (record) {\n        return record.transactions;\n    };\n    TransactionProcessor.prototype.findTransactionsForRecord = function (record, type) {\n        var typeId = new type().getTypeId();\n        return record.transactions.filter(function (t) { return t.getTypeId() === typeId; });\n    };\n    TransactionProcessor.prototype.findAllRecordsForTransaction = function (transaction) {\n        return transaction.records;\n    };\n    TransactionProcessor.prototype.findRecordsForTransaction = function (transaction, type) {\n        return transaction.records.filter(function (r) { return r instanceof type; });\n    };\n    TransactionProcessor.prototype.unsupported = function () {\n        throw new Error('Unsupported Transaction Operation');\n    };\n    return TransactionProcessor;\n}());\nexport { TransactionProcessor };\n//# sourceMappingURL=transaction-processor.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/transaction-processor.ts","var ChunkedTask = (function () {\n    function ChunkedTask() {\n    }\n    ChunkedTask.execute = function (executor, iteratorData) {\n        var p = new Promise(function (promiseResolve, promiseReject) {\n            var iterator = new ChunkedTaskIterator();\n            iterator.setValue(0);\n            if (iteratorData) {\n                iterator.progressCallback = iteratorData.progressCallback;\n            }\n            var func = function () { return executor(iterator, function (value) {\n                iterator.end();\n                promiseResolve(value);\n            }, function (reason) {\n                iterator.end();\n                promiseReject(reason);\n            }); };\n            iterator.setIterateFunction(func);\n            iterator.start();\n        });\n        return p;\n    };\n    return ChunkedTask;\n}());\nexport { ChunkedTask };\nvar ChunkedTaskIterator = (function () {\n    function ChunkedTaskIterator() {\n        this.breaktime = this.useRequestAnimationFrame() ? 30 : 60;\n        // TODO: Iteration time, iteration count, counter, progress\n    }\n    ChunkedTaskIterator.prototype.useRequestAnimationFrame = function () {\n        return \"requestAnimationFrame\" in window;\n    };\n    ChunkedTaskIterator.prototype.end = function () {\n        this.ended = true;\n    };\n    ChunkedTaskIterator.prototype.setValue = function (value) {\n        this.value = value;\n    };\n    ChunkedTaskIterator.prototype.getValue = function () {\n        return this.value;\n    };\n    ChunkedTaskIterator.prototype.setIterateFunction = function (func) {\n        this.func = func;\n    };\n    ChunkedTaskIterator.prototype.iterateWithValue = function (value) {\n        this.setValue(value);\n        this.iterate();\n    };\n    ChunkedTaskIterator.prototype.start = function () {\n        this.execute();\n    };\n    ChunkedTaskIterator.prototype.iterate = function () {\n        var _this = this;\n        if (!this.needsBreak()) {\n            this.execute();\n        }\n        if (\"hidden\" in document && document.hidden) {\n            this.execute();\n            if (this.progressCallback)\n                this.progressCallback(this.value, this.expectedSize);\n        }\n        else if (this.useRequestAnimationFrame()) {\n            window.requestAnimationFrame(function () {\n                _this.execute();\n                if (_this.progressCallback)\n                    _this.progressCallback(_this.value, _this.expectedSize);\n            });\n        }\n        else {\n            setTimeout(function () {\n                _this.execute();\n                if (_this.progressCallback)\n                    _this.progressCallback(_this.value, _this.expectedSize);\n            }, 4);\n        }\n    };\n    ChunkedTaskIterator.prototype.setExpectedSize = function (value) {\n        this.expectedSize = value;\n    };\n    ChunkedTaskIterator.prototype.execute = function () {\n        this.iterationStartTime = Date.now();\n        while (!this.needsBreak() && !this.ended) {\n            // TODO: counters\n            this.func();\n            this.value++;\n        }\n        if (!this.ended) {\n            this.iterate();\n        }\n    };\n    ChunkedTaskIterator.prototype.needsBreak = function () {\n        return Date.now() - this.iterationStartTime > this.breaktime;\n    };\n    return ChunkedTaskIterator;\n}());\nvar ChunkedTaskTest = (function () {\n    function ChunkedTaskTest() {\n    }\n    ChunkedTaskTest.prototype.test1 = function () {\n        ChunkedTask.execute(function (iterator, resolve, reject) {\n            var count = 0;\n            for (var i = iterator.getValue(); i < 10000000; i++) {\n                if (count++ % 1000 === 0)\n                    return iterator.iterateWithValue(i);\n            }\n            resolve();\n        });\n    };\n    ChunkedTaskTest.prototype.test2 = function () {\n        ChunkedTask.execute(function (iterator, resolve, reject) {\n            var i = iterator.getValue();\n            if (i > 1000)\n                resolve();\n        });\n    };\n    return ChunkedTaskTest;\n}());\nexport { ChunkedTaskTest };\n//# sourceMappingURL=chunked-task.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/services/chunked-task.ts","import { TransactionProcessor } from './transaction-processor';\nimport { Logger } from '../services/logger';\nimport { ChunkedTask } from '../services/chunked-task';\nvar Db = (function () {\n    function Db(id, dbms, persistenceProvider, loki, transactionSerializer) {\n        this.id = id;\n        this.dbms = dbms;\n        this.persistenceProvider = persistenceProvider;\n        this.loki = loki;\n        this.transactionSerializer = transactionSerializer;\n        this.logger = Logger.get('Db');\n        this.active = false;\n        this.initialised = false;\n        this.transactionProcessor = new TransactionProcessor(this, this.loki);\n        this.transactions = this.loki.addCollection('transactions_' + this.id);\n        this.transactions.ensureUniqueIndex('id');\n        this.eventListeners = [];\n    }\n    Db.prototype.toJSON = function () {\n        return this.id;\n    };\n    Db.prototype.init = function () {\n        var _this = this;\n        return this.persistenceProvider.transactions(this.id).then(function (dbtransactions) {\n            dbtransactions.forEach(function (transaction) {\n                _this.transactions.insert(transaction);\n            });\n            _this.sortedTransactions = _this.transactions.addDynamicView('sortedTransactions_' + _this.id);\n            _this.sortedTransactions.applySimpleSort('id');\n            _this.initialised = true;\n        });\n    };\n    Db.prototype.isActive = function () {\n        return this.active;\n    };\n    Db.prototype.isBatchProcessing = function () {\n        return this.batchProcessing;\n    };\n    Db.prototype.activate = function (progressCallback) {\n        var _this = this;\n        // If already active, then skip and return straight away\n        if (this.active)\n            return Promise.resolve();\n        this.logger.info(\"Activating Budget \" + this.name());\n        if (!this.initialised)\n            throw new Error('Activate called when not yet initialised.');\n        if (this.activating) {\n            this.logger.info(\"Budget Already Activating \" + this.name());\n            return Promise.resolve();\n        }\n        this.activating = true;\n        this.batchProcessing = true;\n        this.fireEvent({ eventName: 'transaction-batch-start' });\n        var p = ChunkedTask.execute(function (iterator, resolve, reject) {\n            // Can update this to just pass in the array... Put it in the initialiser...\n            // Or: Can move the: \"Size\" to a property and just have a single statement here...\n            if (iterator.getValue() === 0) {\n                // To handle when the array is empty\n                if (_this.sortedTransactions.data().length == 0) {\n                    resolve();\n                    return;\n                }\n                iterator.setExpectedSize(_this.sortedTransactions.data().length);\n            }\n            _this.applyTransaction(_this.sortedTransactions.data()[iterator.getValue()]);\n            if (iterator.getValue() == _this.sortedTransactions.data().length - 1)\n                resolve();\n        }, { progressCallback: progressCallback }).then(function () {\n            _this.activating = false;\n            _this.active = true;\n            _this.logger.info(\"Activated Budget \" + _this.name());\n            _this.fireEvent({ eventName: 'db-activated' });\n            _this.batchProcessing = false;\n            _this.fireEvent({ eventName: 'transaction-batch-end' });\n        }).catch(function (reason) {\n            _this.activating = false;\n            _this.active = false;\n            _this.batchProcessing = false;\n            _this.logger.error(\"Error activating db\", reason);\n        });\n        return p;\n    };\n    Db.prototype.isActivating = function () {\n        return this.activating;\n    };\n    Db.prototype.deactivate = function () {\n        if (!this.active)\n            return;\n        // TODO: Delete tables (not transactions, but generated tables)\n        this.active = false;\n    };\n    Db.prototype.name = function (name) {\n        return this.localSetting('name', name);\n    };\n    Db.prototype.transactionIdLocalGen = function (localGenId) {\n        var id = this.localSetting('localGenId', localGenId);\n        if (!id)\n            return 1;\n        if (parseInt(id) < 1 || parseInt(id) > 999)\n            throw new Error('localGenId must be between 1 - 999 inclusive. Value is: ' + localGenId);\n        return parseInt(id);\n    };\n    Db.prototype.localSetting = function (key, valueString) {\n        return this.persistenceProvider.keyStore(this.id, key, valueString);\n    };\n    // Returns the next transaction Id above the head transaction (So does not increment, incrementing occurs on processing)\n    Db.prototype.nextTransactionId = function () {\n        return ~~((~~((this.transactionIdHead ? this.transactionIdHead : 0) / 1000) + 1) * 1000) + this.transactionIdLocalGen();\n    };\n    Db.prototype.extractTransactionLocalGenId = function (transactionId) {\n        return transactionId % 1000;\n    };\n    Db.prototype.updateTransactionIdHead = function (transaction) {\n        if (!this.transactionIdHead || transaction.id > this.transactionIdHead)\n            this.transactionIdHead = transaction.id;\n    };\n    /**\n     * Applying a transaction will execute it and persist it in the database.\n     *\n     * The transaction must be a new one, or attached to a database, not a clone\n     */\n    Db.prototype.applyTransaction = function (transaction) {\n        try {\n            // Updated works like the following:-\n            // If active, then it is updated if a transaction is already applied\n            // If inactive, then it is updated if a transaction is already in the database\n            // In both cases, the previous version is fetched from the database, to be passed to the event\n            // In the already active case, the previous version is also passed to the transaction update (although it could also collect info from the \"records\")\n            var updated = false;\n            var updatedOriginalTransaction = void 0;\n            if (transaction.id)\n                this.updateTransactionIdHead(transaction);\n            // Ignore deleted transactions\n            if (transaction.deleted) {\n                if (!transaction.id) {\n                    // Ignore this, it's been deleted and never persisted...\n                    return;\n                }\n                else if (!transaction.applied) {\n                    // If it's not applied and it's deleted, that is the final state we want for the transaction, so lets leave it here...\n                    // Save the transaction still unless we are activating\n                    if (!this.activating)\n                        this.deleteTransaction(transaction);\n                    return;\n                }\n                else {\n                    // It's deleted AND applied, so we need to processes the deletion\n                    this.deleteTransaction(transaction);\n                    // Transaction applied is called in delete...\n                    return;\n                }\n            }\n            else {\n                // Give a new transaction an Id\n                if (!transaction.id) {\n                    transaction.id = this.nextTransactionId();\n                    this.updateTransactionIdHead(transaction);\n                }\n                // Process transactions\n                if (this.active || this.activating) {\n                    if (!transaction.applied) {\n                        transaction.apply(this.transactionProcessor);\n                        transaction.applied = true;\n                    }\n                    else {\n                        updated = true;\n                        updatedOriginalTransaction = this.persistenceProvider.getTransaction(this.id, transaction.id);\n                        transaction.update(this.transactionProcessor, updatedOriginalTransaction);\n                    }\n                }\n                if (!this.activating) {\n                    updated = updated || (!this.active && transaction.$loki != null);\n                    if (updated && !updatedOriginalTransaction)\n                        updatedOriginalTransaction = this.persistenceProvider.getTransaction(this.id, transaction.id);\n                    this.saveTransaction(transaction);\n                }\n            }\n            this.fireEvent({ eventName: 'transaction-applied', data: { transaction: transaction, update: updated, originalTransaction: updatedOriginalTransaction } });\n        }\n        catch (err) {\n            this.logger.info(\"Error applying transaction. Throwing Error.\", transaction, err);\n            throw err;\n        }\n    };\n    Db.prototype.getTransaction = function (transactionId) {\n        return this.transactions.by('id', transactionId);\n    };\n    /**\n     * Saving a transaction will persist it, but not apply it\n     * This should only be called internally, or if extra transaction\n     * data is needing to be saved without any modifications to the transaction itself\n     *\n     * The transaction must be a new one, or attached to a database, not a clone\n     */\n    Db.prototype.saveTransaction = function (transaction) {\n        // Determine which one... it doesn't matter\n        if (this.getTransaction(transaction.id) == null) {\n            this.transactions.insert(transaction);\n        }\n        else {\n            this.transactions.update(transaction);\n        }\n        this.persistenceProvider.saveTransaction(this.id, this.transactionSerializer.cloneTransaction(transaction));\n    };\n    /**\n     * Undo a transaction and remove it from the database\n     */\n    Db.prototype.deleteTransaction = function (transaction) {\n        transaction.deleted = true;\n        if (this.getTransaction(transaction.id) == null) {\n            this.transactions.insert(transaction);\n        }\n        else {\n            this.transactions.update(transaction);\n        }\n        this.persistenceProvider.saveTransaction(this.id, this.transactionSerializer.cloneTransaction(transaction));\n        this.undoTransaction(transaction);\n    };\n    Db.prototype.undoTransaction = function (transaction) {\n        if (!transaction.applied)\n            return;\n        transaction.undo(this.transactionProcessor);\n        transaction.applied = false;\n        this.fireEvent({ eventName: 'transaction-undone', data: { transaction: transaction } });\n    };\n    Db.prototype.addEventListener = function (listener) {\n        this.eventListeners.push(listener);\n    };\n    Db.prototype.deleteInternal = function () {\n        this.fireEvent({ eventName: 'db-deleted' });\n        this.eventListeners.length = 0;\n    };\n    Db.prototype.fireEvent = function (dbEvent) {\n        if (!dbEvent.db)\n            dbEvent.db = this;\n        this.logger.debug(function () { return dbEvent; });\n        this.eventListeners.forEach(function (listener) { listener(dbEvent); });\n    };\n    return Db;\n}());\nexport { Db };\n//# sourceMappingURL=db.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/db.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Db } from './db';\nimport { PersistenceProviderManager } from './persistence-provider-manager';\nimport Loki from 'lokijs';\nimport { TransactionSerializer } from './transaction-serializer';\nimport { Utils } from \"../services/utils\";\nvar Dbms = (function () {\n    function Dbms(transactionSerializer, persistenceProviderManager) {\n        this.transactionSerializer = transactionSerializer;\n        this.persistenceProvider = persistenceProviderManager.provide();\n        this.dbs = [];\n        this.dbMap = new Map();\n    }\n    Dbms.prototype.init = function () {\n        var _this = this;\n        this.initialising = true;\n        this.dbs.length = 0;\n        this.dbMap.clear();\n        this.loki = new Loki(null);\n        this.loki.autosaveDisable();\n        var inits = new Array();\n        this.persistenceProvider.dbs().forEach(function (dbId) {\n            inits.push(_this.createDb(dbId));\n        });\n        // this.fireEvent(\"initialised\", true);\n        return Promise.all(inits).then(function () { _this.initialising = false; });\n    };\n    Dbms.prototype.getDb = function (id) {\n        return this.dbMap.get(id);\n    };\n    Dbms.prototype.createDb = function (id) {\n        if (!id)\n            id = Utils.randomChars(20);\n        var db = new Db(id, this, this.persistenceProvider, this.loki, this.transactionSerializer);\n        this.dbs.push(db);\n        this.dbMap.set(id, db);\n        if (!this.initialising) {\n            return this.persistenceProvider.addDb(id).then(function () {\n                return db.init().then(function () { return db; });\n            });\n        }\n        else {\n            return db.init().then(function () { return db; });\n        }\n    };\n    Dbms.prototype.deleteDb = function (id) {\n        var db = this.getDb(id);\n        this.dbs.splice(this.dbs.indexOf(db), 1);\n        this.dbMap.delete(id);\n        db.deleteInternal();\n        this.persistenceProvider.unlinkDb(id);\n    };\n    return Dbms;\n}());\nDbms = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof TransactionSerializer !== \"undefined\" && TransactionSerializer) === \"function\" && _a || Object, typeof (_b = typeof PersistenceProviderManager !== \"undefined\" && PersistenceProviderManager) === \"function\" && _b || Object])\n], Dbms);\nexport { Dbms };\nvar _a, _b;\n//# sourceMappingURL=dbms.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/db/dbms.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { NavController, ViewController, NavParams, AlertController, ModalController } from 'ionic-angular';\nimport { Category } from '../../data/records/category';\nimport { Transaction } from '../../data/records/transaction';\nimport { EngineFactory } from '../../engine/engine-factory';\nimport { CreateSplitTransaction } from '../../data/transactions/create-split-transaction';\nimport { Configuration } from '../../services/configuration-service';\nimport { Component } from '@angular/core';\nimport { Utils } from '../../services/utils';\nimport Big from 'big.js';\nimport { AddEditSplitTransactionLineModal } from './add-edit-split-transaction-line';\nvar AddEditSplitTransactionModal = (function () {\n    function AddEditSplitTransactionModal(configuration, modalController, viewCtrl, navParams, engineFactory, nav, alertController) {\n        var _this = this;\n        this.configuration = configuration;\n        this.modalController = modalController;\n        this.viewCtrl = viewCtrl;\n        this.navParams = navParams;\n        this.engineFactory = engineFactory;\n        this.nav = nav;\n        this.alertController = alertController;\n        this.engine = engineFactory.getEngineById(navParams.data.budgetId);\n        if (navParams.data.categoryId != null) {\n            this.engine.getCategory(navParams.data.categoryId);\n            this.category = this.engine.db.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\n        }\n        // TODO: Validation that amounts must be equal\n        this.data = {};\n        this.data.lines = [];\n        if (navParams.data.transactionId) {\n            this.editing = true;\n            var transactionRecord = this.engine.db.transactionProcessor.table(Transaction).by('id', navParams.data.transactionId);\n            this.transaction = this.engine.db.transactionProcessor.findTransactionsForRecord(transactionRecord, CreateSplitTransaction)[0];\n            if (this.category == null) {\n                this.category = this.engine.db.transactionProcessor.table(Category).by('id', this.transaction.amounts[0].categoryId);\n            }\n            this.data.date = Utils.toIonicFromYYYYMMDD(this.transaction.date);\n            this.data.expense = this.transaction.amounts[0].amount.cmp(Big(0)) >= 0;\n            this.data.amount = this.totalAmount().toString();\n            this.data.description = this.transaction.description;\n            this.data.status = this.transaction.status;\n            this.transaction.amounts.forEach(function (l) {\n                _this.data.lines.push({ categoryId: l.categoryId, amount: l.amount.times(_this.data.expense ? 1 : -1) + \"\", accountId: l.accountId });\n            });\n        }\n        else {\n            this.editing = false;\n            this.data.expense = true;\n            this.data.date = Utils.toIonicFromYYYYMMDD(this.navParams.data.date || Utils.nowYYYYMMDD());\n            this.data.description = this.navParams.data.description;\n            this.data.accountId = this.navParams.data.accountId;\n            this.data.status = 'realised';\n            this.data.amount = this.navParams.data.amount ? this.navParams.data.amount + '' : undefined;\n            if (this.data.amount)\n                this.data.expense = new Big(this.data.amount).cmp(Big(0)) >= 0;\n            this.data.lines.push({\n                categoryId: this.category ? this.category.id : undefined,\n                amount: this.data.amount,\n                accountId: this.data.accountId\n            });\n            if (!this.category) {\n                this.editLine(this.data.lines[0]);\n            }\n        }\n    }\n    AddEditSplitTransactionModal.prototype.editLine = function (line) {\n        var modal = this.modalController.create(AddEditSplitTransactionLineModal, {\n            parent: this,\n            lineIndex: this.data.lines.indexOf(line)\n        }, { showBackdrop: false, enableBackdropDismiss: false });\n        modal.present();\n    };\n    AddEditSplitTransactionModal.prototype.totalAmount = function () {\n        return this.data.lines.map(function (line) { return line.amount; }).reduce(function (total, amount) { return new Big((amount || '0').replace(',', '')).plus(total); }, new Big('0')).abs();\n    };\n    AddEditSplitTransactionModal.prototype.amountRemaining = function () {\n        return new Big((this.data.amount || '0').replace(',', '')).minus(this.totalAmount());\n    };\n    AddEditSplitTransactionModal.prototype.newLine = function () {\n        this.data.lines.push({\n            categoryId: null,\n            accountId: this.data.accountId,\n            amount: ''\n        });\n        this.editLine(this.data.lines[this.data.lines.length - 1]);\n    };\n    AddEditSplitTransactionModal.prototype.submit = function (event) {\n        var _this = this;\n        event.preventDefault();\n        var t;\n        if (!this.editing) {\n            t = new CreateSplitTransaction();\n        }\n        else {\n            t = this.transaction;\n        }\n        t.date = Utils.toYYYYMMDDFromIonic(this.data.date);\n        t.description = this.data.description;\n        t.status = this.data.status;\n        // Always clear out the records in the transaction and not \"merge\" them\n        // Our indexes should be preserved...\n        t.amounts = [];\n        this.data.lines.forEach(function (line) {\n            t.amounts.push({\n                categoryId: line.categoryId,\n                amount: new Big((line.amount || '0').replace(',', '')).times(_this.data.expense ? 1 : -1),\n                accountId: Number(line.accountId)\n            });\n        });\n        this.engine.db.applyTransaction(t);\n        this.viewCtrl.dismiss({ transactions: this.engine.db.transactionProcessor.findRecordsForTransaction(t, Transaction) });\n    };\n    AddEditSplitTransactionModal.prototype.cancel = function () {\n        this.viewCtrl.dismiss();\n    };\n    AddEditSplitTransactionModal.prototype.deleteTransactionConfirm = function () {\n        var _this = this;\n        var confirm = this.alertController.create({\n            title: 'Delete?',\n            message: 'Are you sure you want to delete this entire transaction?',\n            buttons: [\n                {\n                    text: 'Cancel'\n                }, {\n                    text: 'Delete',\n                    role: 'destructive',\n                    handler: function () {\n                        confirm.dismiss().then(function () {\n                            _this.deleteTransaction();\n                        });\n                        return false;\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    };\n    AddEditSplitTransactionModal.prototype.deleteTransaction = function () {\n        this.engine.db.deleteTransaction(this.transaction);\n        this.viewCtrl.dismiss();\n    };\n    AddEditSplitTransactionModal.prototype.toggleExpense = function () {\n        this.data.expense = !this.data.expense;\n    };\n    AddEditSplitTransactionModal.prototype.reconciledTotal = function () {\n        return new Big('0');\n    };\n    return AddEditSplitTransactionModal;\n}());\nAddEditSplitTransactionModal = __decorate([\n    Component({\n        templateUrl: 'add-edit-split-transaction.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Configuration !== \"undefined\" && Configuration) === \"function\" && _a || Object, typeof (_b = typeof ModalController !== \"undefined\" && ModalController) === \"function\" && _b || Object, typeof (_c = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof EngineFactory !== \"undefined\" && EngineFactory) === \"function\" && _e || Object, typeof (_f = typeof NavController !== \"undefined\" && NavController) === \"function\" && _f || Object, typeof (_g = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _g || Object])\n], AddEditSplitTransactionModal);\nexport { AddEditSplitTransactionModal };\nvar _a, _b, _c, _d, _e, _f, _g;\n//# sourceMappingURL=add-edit-split-transaction.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-split-transaction/add-edit-split-transaction.ts"]}